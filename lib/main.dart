import 'dart:async';
import 'dart:convert';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';
import 'package:http/http.dart' as http;
import 'package:provider/provider.dart';
import 'package:workmanager/workmanager.dart';

// API anahtarınızı buraya yazın
const String apiKey = 'e373ff6bb784bbdbb82816b0b72ae454';

// Şehir adı ve API URL'si
Future<Map<String, dynamic>> fetchWeather(String cityName) async {
  final response = await http.get(
    Uri.parse(
        'https://api.openweathermap.org/data/2.5/forecast?q=$cityName&cnt=16&units=metric&appid=$apiKey&lang=tr'),
  );

  if (response.statusCode == 200) {
    return json.decode(response.body);
  } else {
    throw Exception('Hava durumu verisi alınamadı');
  }
}

// Geri çağırıcı
void callbackDispatcher() {
  Workmanager().executeTask((task, inputData) async {
    NotificationService().showNotification();
    return Future.value(true);
  });
}

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp();

  await _requestPermission();

  Workmanager().initialize(callbackDispatcher);
  Workmanager().registerPeriodicTask(
    'id_unique_task',
    'simpleTask',
    frequency: const Duration(minutes: 15),
    initialDelay: const Duration(seconds: 10),
  );

  runApp(const MyApp());
}

// İzin isteği
Future<void> _requestPermission() async {
  final flutterLocalNotificationsPlugin = FlutterLocalNotificationsPlugin();

  if (flutterLocalNotificationsPlugin.resolvePlatformSpecificImplementation<
          IOSFlutterLocalNotificationsPlugin>() !=
      null) {
    await flutterLocalNotificationsPlugin
        .resolvePlatformSpecificImplementation<
            IOSFlutterLocalNotificationsPlugin>()
        ?.requestPermissions(alert: true, badge: true, sound: true);
  }
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (_) => FavoriSehirlerProvider()),
        ChangeNotifierProvider(create: (_) => GidilenSehirlerProvider()),
      ],
      child: MaterialApp(
        title: 'Seyahat Uygulaması',
        theme: ThemeData(
          primarySwatch: Colors.blue,
        ),
        home: const AnaSayfa(),
      ),
    );
  }
}

class NotificationService {
  FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
      FlutterLocalNotificationsPlugin();

  Future<void> initNotifications() async {
    const AndroidInitializationSettings initializationSettingsAndroid =
        AndroidInitializationSettings('@mipmap/ic_launcher');
    const InitializationSettings initializationSettings =
        InitializationSettings(android: initializationSettingsAndroid);
    await flutterLocalNotificationsPlugin.initialize(initializationSettings);
  }

  Future<void> showNotification() async {
    const AndroidNotificationDetails androidDetails =
        AndroidNotificationDetails(
      'channel_id',
      'channel_name',
      importance: Importance.max,
      priority: Priority.high,
      ticker: 'ticker',
    );

    const NotificationDetails platformDetails = NotificationDetails(
      android: androidDetails,
    );

    await flutterLocalNotificationsPlugin.show(
      0,
      'Bugün nereyi keşfetmek istersin?',
      'Keşfetmek için yeni bir yer önerisi alabilirsin!',
      platformDetails,
    );
  }
}

class YemekleriHaritadaGoster extends StatefulWidget {
  final double enlem;
  final double boylam;
  final String restoranIsmi;

  const YemekleriHaritadaGoster({
    super.key,
    required this.enlem,
    required this.boylam,
    required this.restoranIsmi,
  });

  @override
  State<YemekleriHaritadaGoster> createState() =>
      YemekleriHaritadaGosterState();
}

class YemekleriHaritadaGosterState extends State<YemekleriHaritadaGoster> {
  final Completer<GoogleMapController> _controller =
      Completer<GoogleMapController>();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("Haritada Göster")),
      body: GoogleMap(
        initialCameraPosition: CameraPosition(
          target:
              LatLng(widget.enlem, widget.boylam), // widget üzerinden erişim
          zoom: 13.5,
        ),
        markers: {
          Marker(
            markerId: const MarkerId('restoranIsmi'), // Marker ID tanımlaması
            position: LatLng(widget.enlem, widget.boylam), // Konum bilgisi
            infoWindow:
                InfoWindow(title: widget.restoranIsmi), // Info penceresi
          ),
        },
        onMapCreated: (GoogleMapController controller) {
          _controller.complete(
              controller); // Harita oluşturulunca controller tamamlanır
        },
      ),
    );
  }
}

class YerleriHaritadaGoster extends StatefulWidget {
  final double enlem;
  final double boylam;
  final String mekanIsmi;

  const YerleriHaritadaGoster(
      {super.key,
      required this.enlem,
      required this.boylam,
      required this.mekanIsmi});

  @override
  State<YerleriHaritadaGoster> createState() => YerleriHaritadaGosterState();
}

class YerleriHaritadaGosterState extends State<YerleriHaritadaGoster> {
  final Completer<GoogleMapController> _controller =
      Completer<GoogleMapController>();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("Haritada Göster")),
      body: GoogleMap(
        initialCameraPosition: CameraPosition(
          target:
              LatLng(widget.enlem, widget.boylam), // widget üzerinden erişim
          zoom: 13.5,
        ),
        markers: {
          Marker(
            markerId: const MarkerId('mekan'), // Marker ID tanımlaması
            position: LatLng(widget.enlem, widget.boylam), // Konum bilgisi
            infoWindow: InfoWindow(
              title: widget.mekanIsmi,
            ), // Info penceresi
          ),
        },
        onMapCreated: (GoogleMapController controller) {
          _controller.complete(
              controller); // Harita oluşturulunca controller tamamlanır
        },
      ),
    );
  }
}

class WeatherPage extends StatefulWidget {
  final String cityName;

  const WeatherPage({super.key, required this.cityName});

  @override
  _WeatherPageState createState() => _WeatherPageState();
}

class _WeatherPageState extends State<WeatherPage> {
  late Future<Map<String, dynamic>> _weatherData;

  @override
  void initState() {
    super.initState();
    _weatherData = fetchWeather(widget.cityName);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.blueAccent,
        title: RichText(
          text: TextSpan(
            style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 20),
            children: [
              const TextSpan(
                  text: 'Hava Durumu - ',
                  style: TextStyle(color: Colors.white)),
              TextSpan(
                  text: widget.cityName,
                  style: const TextStyle(color: Colors.white)),
            ],
          ),
        ),
        elevation: 10,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: FutureBuilder<Map<String, dynamic>>(
          future: _weatherData,
          builder: (context, snapshot) {
            if (snapshot.connectionState == ConnectionState.waiting) {
              return const Center(child: CircularProgressIndicator());
            } else if (snapshot.hasError) {
              return Center(child: Text('Hata: ${snapshot.error}'));
            } else if (snapshot.hasData) {
              var weatherList = snapshot.data?['list'];
              if (weatherList == null) {
                return const Center(
                    child: Text('Hava durumu verisi alınamadı'));
              }
              return ListView.builder(
                itemCount: weatherList.length,
                itemBuilder: (context, index) {
                  var weather = weatherList[index];
                  var dateTime =
                      DateTime.fromMillisecondsSinceEpoch(weather['dt'] * 1000);
                  var temperature = weather['main']['temp'];
                  var description = weather['weather'][0]['description'];
                  var icon = weather['weather'][0]['icon'];

                  return Card(
                    elevation: 10,
                    margin: const EdgeInsets.symmetric(vertical: 10),
                    shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(25)),
                    shadowColor: Colors.black.withOpacity(0.9),
                    child: ListTile(
                      leading: ClipRRect(
                        borderRadius: BorderRadius.circular(10),
                        child: Image.network(
                          'https://openweathermap.org/img/wn/$icon.png',
                          height: 60,
                          width: 60,
                          fit: BoxFit.cover,
                        ),
                      ),
                      title: Text(
                        '${dateTime.toLocal().toString().substring(0, 16)} - $description',
                        style: const TextStyle(
                            fontWeight: FontWeight.bold, fontSize: 17),
                      ),
                      subtitle: Row(
                        children: [
                          const Icon(Icons.thermostat,
                              color: Colors.orange, size: 20),
                          const SizedBox(width: 8),
                          Text(
                            '$temperature°C',
                            style: const TextStyle(
                                fontSize: 14, color: Colors.blueGrey),
                          ),
                        ],
                      ),
                    ),
                  );
                },
              );
            } else {
              return const Center(child: Text('Veri yok'));
            }
          },
        ),
      ),
    );
  }
}

class AnaSayfa extends StatelessWidget {
  const AnaSayfa({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text(
          '            Keşfet Türkiye',
          style: TextStyle(
            fontSize: 30,
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
        backgroundColor: Colors.transparent,
        elevation: 0,
      ),
      extendBodyBehindAppBar: true,
      body: Stack(
        children: [
          Positioned.fill(
            child: Opacity(
              opacity: 0.7,
              child: Image.network(
                "https://www.fibe.in/_next/image/?url=https%3A%2F%2Faltcont.fibe.in%2Fwp-content%2Fuploads%2F2019%2F04%2FBudget-Travel.jpg&w=3840&q=75",
                fit: BoxFit.fill,
              ),
            ),
          ),
          // İçerik
          Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                const SizedBox(height: 500),
                const Text(
                  'Hoş Geldiniz',
                  style: TextStyle(
                    fontSize: 45,
                    fontWeight: FontWeight.bold,
                    color: Colors.white,
                    shadows: [
                      Shadow(
                        blurRadius: 10,
                        color: Colors.black,
                        offset: Offset(2, 2),
                      ),
                    ],
                  ),
                ),
                const SizedBox(height: 12),
                SizedBox(
                  width: 200,
                  child: ElevatedButton(
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.greenAccent,
                    ),
                    onPressed: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                            builder: (context) => const LoginPage()),
                      );
                    },
                    child: const Text(
                      'Giriş Yap',
                      style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                      ),
                    ),
                  ),
                ),
                const SizedBox(height: 20),
                SizedBox(
                  width: 200,
                  child: ElevatedButton(
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.orangeAccent,
                    ),
                    onPressed: () {
                      Navigator.push(
                        context,
                        MaterialPageRoute(
                            builder: (context) => const RegisterPage()),
                      );
                    },
                    child: const Text(
                      'Üye Ol',
                      style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}

class LoginPage extends StatefulWidget {
  const LoginPage({super.key});

  @override
  _LoginPageState createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _usernameController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();
  final FirebaseAuth _auth = FirebaseAuth.instance;

  Future<void> _signIn(String username, String password) async {
    try {
      final UserCredential userCredential =
          await _auth.signInWithEmailAndPassword(
        email: username,
        password: password,
      );

      final User? user = userCredential.user;
      if (user != null && !user.emailVerified) {
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            backgroundColor: Colors.red,
            content: Text(
              'E-posta doğrulamanızı yapmanız gerekiyor.',
              style: TextStyle(
                fontSize: 15,
                fontWeight: FontWeight.bold,
                color: Colors.white,
              ),
            ),
          ),
        );
        return;
      }

      Navigator.pushReplacement(
        context,
        MaterialPageRoute(
          builder: (context) => const SehirSayfasi(),
        ),
      );
    } on FirebaseAuthException catch (e) {
      String errorMessage = 'Mail adresi ya da şifre hatalı!';
      if (e.code == 'user-not-found') {
        errorMessage = 'Kullanıcı bulunamadı';
      } else if (e.code == 'wrong-password') {
        errorMessage = 'Yanlış şifre';
      }
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          backgroundColor: Colors.red,
          content: Text(
            errorMessage,
            style: const TextStyle(
              fontSize: 15,
              fontWeight: FontWeight.bold,
              color: Colors.black,
            ),
          ),
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('         Giriş Yapınız'),
        backgroundColor: Colors.greenAccent,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              TextFormField(
                controller: _usernameController,
                decoration: const InputDecoration(
                  labelText: 'E-mail',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Mailinizi giriniz';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 20),
              TextFormField(
                controller: _passwordController,
                obscureText: true,
                decoration: const InputDecoration(
                  labelText: 'Şifre',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Şifre giriniz';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 20),
              SizedBox(
                width: double.infinity,
                child: ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(30),
                    ),
                    padding: const EdgeInsets.symmetric(vertical: 15),
                    backgroundColor: Colors.greenAccent,
                    elevation: 5,
                  ),
                  onPressed: () {
                    if (_formKey.currentState?.validate() ?? false) {
                      final username = _usernameController.text;
                      final password = _passwordController.text;

                      _signIn(username, password);
                    }
                  },
                  child: const Text(
                    'Giriş Yap',
                    style: TextStyle(fontSize: 20, color: Colors.black),
                  ),
                ),
              ),
              const SizedBox(height: 20),
              TextButton(
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => ForgotPasswordPage(),
                    ),
                  );
                },
                child: const Text(
                  'Şifremi Unuttum',
                  style: TextStyle(color: Colors.black),
                ),
              ),
              TextButton(
                onPressed: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => const RegisterPage(),
                    ),
                  );
                },
                child: const Text(
                  'Hesabınız yok mu? Kayıt Ol',
                  style: TextStyle(color: Colors.black),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class RegisterPage extends StatefulWidget {
  const RegisterPage({super.key});

  @override
  _RegisterPageState createState() => _RegisterPageState();
}

class _RegisterPageState extends State<RegisterPage> {
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _usernameController = TextEditingController();
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();
  final TextEditingController _confirmPasswordController =
      TextEditingController();

  final FirebaseAuth _auth = FirebaseAuth.instance;

  String? _validatePassword(String? value) {
    if (value == null || value.isEmpty) {
      return 'Şifreyi giriniz';
    }
    if (_passwordController.text != _confirmPasswordController.text) {
      return 'Şifreler eşleşmiyor';
    }
    return null;
  }

  Future<void> _register(String email, String password) async {
    try {
      final UserCredential userCredential =
          await _auth.createUserWithEmailAndPassword(
        email: email,
        password: password,
      );

      await userCredential.user?.sendEmailVerification();

      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          backgroundColor: Colors.green,
          content: Text(
            'Hesabınız oluşturuldu. E-posta adresinize doğrulama linki gönderildi.Onay verin ve tekrar giriş yapın',
            style: TextStyle(
              fontSize: 14,
              fontWeight: FontWeight.bold,
              color: Colors.white,
            ),
          ),
        ),
      );

      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => const LoginPage()),
      );
    } on FirebaseAuthException catch (e) {
      String errorMessage = 'Mail adresi ya da şifre hatalı!';
      if (e.code == 'weak-password') {
        errorMessage = 'Şifre çok zayıf';
      } else if (e.code == 'email-already-in-use') {
        errorMessage = 'Bu e-posta ile kayıtlı bir kullanıcı var';
      }
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          backgroundColor: Colors.red,
          content: Text(
            errorMessage,
            style: const TextStyle(
              fontSize: 15,
              fontWeight: FontWeight.bold,
              color: Colors.black,
            ),
          ),
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('          Üye Olunuz'),
        backgroundColor: Colors.orangeAccent,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              // Kullanıcı Adı
              TextFormField(
                controller: _usernameController,
                decoration: const InputDecoration(
                  labelText: 'Kullanıcı Adı',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Kullanıcı adınızı giriniz';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 20),

              // E-mail
              TextFormField(
                controller: _emailController,
                decoration: const InputDecoration(
                  labelText: 'E-mail',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Mailinizi giriniz';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 20),

              // Şifre
              TextFormField(
                controller: _passwordController,
                obscureText: true,
                decoration: const InputDecoration(
                  labelText: 'Şifre',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Şifre giriniz';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 20),

              // Şifreyi Tekrar Girin
              TextFormField(
                controller: _confirmPasswordController,
                obscureText: true,
                decoration: const InputDecoration(
                  labelText: 'Şifreyi Tekrar Girin',
                  border: OutlineInputBorder(),
                ),
                validator: _validatePassword,
              ),
              const SizedBox(height: 20),

              // Üye Ol Butonu
              SizedBox(
                width: double.infinity,
                child: ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(30),
                    ),
                    padding: const EdgeInsets.symmetric(vertical: 15),
                    backgroundColor: Colors.orangeAccent,
                    elevation: 5,
                  ),
                  onPressed: () {
                    if (_formKey.currentState?.validate() ?? false) {
                      final email = _emailController.text;
                      final password = _passwordController.text;

                      // Firebase ile kullanıcı kaydı
                      _register(email, password);
                    }
                  },
                  child: const Text(
                    'Üye Ol',
                    style: TextStyle(fontSize: 20, color: Colors.black),
                  ),
                ),
              ),
              const SizedBox(height: 20),

              // Zaten Hesabınız Var mı? Butonu
              TextButton(
                onPressed: () {
                  Navigator.pushReplacement(
                    context,
                    MaterialPageRoute(
                      builder: (context) => const LoginPage(),
                    ),
                  );
                },
                child: const Text(
                  'Zaten hesabınız var mı? Giriş yapın',
                  style: TextStyle(
                    color: Colors.black,
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class ForgotPasswordPage extends StatelessWidget {
  final TextEditingController _emailController = TextEditingController();

  ForgotPasswordPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Şifre Sıfırlama'),
        backgroundColor: Colors.greenAccent,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Center(
          child: SingleChildScrollView(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                TextField(
                  controller: _emailController,
                  decoration: const InputDecoration(
                    labelText: 'E-posta Adresi',
                    border: OutlineInputBorder(),
                  ),
                ),
                const SizedBox(height: 20),
                ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.greenAccent,
                    foregroundColor: Colors.black,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(30),
                    ),
                    padding: const EdgeInsets.symmetric(vertical: 20),
                    minimumSize: const Size(double.infinity, 30),
                  ),
                  onPressed: () async {
                    final email = _emailController.text;

                    if (email.isEmpty) {
                      ScaffoldMessenger.of(context).showSnackBar(
                        const SnackBar(
                            content: Text('E-posta adresini giriniz')),
                      );
                      return;
                    }

                    try {
                      // Firebase şifre sıfırlama linkini gönderme
                      await FirebaseAuth.instance
                          .sendPasswordResetEmail(email: email);
                      ScaffoldMessenger.of(context).showSnackBar(
                        const SnackBar(
                            content: Text('Şifre sıfırlama linki gönderildi')),
                      );

                      // Kullanıcıya mail üzerinden şifre sıfırlama işlemi yapması gerektiğini bildiriyoruz
                      showDialog(
                        context: context,
                        builder: (BuildContext context) {
                          return AlertDialog(
                            title: const Text('Şifreyi Yenileyin'),
                            content: const Text(
                                'Yeni şifrenizi, e-posta adresinizdeki linkten belirleyebilirsiniz.'),
                            actions: <Widget>[
                              TextButton(
                                onPressed: () {
                                  // LoginPage'e yönlendirme
                                  Navigator.pushAndRemoveUntil(
                                    context,
                                    MaterialPageRoute(
                                      builder: (context) => const LoginPage(),
                                    ),
                                    (route) =>
                                        false, // Tüm önceki sayfaları kapat
                                  );
                                },
                                child: const Text('Tamam'),
                              ),
                            ],
                          );
                        },
                      );
                    } catch (e) {
                      ScaffoldMessenger.of(context).showSnackBar(
                        SnackBar(content: Text('Hata: $e')),
                      );
                    }
                  },
                  child: const Text('Şifreyi Sıfırla'),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

class SehirSayfasi extends StatefulWidget {
  const SehirSayfasi({super.key});

  @override
  _SehirSayfasiState createState() => _SehirSayfasiState();
}

class _SehirSayfasiState extends State<SehirSayfasi> {
  List<Map<String, dynamic>> sehirler = [
    {
      "isim": "ADANA",
      "gorsel":
          "https://media.istockphoto.com/id/1895047516/tr/fotoğraf/adana-central-sabanci-mosque-with-seyhan-river-city-panoramic-and-top-view-adana-turkey.jpg?s=612x612&w=0&k=20&c=rMw7854PsUkzVBzgpvpy8YpMz-pBAPa_X1DXTQkA9Kk=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ADIYAMAN",
      "gorsel":
          "https://www.hisglobal.com.tr/assets/images/uploads/1598444401.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "AFYON",
      "gorsel":
          "https://media.istockphoto.com/id/1362949320/tr/fotoğraf/afyonkarahisar-cityscape-and-volcanic-rock-with-ancient-castle-in-evening.jpg?s=612x612&w=0&k=20&c=zHb9hXmu-qMcahBeOI3iDqz14R2E-1jrbFin8ig4_oE=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "AĞRI",
      "gorsel":
          "https://media.istockphoto.com/id/1059142464/tr/fotoğraf/khor-virap-manastırı-ve-mt-ararat.jpg?s=612x612&w=0&k=20&c=bBA2qlzkTGmxmcbwr4BSqZ8Xb3-QPK1JD5zfXb2Yo8k=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "AKSARAY",
      "gorsel":
          "https://media.istockphoto.com/id/1213836989/tr/fotoğraf/uçhisar-köyü-nensehit-ditrict-kapadokya-türkiye-muhteşem-kayalık-kale.jpg?s=612x612&w=0&k=20&c=3AlRFtF-lVUT9R9Gi6O7p8cejLml1xQsHFbGQkpHkrQ=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "AMASYA",
      "gorsel":
          "https://cdn2.enuygun.com/media/lib/1200x675/uploads/image/amasya-54292.webp",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ANKARA",
      "gorsel":
          "https://c0.wallpaperflare.com/preview/939/110/520/turkey-anıtkabir-monument-mausolea.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ANTALYA",
      "gorsel":
          "https://cdn.pixabay.com/photo/2021/06/10/15/52/antalya-6326400_640.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ARDAHAN",
      "gorsel": "https://www.ardahan.bel.tr/images/ardahan-hakkinda.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ARTVİN",
      "gorsel":
          "https://media.istockphoto.com/id/480968800/tr/fotoğraf/karagöl.jpg?s=612x612&w=0&k=20&c=UREx2v0_o2OUnacdX9Ajn9t0aLaE_1kopWSOTXbyX30=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "AYDIN",
      "gorsel":
          "https://cdn2.enuygun.com/media/lib/1200x675/uploads/image/aydin-53496.webp",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "BALIKESİR",
      "gorsel":
          "https://www.gmka.gov.tr/assets/img/photo-gallery-balikesir.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "BARTIN",
      "gorsel":
          "https://media.istockphoto.com/id/1558799524/tr/fotoğraf/sunrise-in-amasra.jpg?s=612x612&w=0&k=20&c=CW8rgf0rD8mF7dTXynu8Ki9yABrQWpjeJpx3nFPABU8=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "BATMAN",
      "gorsel":
          "https://atlastozu.com/wp-content/uploads/2014/05/img_20140517_151426.jpg?w=900",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "BAYBURT",
      "gorsel":
          "https://media.istockphoto.com/id/1310131943/tr/fotoğraf/bayburt-kalesi-manzarası.jpg?s=612x612&w=0&k=20&c=V7Q8KfUgB5EB9t2l2QBqwbNw1VGhL49FFI87-U3vagQ=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "BİLECİK",
      "gorsel":
          "https://bebka.org.tr/wp-content/uploads/2023/11/0128-kopyasi.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "BİNGÖL",
      "gorsel":
          "https://www.kulturportali.gov.tr/repoKulturPortali/large/17092015/e64497db-6be7-4c51-966d-2a622ea2d7a1.jpg?format=jpg&quality=50",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "BİTLİS",
      "gorsel":
          "https://www.shutterstock.com/image-photo/view-alemdar-bridge-vertical-frame-600nw-2390452291.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "BOLU",
      "gorsel":
          "https://dynamic-media-cdn.tripadvisor.com/media/photo-o/0f/b0/e9/fb/photo3jpg.jpg?w=1200&h=1200&s=1",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "BURDUR",
      "gorsel":
          "https://media.istockphoto.com/id/1362949310/tr/fotoğraf/residential-districts-of-burdur-and-great-mosque-on-winter-evening.jpg?s=612x612&w=0&k=20&c=QzuMB-Nus2WEvAKcCq4k1jjqIL6r7Yc5YeEgyRQAd-M=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "BURSA",
      "gorsel":
          "https://media.istockphoto.com/id/1056315542/tr/fotoğraf/kayak-ve-snowboard-kış-resort-uludağ.jpg?s=612x612&w=0&k=20&c=2EJUVIWJpbspK0dyHhfZO17QHh_VmfmJuTIiqtlwhYw=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ÇANAKKALE",
      "gorsel":
          "https://media.istockphoto.com/id/487431640/tr/fotoğraf/canakkale-martyrs-memorial-from-above-turkey.jpg?s=612x612&w=0&k=20&c=W1mmbZ6MKvV8AHSCdS-2djpHJcOH0DYxJlATAULVyfU=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ÇANKIRI",
      "gorsel":
          "https://www.kulturportali.gov.tr/repoKulturPortali/large/SehirRehberi//GezilecekYer/20190307141027217_cankiri_cankiri_kalesi_yaz_gunduz_hv_10.jpg?format=jpg&quality=50",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ÇORUM",
      "gorsel":
          "https://media.istockphoto.com/id/1369955589/tr/fotoğraf/ancient-gate-entrance-with-sphinx-from-the-hittite-period-in-alacahoyuk-corum-turkey.jpg?s=612x612&w=0&k=20&c=aIJm7Qmf4ea3DOIVKDEwBiFa9-__DsyMIEcXbLt847Y=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "DENİZLİ",
      "gorsel":
          "https://media.istockphoto.com/id/1194626638/tr/fotoğraf/denizli-pamukkalede-gün-doğumunda-traverten-havuzlarında-sıcak-hava-balonları-kireçtaşı.jpg?s=612x612&w=0&k=20&c=vZ1kqXZE1ubnrK8sLf-4_19eTOEd8hUB7ypjVFf61T4=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "DİYARBAKIR",
      "gorsel":
          "https://media.istockphoto.com/id/1070450376/tr/fotoğraf/diyarbakır-tarihi-on-gözlü-köprü-görünümü.jpg?s=612x612&w=0&k=20&c=9SKP-LOXgmzjVXtcVOArUrqGqKYjPfDkw-gWjE3MlFw=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "DÜZCE",
      "gorsel":
          "https://media.istockphoto.com/id/1495780790/tr/fotoğraf/duzce-akcakoca-genoese-castle-aerial-view-of-public-park-located-by-the-sea-scenic.jpg?s=612x612&w=0&k=20&c=jnzRJx57SjrJ6FReN0HDebsMEPsI-HbAVEtYQBaENNw=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "EDİRNE",
      "gorsel":
          "https://www.shutterstock.com/image-photo/selimiye-mosque-exterior-view-edirne-600nw-2442627573.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ELAZIĞ",
      "gorsel":
          "https://media.istockphoto.com/id/954937204/tr/fotoğraf/türkiye-elazığ-harput-kalesi-görünüm.jpg?s=612x612&w=0&k=20&c=FHJisRZb3QauoOFoYKHh34tEap-fi3BX77Y--hy5oxo=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ERZİNCAN",
      "gorsel":
          "https://media.istockphoto.com/id/1296911969/tr/fotoğraf/kemaliye-vadisi-ile-egin-arasındaki-kemaliye-ilçesinin-havadan-manzara-görünümü-erzincan.jpg?s=612x612&w=0&k=20&c=ID2wRUAj0Ko8wpHtntHLXxaYudrGyf-B69ypE1CXj_k=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ERZURUM",
      "gorsel":
          "https://media.istockphoto.com/id/1199253593/tr/fotoğraf/erzurumda-çeşmeli-yakutiye-medresesi.jpg?s=612x612&w=0&k=20&c=-WqHunU96WlVZXxEErurLAIecY7ZOIDKbYjdpxc9ffQ=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ESKİŞEHİR",
      "gorsel":
          "https://e1.pxfuel.com/desktop-wallpaper/47/792/desktop-wallpaper-masal-Şatosu-eskişehir-resimleri-eskisehir.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "GAZİANTEP",
      "gorsel":
          "https://www.kulturportali.gov.tr/contents/images/20170301114532159_zeugma_cingene_kizi_poster.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "GİRESUN",
      "gorsel":
          "https://media.istockphoto.com/id/1741615967/tr/fotoğraf/eynesil-castle-in-giresun-turkey.jpg?s=612x612&w=0&k=20&c=1rwR5XuUJrvBj02RnTFtQxwPTkbmgsW2JVjKe4DmEgM=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "GÜMÜŞHANE",
      "gorsel":
          "https://i.arkeolojikhaber.com/pool_file/2019/25/51415_kovkalesi-kov-gumushane-180619-2000x.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "HAKKARİ",
      "gorsel":
          "https://media.istockphoto.com/id/876186030/tr/fotoğraf/zap-nehri.jpg?s=612x612&w=0&k=20&c=se1MaEGCGWjv6fFi0EQKU9RS_3h2t6vAcv0hPox9l9I=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "HATAY",
      "gorsel":
          "https://media.istockphoto.com/id/1419287772/tr/fotoğraf/antakya.jpg?s=612x612&w=0&k=20&c=pLINwO3Ua7D4M5ZXoSNdVC6MHH9z4MDFMgahHv_lrKE=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "IĞDIR",
      "gorsel":
          "https://media-cdn.tripadvisor.com/media/photo-s/02/34/71/5e/mount-ararat.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "ISPARTA",
      "gorsel":
          "https://media.istockphoto.com/id/1275783703/tr/fotoğraf/egirdir-kasabası-ve-gölü.jpg?s=612x612&w=0&k=20&c=5k5BQASJdXuM_zSF809JDAgA_ovoCIXhP2-ZRhuy2Pc=",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "İSTANBUL",
      "gorsel":
          "https://i.pinimg.com/1200x/16/c9/8a/16c98a8f1190538e4a4ef935118c2193.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
    {
      "isim": "İZMİR",
      "gorsel":
      "https://st3.depositphotos.com/1871501/33278/i/450/depositphotos_332784402-stock-photo-konak-square-street-view-old.jpg",
      "height": 80.0,
      "width": 80.0,
      "fit": BoxFit.cover,
    },
  ];

  void sehirSayfasinaGit(String sehirIsmi, BuildContext context) {
    if (sehirIsmi == "ADANA") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const AdanaSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ADIYAMAN") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) =>
              const AdiyamanSayfasi(), // Türkçe karakter kaldırıldı
        ),
      );
    } else if (sehirIsmi == "AFYON") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const AfyonSayfasi(),
        ),
      );
    } else if (sehirIsmi == "AĞRI") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) =>
              const AgriSayfasi(), // Türkçe karakter kaldırıldı
        ),
      );
    } else if (sehirIsmi == "AKSARAY") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const AksaraySayfasi(),
        ),
      );
    } else if (sehirIsmi == "AMASYA") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const AmasyaSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ANKARA") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const AnkaraSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ANTALYA") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const AntalyaSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ARDAHAN") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const ArdahanSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ARTVİN") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const ArtvinSayfasi(),
        ),
      );
    } else if (sehirIsmi == "AYDIN") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const AydinSayfasi(),
        ),
      );
    } else if (sehirIsmi == "BALIKESİR") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const BalikesirSayfasi(),
        ),
      );
    } else if (sehirIsmi == "BARTIN") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const BartinSayfasi(),
        ),
      );
    } else if (sehirIsmi == "BATMAN") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const BatmanSayfasi(),
        ),
      );
    } else if (sehirIsmi == "BAYBURT") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const BayburtSayfasi(),
        ),
      );
    } else if (sehirIsmi == "BİLECİK") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const BilecikSayfasi(),
        ),
      );
    } else if (sehirIsmi == "BİNGÖL") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const BingolSayfasi(),
        ),
      );
    } else if (sehirIsmi == "BİTLİS") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const BitlisSayfasi(),
        ),
      );
    } else if (sehirIsmi == "BOLU") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const BoluSayfasi(),
        ),
      );
    } else if (sehirIsmi == "BURDUR") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const BurdurSayfasi(),
        ),
      );
    } else if (sehirIsmi == "BURSA") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const BursaSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ÇANAKKALE") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const CanakkaleSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ÇANKIRI") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const CankiriSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ÇORUM") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const CorumSayfasi(),
        ),
      );
    } else if (sehirIsmi == "DENİZLİ") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const DenizliSayfasi(),
        ),
      );
    } else if (sehirIsmi == "DİYARBAKIR") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const DiyarbakirSayfasi(),
        ),
      );
    } else if (sehirIsmi == "DÜZCE") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const DuzceSayfasi(),
        ),
      );
    } else if (sehirIsmi == "EDİRNE") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const EdirneSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ELAZIĞ") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const ElazigSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ERZİNCAN") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const ErzincanSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ERZURUM") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const ErzurumSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ESKİŞEHİR") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const EskisehirSayfasi(),
        ),
      );
    } else if (sehirIsmi == "GAZİANTEP") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const GaziantepSayfasi(),
        ),
      );
    } else if (sehirIsmi == "GİRESUN") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const GiresunSayfasi(),
        ),
      );
    } else if (sehirIsmi == "GÜMÜŞHANE") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const GumushaneSayfasi(),
        ),
      );
    } else if (sehirIsmi == "HAKKARİ") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const HakkariSayfasi(),
        ),
      );
    } else if (sehirIsmi == "HATAY") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const HataySayfasi(),
        ),
      );
    } else if (sehirIsmi == "IĞDIR") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const IgdirSayfasi(),
        ),
      );
    } else if (sehirIsmi == "ISPARTA") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const IspartaSayfasi(),
        ),
      );
    } else if (sehirIsmi == "İSTANBUL") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const IstanbulSayfasi(),
        ),
      );
    }
    else if (sehirIsmi == "İZMİR") {
      Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) => const IzmirSayfasi(),
        ),
      );
    }
  }

  List<Map<String, dynamic>> filtrelenmisSehirler = [];
  TextEditingController aramaKontrol = TextEditingController();

  @override
  void initState() {
    super.initState();
    filtrelenmisSehirler = sehirler; // İlk durumda tüm şehirler gösterilecek
  }

  void sehirleriFiltrele(String arama) {
    setState(() {
      filtrelenmisSehirler = sehirler
          .where((sehir) =>
              sehir["isim"].toLowerCase().contains(arama.toLowerCase()))
          .toList();
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Şehirler'),
        backgroundColor: Colors.greenAccent,
      ),
      body: Column(
        children: [
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: Container(
              decoration: BoxDecoration(
                color: Colors.white, // Arka plan rengi
                borderRadius:
                    BorderRadius.circular(17.0), // Daha yuvarlak köşeler
                boxShadow: [
                  BoxShadow(
                    color: Colors.grey.withOpacity(0.9), // Gölge rengi
                    spreadRadius: 1, // Gölgenin yayılma mesafesi
                    blurRadius: 1, // Gölgenin bulanıklığı
                    offset: const Offset(0, 3), // Gölgenin pozisyonu
                  ),
                ],
              ),
              child: TextField(
                controller: aramaKontrol,
                decoration: InputDecoration(
                  labelText: "",
                  labelStyle: TextStyle(
                    color: Colors.grey.shade600, // Daha zarif bir yazı rengi
                    fontSize: 3,
                  ),
                  hintText: "Keşfetmek İstediğiniz Şehri Yazınız",
                  hintStyle: TextStyle(
                    color: Colors
                        .grey.shade400, // Daha yumuşak bir placeholder rengi
                  ),
                  prefixIcon: const Icon(
                    Icons.search,
                    color: Colors.greenAccent, // İkon rengi
                  ),
                  border: InputBorder.none, // Çizgileri kaldır
                  contentPadding: const EdgeInsets.symmetric(
                    vertical: 12.0,
                    horizontal: 12.0,
                  ), // İç boşluklar
                ),
                onChanged: sehirleriFiltrele,
              ),
            ),
          ),
          Expanded(
            child: GridView.builder(
              gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                crossAxisCount: 1, // 1 sütunlu grid
                crossAxisSpacing: 8.0, // Sütunlar arasındaki boşluk
                mainAxisSpacing: 8.0, // Satırlar arasındaki boşluk
              ),
              itemCount: filtrelenmisSehirler.length,
              itemBuilder: (context, index) {
                final sehir = filtrelenmisSehirler[index];
                return Card(
                  elevation: 3,
                  margin: const EdgeInsets.all(5),
                  child: Stack(
                    children: [
                      // Şehir görseli
                      Container(
                        decoration: BoxDecoration(
                          image: DecorationImage(
                            image: NetworkImage(sehir['gorsel']),
                            fit: BoxFit
                                .cover, // Görselin kutunun tamamını kaplaması
                          ),
                          borderRadius: BorderRadius.circular(20.0),
                        ),
                      ),
                      // Saydamlık efekti
                      Container(
                        decoration: BoxDecoration(
                          color:
                              Colors.black.withOpacity(0.5), // Saydamlık efekti
                          borderRadius: BorderRadius.circular(20.0),
                        ),
                      ),
                      // Şehir ismi ve Keşfet butonu
                      Center(
                        child: Column(
                          mainAxisSize: MainAxisSize.min,
                          children: [
                            // Şehir ismi
                            Text(
                              sehir['isim'],
                              style: const TextStyle(
                                fontSize: 50, // Daha büyük yazı boyutu
                                fontWeight: FontWeight.bold,
                                color: Colors
                                    .white, // Yazının görünmesi için beyaz renk
                              ),
                              textAlign: TextAlign.center,
                            ),
                            const SizedBox(height: 10),
                            // Keşfet butonu
                            Container(
                              padding: const EdgeInsets.symmetric(
                                vertical: 8.0,
                                horizontal: 15.0,
                              ),
                              decoration: BoxDecoration(
                                color: Colors.white, // Beyaz arka plan
                                borderRadius: BorderRadius.circular(8.0),
                              ),
                              child: InkWell(
                                onTap: () {
                                  sehirSayfasinaGit(sehir['isim'], context);
                                },
                                child: const Text(
                                  'KEŞFET',
                                  style: TextStyle(
                                    fontSize: 20,
                                    fontWeight: FontWeight.bold,
                                    color: Colors.black, // Siyah yazı
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                );
              },
            ),
          ),
        ],
      ),
      bottomNavigationBar: BottomAppBar(
        color: Colors.greenAccent,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Gidilen şehirler butonu
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class GidilenSehirlerProvider with ChangeNotifier {
  final List<String> _gidilenSehirler = [];

  List<String> get gidilenSehirler => _gidilenSehirler;

  void addGidilenSehir(String sehir) {
    if (!_gidilenSehirler.contains(sehir)) {
      _gidilenSehirler.add(sehir);
      notifyListeners(); // Liste güncellendikçe dinleyicilere bildirim gönderir.
    }
  }

  void removeGidilenSehir(String sehir) {
    _gidilenSehirler.remove(sehir);
    notifyListeners();
  }
}

class GidilenlerSayfasi extends StatelessWidget {
  const GidilenlerSayfasi({super.key});

  @override
  Widget build(BuildContext context) {
    // Favori şehirlerin listesini al
    final gidilenSehirler =
        context.watch<GidilenSehirlerProvider>().gidilenSehirler;

    return Scaffold(
      appBar: AppBar(
        title: const Text('    Ziyaret Edilen Şehirler'),
        backgroundColor: Colors.yellowAccent,
      ),
      body: ListView.builder(
        itemCount: gidilenSehirler.length,
        itemBuilder: (context, index) {
          final sehir = gidilenSehirler[index];
          return GestureDetector(
            onTap: () {
              // Şehir adlarına göre yönlendirme
              if (sehir == 'İstanbul') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const IstanbulSayfasi()),
                );
              } else if (sehir == 'Ankara') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const AnkaraSayfasi()),
                );
              } else if (sehir == 'Antalya') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const AntalyaSayfasi()),
                );
              } else if (sehir == 'Adana') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const AdanaSayfasi()),
                );
              } else if (sehir == 'Afyon') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const AfyonSayfasi()),
                );
              } else if (sehir == 'Aksaray') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const AksaraySayfasi()),
                );
              } else if (sehir == 'Adıyaman') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const AdiyamanSayfasi()),
                );
              } else if (sehir == 'Artvin') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ArtvinSayfasi()),
                );
              } else if (sehir == 'Aydın') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const AydinSayfasi()),
                );
              } else if (sehir == 'Balıkesir') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BalikesirSayfasi()),
                );
              } else if (sehir == 'Bartın') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BartinSayfasi()),
                );
              } else if (sehir == 'Batman') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BatmanSayfasi()),
                );
              } else if (sehir == 'Bayburt') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BayburtSayfasi()),
                );
              } else if (sehir == 'Bilecik') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BilecikSayfasi()),
                );
              } else if (sehir == 'Bingöl') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BingolSayfasi()),
                );
              } else if (sehir == 'Bitlis') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BitlisSayfasi()),
                );
              } else if (sehir == 'Bolu') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const BoluSayfasi()),
                );
              } else if (sehir == 'Burdur') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BurdurSayfasi()),
                );
              } else if (sehir == 'Bursa') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const BursaSayfasi()),
                );
              } else if (sehir == 'Çanakkale') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const CanakkaleSayfasi()),
                );
              } else if (sehir == 'Çankırı') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const CankiriSayfasi()),
                );
              } else if (sehir == 'Çorum') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const CorumSayfasi()),
                );
              } else if (sehir == 'Denizli') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const DenizliSayfasi()),
                );
              } else if (sehir == 'Diyarbakır') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const DiyarbakirSayfasi()),
                );
              } else if (sehir == 'Düzce') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const DuzceSayfasi()),
                );
              } else if (sehir == 'Edirne') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const EdirneSayfasi()),
                );
              } else if (sehir == 'Elazığ') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ElazigSayfasi()),
                );
              } else if (sehir == 'Erzincan') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ErzincanSayfasi()),
                );
              } else if (sehir == 'Erzurum') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ErzurumSayfasi()),
                );
              } else if (sehir == 'Eskişehir') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const EskisehirSayfasi()),
                );
              } else if (sehir == 'Gaziantep') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GaziantepSayfasi()),
                );
              } else if (sehir == 'Giresun') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GiresunSayfasi()),
                );
              } else if (sehir == 'Gümüşhane') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GumushaneSayfasi()),
                );
              } else if (sehir == 'Hakkari') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const HakkariSayfasi()),
                );
              } else if (sehir == 'Hatay') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const HataySayfasi()),
                );
              } else if (sehir == 'Iğdır') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const IgdirSayfasi()),
                );
              } else if (sehir == 'Isparta') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const IspartaSayfasi()),
                );
              }
              // Diğer şehirler için benzer yönlendirmeleri ekleyebilirsiniz
            },
            child: Container(
              margin: const EdgeInsets.symmetric(vertical: 10, horizontal: 15),
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.yellowAccent, // Yarı şeffaf kırmızı
                borderRadius: BorderRadius.circular(8),
              ),
              child: Text(
                sehir,
                style: const TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                  color: Colors.black,
                ),
              ),
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        color: Colors.yellowAccent,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class FavoriSehirlerProvider with ChangeNotifier {
  final List<String> _favoriSehirler = [];

  List<String> get favoriSehirler => _favoriSehirler;

  void addFavoriSehir(String sehir) {
    if (!_favoriSehirler.contains(sehir)) {
      _favoriSehirler.add(sehir);
      notifyListeners(); // Liste güncellendikçe dinleyicilere bildirim gönderir.
    }
  }

  void removeFavoriSehir(String sehir) {
    _favoriSehirler.remove(sehir);
    notifyListeners();
  }
}

class FavorilerSayfasi extends StatelessWidget {
  const FavorilerSayfasi({super.key});

  @override
  Widget build(BuildContext context) {
    // Favori şehirlerin listesini al
    final favoriSehirler =
        context.watch<FavoriSehirlerProvider>().favoriSehirler;

    return Scaffold(
      appBar: AppBar(
        title: const Text('         Favori Şehirler'),
        backgroundColor: Colors.redAccent,
      ),
      body: ListView.builder(
        itemCount: favoriSehirler.length,
        itemBuilder: (context, index) {
          final sehir = favoriSehirler[index];
          return GestureDetector(
            onTap: () {
              // Şehir adlarına göre yönlendirme
              if (sehir == 'İstanbul') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const IstanbulSayfasi()),
                );
              } else if (sehir == 'Ankara') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const AnkaraSayfasi()),
                );
              } else if (sehir == 'Antalya') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const AntalyaSayfasi()),
                );
              } else if (sehir == 'Adana') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const AdanaSayfasi()),
                );
              } else if (sehir == 'Afyon') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const AfyonSayfasi()),
                );
              } else if (sehir == 'Aksaray') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const AksaraySayfasi()),
                );
              } else if (sehir == 'Adıyaman') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const AdiyamanSayfasi()),
                );
              } else if (sehir == 'Artvin') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ArtvinSayfasi()),
                );
              } else if (sehir == 'Aydın') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const AydinSayfasi()),
                );
              } else if (sehir == 'Balıkesir') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BalikesirSayfasi()),
                );
              } else if (sehir == 'Bartın') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BartinSayfasi()),
                );
              } else if (sehir == 'Batman') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BatmanSayfasi()),
                );
              } else if (sehir == 'Bayburt') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BayburtSayfasi()),
                );
              } else if (sehir == 'Bilecik') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BilecikSayfasi()),
                );
              } else if (sehir == 'Bingöl') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BingolSayfasi()),
                );
              } else if (sehir == 'Bitlis') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BitlisSayfasi()),
                );
              } else if (sehir == 'Bolu') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const BoluSayfasi()),
                );
              } else if (sehir == 'Burdur') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const BurdurSayfasi()),
                );
              } else if (sehir == 'Bursa') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const BursaSayfasi()),
                );
              } else if (sehir == 'Çanakkale') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const CanakkaleSayfasi()),
                );
              } else if (sehir == 'Çankırı') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const CankiriSayfasi()),
                );
              } else if (sehir == 'Çorum') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const CorumSayfasi()),
                );
              } else if (sehir == 'Denizli') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const DenizliSayfasi()),
                );
              } else if (sehir == 'Diyarbakır') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const DiyarbakirSayfasi()),
                );
              } else if (sehir == 'Düzce') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const DuzceSayfasi()),
                );
              } else if (sehir == 'Edirne') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const EdirneSayfasi()),
                );
              } else if (sehir == 'Elazığ') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ElazigSayfasi()),
                );
              } else if (sehir == 'Erzincan') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ErzincanSayfasi()),
                );
              } else if (sehir == 'Erzurum') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ErzurumSayfasi()),
                );
              } else if (sehir == 'Eskişehir') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const EskisehirSayfasi()),
                );
              } else if (sehir == 'Gaziantep') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GaziantepSayfasi()),
                );
              } else if (sehir == 'Giresun') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GiresunSayfasi()),
                );
              } else if (sehir == 'Gümüşhane') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GumushaneSayfasi()),
                );
              } else if (sehir == 'Hakkari') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const HakkariSayfasi()),
                );
              } else if (sehir == 'Hatay') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const HataySayfasi()),
                );
              } else if (sehir == 'Iğdır') {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const IgdirSayfasi()),
                );
              } else if (sehir == 'Isparta') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const IspartaSayfasi()),
                );
              }
              else if (sehir == 'İzmir') {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const IzmirSayfasi()),
                );
              }
              // Diğer şehirler için benzer yönlendirmeleri ekleyebilirsiniz
            },
            child: Container(
              margin: const EdgeInsets.symmetric(vertical: 10, horizontal: 15),
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.redAccent, // Yarı şeffaf kırmızı
                borderRadius: BorderRadius.circular(8),
              ),
              child: Text(
                sehir,
                style: const TextStyle(
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                  color: Colors.black,
                ),
              ),
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        color: Colors.redAccent,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class ProfilSayfasi extends StatelessWidget {
  const ProfilSayfasi({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Profilim'),
        backgroundColor: Colors.blue,
      ),
      body: Padding(
        padding: const EdgeInsets.all(12.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            GridView.count(
              crossAxisCount: 2,
              shrinkWrap: true,
              crossAxisSpacing: 15,
              mainAxisSpacing: 10,
              children: [
                _buildButton(context, 'Kişisel Bilgiler', Icons.person, () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => const KisiselBilgilerSayfasi(),
                    ),
                  );
                }),
                _buildButton(context, 'Bizi Değerlendir', Icons.star, () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => const BiziDegerlendirSayfasi(),
                    ),
                  );
                }),
                _buildButton(context, 'Destek', Icons.support, () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => const DestekSayfasi(),
                    ),
                  );
                }),
                _buildButton(context, 'Çıkış Yap-Sil', Icons.exit_to_app, () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => const CikisYapSilSayfasi(),
                    ),
                  );
                }),
              ],
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        color: Colors.blue,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildButton(BuildContext context, String title, IconData icon,
      VoidCallback onPressed) {
    return ElevatedButton(
      style: ElevatedButton.styleFrom(
        backgroundColor: Colors.white,
        padding: const EdgeInsets.all(10.0),
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(8.0),
        ),
        side: const BorderSide(color: Colors.blue, width: 1.5),
      ),
      onPressed: onPressed,
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Icon(icon, size: 30, color: Colors.blue),
          const SizedBox(height: 10),
          Text(
            title,
            style: const TextStyle(fontSize: 14, color: Colors.black),
            textAlign: TextAlign.center,
          ),
        ],
      ),
    );
  }
}

class KisiselBilgilerSayfasi extends StatefulWidget {
  const KisiselBilgilerSayfasi({super.key});

  @override
  _KisiselBilgilerSayfasiState createState() => _KisiselBilgilerSayfasiState();
}

class _KisiselBilgilerSayfasiState extends State<KisiselBilgilerSayfasi> {
  final TextEditingController _adSoyadController = TextEditingController();
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _telefonController = TextEditingController();
  final TextEditingController _adresController = TextEditingController();

  bool _bilgiKaydedildi = false;

  String? _adSoyad;
  String? _email;
  String? _telefon;
  String? _adres;

  void _bilgileriKaydet() {
    setState(() {
      _adSoyad = _adSoyadController.text;
      _email = _emailController.text;
      _telefon = _telefonController.text;
      _adres = _adresController.text;
      _bilgiKaydedildi = true;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Kişisel Bilgiler'),
        backgroundColor: Colors.blue,
      ),
      body: Padding(
        padding: const EdgeInsets.all(10.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Profilinizi oluşturmak ister misiniz? başlığını sadece bilgiler kaydedilmeden önce göster
            if (!_bilgiKaydedildi)
              const Text(
                'Profilinizi oluşturmak ister misiniz?',
                style: TextStyle(
                    fontSize: 20,
                    fontWeight: FontWeight.bold,
                    color: Colors.blueAccent),
              ),
            const SizedBox(height: 1),

            // Bilgi giriş alanları veya kaydedilmiş bilgiler
            if (!_bilgiKaydedildi)
              Container(
                decoration: BoxDecoration(
                  color: Colors.grey[200],
                  borderRadius: BorderRadius.circular(12),
                ),
                padding: const EdgeInsets.all(16),
                child: Column(
                  children: [
                    TextField(
                      controller: _adSoyadController,
                      decoration: const InputDecoration(
                        labelText: 'Ad Soyad',
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.all(Radius.circular(15)),
                        ),
                      ),
                    ),
                    const SizedBox(height: 10),
                    TextField(
                      controller: _emailController,
                      decoration: const InputDecoration(
                        labelText: 'E-posta',
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.all(Radius.circular(15)),
                        ),
                      ),
                      keyboardType: TextInputType.emailAddress,
                    ),
                    const SizedBox(height: 10),
                    TextField(
                      controller: _telefonController,
                      decoration: const InputDecoration(
                        labelText: 'Telefon',
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.all(Radius.circular(15)),
                        ),
                      ),
                      keyboardType: TextInputType.phone,
                    ),
                    const SizedBox(height: 10),
                    TextField(
                      controller: _adresController,
                      decoration: const InputDecoration(
                        labelText: 'Adres',
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.all(Radius.circular(15)),
                        ),
                      ),
                      maxLines: 3,
                    ),
                    const SizedBox(height: 20),
                    ElevatedButton(
                      onPressed: _bilgileriKaydet,
                      child: const Text('Kaydet'),
                    ),
                  ],
                ),
              ),

            // Kullanıcı bilgilerini kaydettikten sonra bilgileri göster
            if (_bilgiKaydedildi)
              Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Card(
                    child: ListTile(
                      leading: const Icon(Icons.person, color: Colors.blue),
                      title: const Text('Ad Soyad',
                          style: TextStyle(fontSize: 19)),
                      subtitle: Text(_adSoyad!),
                    ),
                  ),
                  Card(
                    child: ListTile(
                      leading: const Icon(Icons.email, color: Colors.blue),
                      title:
                          const Text('E-posta', style: TextStyle(fontSize: 19)),
                      subtitle: Text(_email!),
                    ),
                  ),
                  if (_telefon != null && _telefon!.isNotEmpty)
                    Card(
                      child: ListTile(
                        leading: const Icon(Icons.phone, color: Colors.blue),
                        title: const Text('Telefon',
                            style: TextStyle(fontSize: 19)),
                        subtitle: Text(_telefon!),
                      ),
                    ),
                  if (_adres != null && _adres!.isNotEmpty)
                    Card(
                      child: ListTile(
                        leading:
                            const Icon(Icons.location_on, color: Colors.blue),
                        title:
                            const Text('Adres', style: TextStyle(fontSize: 19)),
                        subtitle: Text(_adres!),
                      ),
                    ),
                ],
              ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        color: Colors.blue,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }

  @override
  void dispose() {
    _adSoyadController.dispose();
    _emailController.dispose();
    _telefonController.dispose();
    _adresController.dispose();
    super.dispose();
  }
}

class BiziDegerlendirSayfasi extends StatelessWidget {
  const BiziDegerlendirSayfasi({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('        Bizi Değerlendir'),
        backgroundColor: Colors.blue,
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text('Uygulamamıza puan vermek için yıldızlara tıklayın',
                style: TextStyle(
                    fontWeight: FontWeight.bold,
                    fontSize: 16,
                    color: Colors.black)),
            StarRating(onRatingChanged: (rating) {
              _showRatingDialog(context); // Yıldız tıklanırsa dialog göster
            }),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        color: Colors.blue,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }

  // Kullanıcı yıldızlara tıkladığında, yönlendirilmek istiyor mu diye soran bir dialog
  void _showRatingDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('Google Play\'e yönlendirilmek istiyor musunuz?'),
        content: const Text(
            'Uygulamamızı Google Play üzerinden değerlendirmek için yönlendirileceksiniz.'),
        actions: <Widget>[
          TextButton(
            onPressed: () {
              Navigator.of(context)
                  .pop(); // Kullanıcı "Hayır" derse dialog kapanır
            },
            child: const Text('Hayır'),
          ),
          TextButton(
            onPressed: () {
              Navigator.of(context)
                  .pop(); // Kullanıcı "Evet" derse dialog kapanır
              // Burada, ileride Google Play'e yönlendirebilirsiniz
              print('Google Play yönlendirmesi yapılabilir.');
            },
            child: const Text('Evet'),
          ),
        ],
      ),
    );
  }
}

class StarRating extends StatelessWidget {
  final ValueChanged<double> onRatingChanged;

  const StarRating({super.key, required this.onRatingChanged});

  @override
  Widget build(BuildContext context) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.center, // Yıldızları ortaladık
      children: List.generate(5, (index) {
        return IconButton(
          icon: const Icon(
            Icons.star,
            color: Colors.blue,
          ),
          onPressed: () {
            onRatingChanged(
                index + 1.0); // Derecelendirme yapıldığında geri bildirim
          },
        );
      }),
    );
  }
}

class DestekSayfasi extends StatefulWidget {
  const DestekSayfasi({super.key});

  @override
  _DestekSayfasiState createState() => _DestekSayfasiState();
}

class _DestekSayfasiState extends State<DestekSayfasi> {
  // Form anahtarı
  final _formKey = GlobalKey<FormState>();

  // Kontrolörler
  final TextEditingController _adController = TextEditingController();
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _mesajController = TextEditingController();

  // Gönderim işlemi
  void _gonder() {
    if (_formKey.currentState!.validate()) {
      // E-posta gönderme işlemi buraya eklenebilir
      // Örnek: E-posta gönderimi başarılı olduğunda
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text('Mesajınız başarıyla gönderildi!',
              style: TextStyle(color: Colors.black)),
          backgroundColor: Colors.greenAccent, // SnackBar rengini değiştir
        ),
      );

      // Formu sıfırla ve kontrolörleri temizle
      _adController.clear();
      _emailController.clear();
      _mesajController.clear();
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Destek'),
        backgroundColor: Colors.blue,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const Text(
                'Lütfen sorununuzu bizimle paylaşın',
                style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              // Ad
              TextFormField(
                controller: _adController,
                decoration: const InputDecoration(
                  labelText: 'Adınız',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Adınızı giriniz';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 10),
              // E-posta
              TextFormField(
                controller: _emailController,
                decoration: const InputDecoration(
                  labelText: 'E-posta adresiniz',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'E-posta adresinizi giriniz';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 10),
              // Mesaj
              TextFormField(
                controller: _mesajController,
                decoration: const InputDecoration(
                  labelText: 'Mesajınız',
                  border: OutlineInputBorder(),
                ),
                maxLines: 5,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Mesajınızı giriniz';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: _gonder,
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.blue, // Mavi renk
                    minimumSize:
                        const Size(double.infinity, 50), // Butonu genişlet
                  ),
                  child: const Text(
                    'Gönder',
                    style: TextStyle(fontSize: 16), // Buton metnini büyüt
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        color: Colors.blue,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class CikisYapSilSayfasi extends StatefulWidget {
  const CikisYapSilSayfasi({super.key});

  @override
  _CikisYapSilSayfasiState createState() => _CikisYapSilSayfasiState();
}

class _CikisYapSilSayfasiState extends State<CikisYapSilSayfasi> {
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Çıkış Yap-Sil'),
        backgroundColor: Colors.blue,
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text('Çıkış Yap veya Hesabımı Sil',
                style: TextStyle(fontSize: 23)),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                _showExitConfirmationDialog(context);
              },
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.blue,
              ),
              child: const Text(
                'Çıkış Yap',
                style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                _showDeleteAccountDialog(context);
              },
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.blue,
              ),
              child: const Text(
                'Hesabı Sil',
                style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold),
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        color: Colors.blue,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }

  // Çıkış yapma onayı
  void _showExitConfirmationDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
          title: const Text(
            'Çıkış Yapmak İstediğinizden Emin Misiniz?',
            style: TextStyle(fontSize: 13),
          ),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.pop(context); // Dialogdan çık
              },
              child: const Text('Hayır'),
            ),
            TextButton(
              onPressed: () async {
                await FirebaseAuth.instance.signOut();
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const AnaSayfa()),
                );
              },
              child: const Text('Evet'),
            ),
          ],
        );
      },
    );
  }

// Hesabı silme onayı
  void _showDeleteAccountDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
          title: const Text(
            'Lütfen Hesabınızı Silmek İçin Mailinizi ve Şifrenizi Giriniz',
            style: TextStyle(
              fontSize: 16,
            ),
          ),
          content: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              Container(
                margin: const EdgeInsets.only(bottom: 20),
                child: TextField(
                  controller: _emailController,
                  decoration: InputDecoration(
                    labelText: 'E-posta Adresi',
                    border: const OutlineInputBorder(),
                    filled: true,
                    fillColor: Colors.blue[200],
                  ),
                ),
              ),
              Container(
                margin: const EdgeInsets.only(bottom: 20),
                child: TextField(
                  controller: _passwordController,
                  decoration: InputDecoration(
                    labelText: 'Şifre',
                    border: const OutlineInputBorder(),
                    filled: true,
                    fillColor: Colors.blue[200],
                  ),
                  obscureText: true,
                ),
              ),
            ],
          ),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.pop(context); // Dialogdan çık
              },
              child: const Text('Vazgeç'),
            ),
            ElevatedButton(
              onPressed: () async {
                String email = _emailController.text.trim();
                String password = _passwordController.text.trim();

                if (email.isEmpty || password.isEmpty) {
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(content: Text('E-posta ve şifre giriniz')),
                  );
                  return;
                }

                try {
                  // Kullanıcı oturum açma
                  UserCredential userCredential = await FirebaseAuth.instance
                      .signInWithEmailAndPassword(
                          email: email, password: password);

                  // Kullanıcıyı silme
                  await userCredential.user?.delete();
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(
                        content: Text('Hesabınız başarıyla silindi')),
                  );

                  // Oturumu kapatma ve ana sayfaya yönlendirme
                  await FirebaseAuth.instance.signOut();
                  Navigator.pushReplacement(
                    context,
                    MaterialPageRoute(builder: (context) => const AnaSayfa()),
                  );
                } on FirebaseAuthException catch (e) {
                  String errorMessage;
                  // Firebase hatalarını yönetme
                  if (e.code == 'user-not-found') {
                    errorMessage =
                        'Bu e-posta ile kayıtlı bir kullanıcı bulunamadı.';
                  } else if (e.code == 'wrong-password') {
                    errorMessage = 'Şifre hatalı. Lütfen tekrar deneyin.';
                  } else if (e.code == 'invalid-email') {
                    errorMessage = 'Geçersiz bir e-posta adresi girdiniz.';
                  } else {
                    errorMessage =
                        'Mail adresi ya da şifre hatalı! Bilgilerinizi kontrol ediniz ve tekrar deneyiniz.';
                  }

                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(
                      content: Text(errorMessage,
                          style: const TextStyle(color: Colors.black)),
                      backgroundColor: Colors.redAccent,
                    ),
                  );
                } catch (e) {
                  // Genel hataları yönetme
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('Beklenmeyen bir hata oluştu: $e')),
                  );
                }
              },
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.red,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(12),
                ),
                padding:
                    const EdgeInsets.symmetric(horizontal: 20, vertical: 12),
              ),
              child: const Text(
                'Sil',
                style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
              ),
            ),
          ],
        );
      },
    );
  }
}

class IstanbulSayfasi extends StatefulWidget {
  const IstanbulSayfasi({super.key});

  @override
  _IstanbulSayfasiState createState() => _IstanbulSayfasiState();
}

class _IstanbulSayfasiState extends State<IstanbulSayfasi> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'İstanbul',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context);
          },
        ),
        actions: [
          // Favori şehirler butonu
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('İstanbul')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('İstanbul')) {
                provider.removeFavoriSehir('İstanbul');
              } else {
                provider.addFavoriSehir('İstanbul');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('İstanbul')
                        ? 'İstanbul favorilere eklendi!'
                        : 'İstanbul favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),

          // Gidilen şehirler butonu
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('İstanbul')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('İstanbul')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('İstanbul')) {
                provider.removeGidilenSehir('İstanbul');
              } else {
                provider.addGidilenSehir('İstanbul');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.gidilenSehirler.contains('İstanbul')
                        ? 'İstanbul gidilen şehirlere eklendi!'
                        : 'İstanbul gidilen şehirlerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://i.pinimg.com/1200x/16/c9/8a/16c98a8f1190538e4a4ef935118c2193.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'İstanbul, Türkiye\'nin en büyük ve kültürel olarak en önemli şehridir, '
                    'hem Asya hem de Avrupa kıtaları üzerinde yer alır. Tarihi boyunca Roma, Bizans ve '
                    'Osmanlı İmparatorluklarına başkentlik yapmıştır. Ayasofya, Topkapı Sarayı ve Sultanahmet '
                    'Camii gibi tarihi yapılarıyla ünlüdür. Şehir, dünyanın en kalabalık şehirlerinden biri olup, '
                    'çok kültürlü yapısı ile dikkat çeker. Ekonomik olarak Türkiye\'nin en önemli merkezi olan '
                    'İstanbul, ticaret, finans ve turizmde büyük bir rol oynamaktadır. Boğaziçi\'nin sunduğu '
                    'muazzam manzaralar ve limanlar, İstanbul\'u önemli bir ulaşım noktası yapar.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                      fontSize: 20,
                      fontWeight: FontWeight.bold,
                      color: Colors.black,
                    ),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiIstanbul(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const YemekSayfasiIstanbul(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'İstanbul'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiIstanbul extends StatelessWidget {
  const YerSayfasiIstanbul({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Ayasofya Camii',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/0x0/5f19d22bc9de3d25681fae31.jpg',
      'bilgi': 'Ayasofya, İstanbul da 537 yılında Bizans İmparatoru I. Justinianus tarafından'
          'kilise olarak inşa edilmiştir. 1453 te Osmanlılar tarafından camiye dönüştürülmüş, 1935 te'
          'müze olarak kullanılmaya başlanmış, 2020 de tekrar cami olmuştur. Mimarlık ve sanat açısından'
          ' önemli bir yapıdır, Bizans ve Osmanlı sanatlarını birleştirir. UNESCO Dünya Mirası Listesinde'
          'yer alır. Her yıl milyonlarca turist tarafından ziyaret edilmektedir.'
    },
    {
      'isim': 'Galata Kulesi',
      'gorsel':
          'https://media1.thrillophilia.com/filestore/d6vkimlauthuu1goc69srb4ztu30_shutterstock_2171476409%20(1).jpg?w=400&dpr=2',
      'bilgi': 'Galata Kulesi, İstanbul’un Beyoğlu ilçesinde yer alan tarihi bir yapıdır. 1348 yılında'
          ' Cenevizliler tarafından inşa edilmiştir. Yüksekliği 66.9 metredir ve İstanbul’un en eski kulelerinden'
          ' biridir. Günümüzde bir gözlem kulesi olarak kullanılmaktadır ve panoramik İstanbul manzarası sunar.'
    },
    {
      'isim': 'Topkapı Sarayı',
      'gorsel':
          'https://istanbul-tourist-information.com/tr/wp-content/uploads/2021/01/COVER-topkapi-museum-entrance-in-istanbul-1024x538.jpg',
      'bilgi': 'Topkapı Sarayı, İstanbul’da Osmanlı İmparatorluğu’nun 400 yıl boyunca yönetildiği ve'
          ' padişahların ikamet ettiği saraydır. Saray, 1459 yılında inşa edilmeye başlanmış ve günümüzde'
          ' müze olarak kullanılmaktadır. Zengin Osmanlı kültürüne dair pek çok eser burada sergilenmektedir.'
    },
    {
      'isim': 'Kız Kulesi',
      'gorsel':
          'https://media.istockphoto.com/id/478788082/tr/fotoğraf/maidens-tower.jpg?s=612x612&w=0&k=20&c=ZiAhjJxC3ng5W6UyhfutCJRMIiXu9xTprh7LSiXC48I=',
      'bilgi': 'Kız Kulesi, İstanbul’un Üsküdar ilçesinde, Marmara Denizi üzerinde küçük bir adada yer alan'
          ' tarihi bir yapıdır. Efsaneye göre, bir kralın kızını korumak için yaptırılmıştır. Günümüzde restoran'
          ' ve kafeterya olarak kullanılmaktadır. Aynı zamanda İstanbul’un simgelerinden biridir.'
    },
    {
      'isim': 'Sultanahmet Meydanı',
      'gorsel':
          'https://guideofistanbul.net/tr/wp-content/uploads/2018/10/sultanahmet-cami.jpg',
      'bilgi': 'Sultanahmet Meydanı, İstanbul’un tarihi yarımadasında yer alan önemli bir meydandır.'
          ' Osmanlı ve Bizans dönemine ait yapılarla çevrilidir ve Ayasofya, Sultanahmet Camii gibi önemli'
          ' yapıları barındırmaktadır. Bu meydan, hem turistler hem de yerel halk için popüler bir buluşma yeridir.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiIstanbul(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiIstanbul extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiIstanbul(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiIstanbul extends StatelessWidget {
  const YemekSayfasiIstanbul({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Balık Ekmek',
      'gorsel':
          'https://images.deliveryhero.io/image/fd-tr/LH/wrdk-listing.jpg',
      'yemekBilgisi': 'Balık ekmek, İstanbul’da sıkça tüketilen ve genellikle Galata Köprüsü '
          'civarındaki teknelerden satılan bir sokak yemeğidir. Taze balıklar, '
          'genellikle somon veya hamsi gibi yerel deniz balıkları, ekmekle servis'
          ' edilir. Yanında genellikle soğan, limon ve roka ile yenir. Özellikle yaz '
          'aylarında, denizin ve güneşin tadını çıkarırken balık ekmek, İstanbul’un '
          'simgelerinden biri haline gelmiştir. Hem turistler hem de yerel halk için '
          'vazgeçilmez bir lezzet noktasıdır.',
    },
    {
      'isim': 'Kanlıca Yoğurdu',
      'gorsel':
          'https://lh5.googleusercontent.com/proxy/nsFUgzZxv1KlC8pKcEglg9PoJJQBN6LyfzeZEBReY7Om3uERDltCiEvLAI-Z4tSh8hzyL3I-mDyl_ybizpJPCNEhSs4JQo4IbFzPqVE8yKdo_Cf9yuxk0rbDtLBBtc3n-ICSWY9NA7CMN-L5ZWbMGmKNf_Ko4LqwB5QT',
      'yemekBilgisi': 'Kanlıca yoğurdu, İstanbul’un Kanlıca semtine özgü, bol kaymaklı yoğurtla '
          'servis edilen bir tatlıdır. Bu yoğurt, ince bir tabaka kaymakla süslenerek,'
          ' üzerine şeker eklenir. Genellikle sabah kahvaltılarında, yaz aylarında ise'
          ' serinletici bir tatlı olarak tercih edilir. Yoğurdun geleneksel ve saf lezzeti,'
          ' taze yapılan kaymakla birleşerek eşsiz bir tat oluşturur. Kanlıca semtinde bu '
          'yoğurdu deneyimlemek, İstanbul’un geleneksel tatlarından birini keşfetmek anlamına'
          ' gelir.',
    },
    {
      'isim': 'Midye Tava',
      'gorsel':
          'https://yummyistanbul.com/wp-content/uploads/2021/07/stuffed-mussels-in-istanbul.jpg',
      'yemekBilgisi': 'Midye tava, İstanbul’daki en popüler sokak lezzetlerinden biridir. Taze midyeler, '
          'pilavla doldurulup kızartılır ve genellikle sokak satıcıları tarafından, özellikle'
          ' gece saatlerinde satılır. Midye tava, küçük kutularda ya da tabaklarda servis edilir '
          've yanında limon ile yenir. Özellikle İstanbul’un Kadıköy, Beyoğlu gibi yoğun '
          'bölgelerinde, gece hayatının vazgeçilmez atıştırmalıklarından biridir. Lezzetinin '
          'yanı sıra uygun fiyatı ile de herkesin ulaşabileceği bir yiyecektir.',
    },
    {
      'isim': 'İstanbul Pilavı',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/04062014/464ed9ba-74b2-4f26-95b6-53b43bcb060d.bmp?format=jpg&quality=50',
      'yemekBilgisi': 'İstanbul pilavı, özellikle düğünlerde ve özel günlerde yapılan, kuzu eti, pirinç, iç '
          'pilav ve çeşitli baharatlarla hazırlanan zengin bir yemektir. Pilavın içerisinde'
          ' tereyağı, kuzu eti ve kuş üzümü gibi malzemeler yer alır. İstanbul pilavı, '
          'Osmanlı döneminden günümüze gelen bir geleneksel yemektir. Yoğun ve lezzetli'
          ' yapısı sayesinde, soğuk kış günlerinde bile insanları doyurur ve sıcak servis '
          'edilir. Bu yemek, İstanbul’un kültürel miraslarından biridir ve geleneksel pilavcı'
          ' lokantalarında sıklıkla bulunur.',
    },
    {
      'isim': 'Hünkar Beğendi',
      'gorsel':
          'https://www.gurmerehberi.com/wp-content/uploads/2021/04/hunkar-begendi.webp',
      'yemekBilgisi': 'Hünkar beğendi, Osmanlı İmparatorluğu’ndan miras kalan, patlıcan beğendi üzerine '
          'eklenen kuzu etiyle hazırlanan nefis bir yemektir. Osmanlı mutfağının zarif '
          'lezzetlerinden biri olan hünkar beğendi, etin yumuşaklığı ve patlıcanın füme '
          'tadı ile mükemmel bir uyum yakalar. Genellikle pilav eşliğinde servis edilir '
          've soğuk kış günlerinde mükemmel bir seçenek sunar. Lezzetinin yanı sıra tarihi '
          'bir yemek olarak da İstanbul’un mutfak kültüründe önemli bir yere sahiptir. '
          'Günümüzde modern restoranlarda da sıklıkla bulunur.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiIstanbul(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]['yemekBilgisi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiIstanbul extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiIstanbul({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class AdanaSayfasi extends StatefulWidget {
  const AdanaSayfasi({super.key});

  @override
  _AdanaSayfasiState createState() => _AdanaSayfasiState();
}

class _AdanaSayfasiState extends State<AdanaSayfasi> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        backgroundColor: const Color(0xFFF8C3D6),
        title: const Text(
          'Adana',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Adana')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Adana')) {
                provider.removeFavoriSehir('Adana');
              } else {
                provider.addFavoriSehir('Adana');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Adana')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Adana')
                        ? 'Adana favorilere eklendi!'
                        : 'Adana favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          // Gidilen şehirler butonu
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Adana')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Adana')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Adana')) {
                provider.removeGidilenSehir('Adana');
              } else {
                provider.addGidilenSehir('Adana');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Adana')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Adana')
                        ? 'Adana gidilen şehirlere eklendi!'
                        : 'Adana gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1895047516/tr/fotoğraf/adana-central-sabanci-mosque-with-seyhan-river-city-panoramic-and-top-view-adana-turkey.jpg?s=612x612&w=0&k=20&c=rMw7854PsUkzVBzgpvpy8YpMz-pBAPa_X1DXTQkA9Kk=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Adana, Türkiye\'nin güneyinde yer alan ve lezzetli mutfağıyla ünlü bir şehirdir. '
                    'Adana Kebabı, şalgamı ve tarihi Taş Köprü\'süyle tanınır. Seyhan Nehri kıyısında yer alan '
                    'Adana, Akdeniz iklimi ile sıcak ve keyifli bir atmosfer sunar. Ayrıca, tarihi ve kültürel '
                    'zenginlikleriyle de dikkat çeker.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => YerSayfasiAdana(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text(
                              'Nereye gitmek istersin?',
                              style: TextStyle(
                                  fontSize: 16,
                                  color: Colors.black,
                                  fontWeight: FontWeight.bold),
                            ),
                          ],
                        ),
                      ),
                      const SizedBox(height: 10),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiAdana(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text(
                              'Ne yemek istersin?',
                              style: TextStyle(
                                  fontSize: 16,
                                  color: Colors.black,
                                  fontWeight: FontWeight.bold),
                            ),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Adana'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        color: const Color(0xFFF8C3D6),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiAdana extends StatelessWidget {
  YerSayfasiAdana({super.key});
  final List<Map<String, dynamic>> mekanlar = [
    {
      'isim': 'Taş Köprü',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/SehirRehberi//GezilecekYer/20190809151226959_20190111110947922_THK%20ORHAN%20OZGULBAS%20ADANA%20Seyhan%20Nehri%20Taskopru%20logolu%20p%20.jpg?format=jpg&quality=50',
      'bilgi':
          'Taş Köprü, Adana\'nın simgelerinden biri olan tarihi bir Roma köprüsüdür. '
              'Dünyanın hala kullanılan en eski köprülerinden biridir ve Seyhan Nehri üzerinde yer alır.',
      'enlem': 36.986111,
      'boylam': 35.334722,
    },
    {
      'isim': 'Sabancı Merkez Camii',
      'gorsel':
          'https://bulut.m2kdijital.com/upload/833-2543-7275-4730/original/adanay_kefedin/merkezcami.jpg',
      'bilgi':
          'Sabancı Merkez Camii, Adana\'nın Seyhan Nehri kıyısında yer alan ve modern mimarisiyle '
              'dikkat çeken büyük bir camidir. Türkiye\'nin en büyük camilerinden biridir.'
    },
    {
      'isim': 'Adana Arkeoloji Müzesi',
      'gorsel':
          'https://www.kulturportali.gov.tr/contents/images/Adana%20Arkeoloji%20Müzesi%20(8).jpg',
      'bilgi':
          'Adana Arkeoloji Müzesi, Türkiye\'nin en eski müzelerinden biridir ve Adana bölgesindeki '
              'antik kalıntılara ev sahipliği yapar.'
    },
    {
      'isim': 'Atatürk Parkı',
      'gorsel':
          'https://iasbh.tmgrup.com.tr/4d71ef/1200/675/4/0/795/445?u=https://isbh.tmgrup.com.tr/sbh/2024/07/30/adana-ataturk-parki-nerede-hangi-ilcede-adana-ataturk-parki-yol-tarifi-ile-nasil-gidilir-e1-1722346248904.jpg',
      'bilgi':
          'Atatürk Parkı, Adana\'nın merkezinde yer alan ve yeşilliklerle çevrili büyük bir dinlenme '
              'alanıdır. Şehir halkı için popüler bir buluşma noktasıdır.'
    },
    {
      'isim': 'Seyhan Baraj Gölü',
      'gorsel':
          'https://www.puduhepatour.com/images/extra-resim/140/foto-2-jpg-seyhan-golu-cevresinde-bir-gun.jpg',
      'bilgi':
          'Seyhan Baraj Gölü, Adana\'nın kuzeyinde yer alan büyük bir yapay göldür. Piknik, yürüyüş ve '
              'doğa ile iç içe vakit geçirmek için ideal bir mekandır.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler - Adana'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiAdana(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                    enlem: mekanlar[index]['enlem'] ?? 0.0,
                    boylam: mekanlar[index]['boylam'] ?? 0.0,
// Enlem parametresi burada gönderiliyor
                    mekanIsmi: mekanlar[index]
                        ['isim']!, // Boylam parametresi burada gönderiliyor
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiAdana extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;
  final double enlem; // Enlem parametresi eklendi
  final double boylam;
  final String mekanIsmi;

  const YerDetaySayfasiAdana({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.bilgi,
    required this.enlem, // Enlem parametresi
    required this.boylam,
    required this.mekanIsmi, // Boylam parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi,
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiAdana extends StatelessWidget {
  const YemekSayfasiAdana({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Adana Kebap',
      'gorsel':
          'https://media.istockphoto.com/id/1408897449/tr/fotoğraf/adana-kebab-served-in-a-wooden-cutting-board-isolated-on-wooden-background-side-view.jpg?s=612x612&w=0&k=20&c=cD4HT1eEb4BFfIbRTvaJ90QjAs6xnDB-Ih0dO_x4ngQ=',
      'yemekBilgisi': 'Adana kebap, Türkiye’nin güneyinde yer alan Adana iline özgü, baharatlı '
          've kıyma ile hazırlanan bir kebap türüdür. Genellikle lavaş ekmeği ile servis edilir '
          've yanında közlenmiş biber, domates ve sumaklı soğan salatası bulunur. Adana kebap, '
          'odun ateşinde pişirilerek kendine has lezzetini kazanır. Türk mutfağının en sevilen '
          'yemeklerinden biridir.',
    },
    {
      'isim': 'Şalgam',
      'gorsel':
          'https://i.nefisyemektarifleri.com/2023/02/02/salgam-nedir-faydalari-nelerdir-8.jpg',
      'yemekBilgisi':
          'Şalgam, Adana’ya özgü, turpgillerden yapılan, ekşi ve fermente bir içecektir. '
              'Özellikle kebap yemeklerinin yanında vazgeçilmez bir tamamlayıcıdır. Kırmızı renkli, '
              'hafif acılı ya da acısız seçenekleri bulunur. Yaz aylarında serinletici bir içecek '
              'olarak da tercih edilir.',
    },
    {
      'isim': 'Bici Bici',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/0x0/5e00c8c57152d81020d99dbe.jpg',
      'yemekBilgisi':
          'Bici bici, Adana’nın yaz aylarında tüketilen geleneksel bir tatlısıdır. '
              'Nişasta, şerbet ve rendelenmiş buz ile yapılan bu tatlı, sıcak yaz günlerinde serinletici '
              've hafif bir lezzet sunar. Genellikle üzerine nar şurubu veya gül suyu eklenerek servis edilir.',
    },
    {
      'isim': 'Adana Böreği',
      'gorsel':
          'https://www.huseyinoglubaklava.com/wp-content/uploads/2020/12/su-boregi-1.jpg',
      'yemekBilgisi':
          'Adana böreği, çıtır çıtır yufkalar arasında eriyen bol miktarda peynirle '
              'hazırlanan bir börektir. Özellikle kahvaltılarda ya da ara öğünlerde tercih edilen bu '
              'lezzet, Adana’nın yöresel tatlarından biridir. Kıtır yapısı ve yoğun peyniri ile damakları '
              'şenlendirir.',
    },
    {
      'isim': 'Ciğer Kebap',
      'gorsel':
          'https://cdnuploads.aa.com.tr/uploads/VideoGallery/2022/10/10/e3198f7579ca5088a00179a03cd13368.jpg',
      'yemekBilgisi':
          'Sabah kahvaltısından akşam yemeğine kadar tüketilir. Şişlere geçirilmiş ciğerler közde pişirilir,'
              ' yanında soğan, maydanoz ve sumak ile servis edilir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Adana Yemekleri'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiAdana(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]['yemekBilgisi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiAdana extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiAdana({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  width: double.infinity,
                  height: 300,
                  fit: BoxFit.cover,
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi,
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class AdiyamanSayfasi extends StatefulWidget {
  const AdiyamanSayfasi({super.key});

  @override
  _AdiyamanSayfasiState createState() => _AdiyamanSayfasiState();
}

class _AdiyamanSayfasiState extends State<AdiyamanSayfasi> {
  bool isFavorited = false;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Adıyaman',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context);
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Adıyaman')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Adıyaman')) {
                provider.removeFavoriSehir('Adıyaman');
              } else {
                provider.addFavoriSehir('Adıyaman');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Adıyaman')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Adıyaman')
                        ? 'Adıyaman favorilere eklendi!'
                        : 'Adıyaman favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          // Gidilen şehirler butonu
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Adıyaman')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Adıyaman')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Adıyaman')) {
                provider.removeGidilenSehir('Adıyaman');
              } else {
                provider.addGidilenSehir('Adıyaman');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Adıyaman')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Adıyaman')
                        ? 'Adıyaman gidilen şehirlere eklendi!'
                        : 'Adıyaman gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://www.hisglobal.com.tr/assets/images/uploads/1598444401.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Adıyaman, Türkiye\'nin Güneydoğu Anadolu Bölgesi\'nde yer alan bir şehirdir. '
                    'Nemrut Dağı, tarihi kaya mezarları ve zengin mutfağıyla ünlüdür. Ayrıca, şehre ait '
                    'doğal güzellikler ve kültürel miraslar da dikkat çekmektedir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiAdiyaman(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const YemekSayfasiAdiyaman(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Adıyaman'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiAdiyaman extends StatelessWidget {
  const YerSayfasiAdiyaman({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Nemrut Dağı',
      'gorsel':
          'https://media.istockphoto.com/id/954723508/tr/fotoğraf/nemrut-edir.jpg?s=612x612&w=0&k=20&c=S-vFIHIMuBydfGzlgbuMApSQDVulKFftCGy7-1fzJFA=',
      'bilgi': 'Nemrut Dağı, Adıyamanın Kahta ilçesinde yer alan ve UNESCO Dünya Mirası Listesinde bulunan tarihi bir dağdır.'
          'Zirvesinde, Kommagene Krallığından kalma dev heykeller ve kral I. Antiochusun anıt mezarı bulunmaktadır.'
          'Tanrı figürleri, hayvan heykelleri ve yazıtlarla süslü doğu ve batı terasları, kültürlerin buluşmasını yansıtır.'
          'Gün doğumu ve batımı manzarasıyla ünlü olan Nemrut, tarih ve doğanın buluştuğu eşsiz bir noktadır.'
    },
    {
      'isim': 'Adıyaman Kalesi',
      'gorsel':
          'https://www.arkeobook.com/files/uploads/news/default/20220829-kahta-kalesi-adiyaman-188265-40051de96ff38be44613.jpg',
      'bilgi': 'Adıyaman Kalesi, Adıyaman şehir merkezinde yer alan ve şehrin tarihine ışık tutan önemli bir yapıdır. Kaleye ait ilk yapıların, '
          'Hititler döneminde inşa edildiği düşünülmektedir. Daha sonraki dönemlerde Roma, Bizans, Emeviler, Selçuklular ve Osmanlılar tarafından onarılarak '
          'kullanılmıştır.Kale, yaklaşık 25 metre yüksekliğinde bir tepe üzerine kuruludur ve çevresindeki düz alana hâkim bir konumdadır. Oval şekilli yapısıyla dikkat çeken '
          'kalede geçmişte içme suyu için kullanılan sarnıçlar ve odalar bulunduğu bilinmektedir. Günümüzde tarihi dokusuyla ziyaretçilerin ilgisini çeken '
          'Adıyaman Kalesi, kentin önemli simgelerinden biridir.'
    },
    {
      'isim': 'Cendere Köprüsü',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/21022013/ec6017b0-f45f-4573-b78e-dd6487b5c6c3.JPG?format=jpg&quality=50',
      'bilgi': 'Cendere Köprüsü, Adıyamanın Kahta ilçesi yakınlarında yer alan ve Roma İmparatorluğu dönemine ait tarihi bir köprüdür. MÖ 2. yüzyılda inşa edilen '
          'bu köprü, Romalı General Septimius Severus tarafından, Kommagene Krallığına bağlı bir bölgeyi birbirine bağlamak amacıyla yaptırılmıştır.'
          'Köprü, 120 metre uzunluğunda ve 7 metre genişliğindedir. Yapımında büyük taş bloklar kullanılmış olup, oldukça sağlam bir yapıya sahiptir.'
          'Cendere Köprüsü, Romalı mühendisliğinin önemli örneklerinden biri olarak, günümüze kadar ayakta kalmayı başarmıştır. Ayrıca, köprünün üzerinde'
          'Roma dönemine ait yazıtlar da bulunmaktadır. Bugün hala kullanılan bu köprü, hem tarihi hem de mimari açıdan büyük öneme sahiptir.'
    },
    {
      'isim': 'Perre Antik Kenti',
      'gorsel':
          'https://res.cloudinary.com/turna/image/upload/v1668448320/perre_antik_kenti.jpg',
      'bilgi': 'Perre Antik Kenti, Adıyaman il sınırlarında, şehir merkezinin yaklaşık 10 km doğusunda yer alan bir antik yerleşimdir. MÖ 3. yüzyılda '
          'Kommagene Krallığına başkentlik yapmış olan Perre, özellikle Roma ve Helenistik dönemde önemli bir yerleşim yeri olmuştur. Kent, dağlık bir '
          'alanda, kayalara oyulmuş mezar odaları ve kaya tapınaklarıyla ünlüdür. Perre, özellikle mezar yapıları ve kaya mezarları ile dikkat çeker. Buradaki kaya mezarları,'
          'Kommagene Krallığının önde gelen isimlerine ait olup, oldukça iyi korunmuş durumda bulunmaktadır. Ayrıca, Roma dönemi surları, kamu binaları ve'
          'yazıtlar da kentin tarihi zenginliğini gözler önüne serer. Bugün Perre Antik Kenti, arkeologlar için önemli bir kazı alanı olmakla birlikte,'
          'ziyaretçilerine tarihi ve kültürel bir yolculuk sunmaktadır.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiIstanbul(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiAdiyaman extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiAdiyaman(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiAdiyaman extends StatelessWidget {
  const YemekSayfasiAdiyaman({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Abuzer Kebabı',
      'gorsel':
          'https://i.ytimg.com/vi/MwjQCkFE0hg/hq720.jpg?sqp=-oaymwEhCK4FEIIDSFryq4qpAxMIARUAAAAAGAElAADIQj0AgKJD&rs=AOn4CLAyBlSfnqlKPTSo-0v54oMpBgMNQg',
      'yemekBilgisi': 'Abuzer Kebabı, Adıyamana özgü bir kebap çeşididir ve özellikle Etli ekmek tarzında yapılan lezzetli bir yemektir.'
          'Genellikle kuzu eti kullanılarak yapılan bu kebap, ince doğranmış etlerin baharatlarla harmanlanarak şişe geçirilip, mangalda veya odun ateşinde'
          'pişirilmesiyle hazırlanır. Abuzer Kebabı, kendine has yumuşak dokusu ve aromatik baharatları ile tanınır. Kebabın hazırlanışında genellikle soğan,'
          'sarımsak, tuz, karabiber gibi temel malzemeler kullanılır. Etin iyi pişmesi için özel teknikler uygulanır ve kebap servis edilirken yanında genellikle '
          'pilav, soğan salatası ve meze çeşitleriyle sunulur. Adıyaman mutfağının önemli bir parçası olan Abuzer Kebabı, hem yerel halkın hem de ziyaretçilerin '
          'beğenisini kazanmış lezzetli bir yemektir.',
    },
    {
      'isim': 'Çökelek',
      'gorsel':
          'https://www.germencikciftligi.com.tr/image/catalog/Urunler/Sut%20Urunleri/kuru%20çökelek.jpeg',
      'yemekBilgisi': 'Adıyaman Çökeleği, Adıyamana özgü geleneksel bir süt ürünüdür ve özellikle yöresel kahvaltılarda ve mezelerde sıkça kullanılır.'
          'Çökelek, yoğurt veya sütten elde edilen peynir altı suyunun kaynatılmasıyla yapılan, yağsız, düşük kalorili ve besleyici bir üründür. Adıyamanda'
          'çökelek, genellikle tuz, soğan ve bazen baharatlar eklenerek lezzetlendirilir. Yapımında, süt kaynatıldıktan sonra çökelek dokusu oluşur ve bu'
          'malzeme, hem yumuşak hem de ekşimsi bir tat sunar. Adıyaman Çökeleği, kahvaltılarda, böreklerde, salatalarda ve mezelere ilave edilerek tüketilir.'
          'Ayrıca, yerel mutfakta kızartılarak veya fırınlanarak da servis edilebilir. Adıyamanın yöresel mutfağının vazgeçilmez lezzetlerinden biri olan'
          'çökelek, hem sağlıklı hem de besleyici özelliğiyle öne çıkar.',
    },
    {
      'isim': 'Beyran',
      'gorsel':
          'https://adiyamanlilarnet.teimg.com/crop/1280x720/adiyamanlilar-net/images/haberler/_gaziantep_beyran_veMR_r_WTIQZ.jpg',
      'yemekBilgisi': 'Adıyaman Beyranı, Adıyamana özgü, lezzetli ve besleyici bir çorba türüdür. Genellikle sabah kahvaltılarında, özellikle kış aylarında'
          'tüketilen bu yemek, kuzu eti, pirinç, biber salçası, baharatlar (özellikle pul biber) ve sarımsak ile yapılır. Beyran, etin ve baharatların'
          'karışımından elde edilen zengin bir lezzete sahiptir. Genellikle sıcak olarak servis edilen beyran, üzerine limon sıkarak tüketilir.'
          'Kuzu etinin kaynamış suyu ile yapılan bu çorba, yoğun lezzeti ve içeriğiyle hem doyurucu hem de sindirimi kolay bir yemektir. Adıyamanın'
          'geleneksel mutfağının önemli bir parçası olan beyran, özellikle soğuk havalarda ve zorlu koşullarda enerji veren bir yemek olarak tercih edilir.',
    },
    {
      'isim': 'Mumbar',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/19022013/f2497453-c603-4e36-b93a-4261c53c0029.JPG?format=jpg&quality=50',
      'yemekBilgisi': 'Adıyaman Mumbarı, Adıyamana özgü lezzetli ve geleneksel bir yemektir. Mumbar, dana veya kuzu bağırsaklarına, pirinç, kıyma,'
          'baharatlar ve soğan gibi malzemelerin doldurulup pişirilmesiyle hazırlanır. İç harcı, zengin baharatlarla lezzetlendirilir ve genellikle karabiber,'
          'kimyon ve pul biber kullanılır. Mumbar, ardından tencereye yerleştirilip zeytinyağı ile pişirilir ve bazen yanında yoğurt ile servis edilir.'
          'Bu yemek, özellikle düğünlerde, kutlamalarda ve özel günlerde yapılır. Adıyaman Mumbarı, hem lezzetli hem de doyurucu olup, yöresel mutfağın en'
          'bilinen ve sevilen yemeklerinden biridir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiIstanbul(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiAdiyaman extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiAdiyaman({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class AfyonSayfasi extends StatefulWidget {
  const AfyonSayfasi({super.key});

  @override
  _AfyonSayfasiState createState() => _AfyonSayfasiState();
}

class _AfyonSayfasiState extends State<AfyonSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Afyon',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Afyon')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Afyon')) {
                provider.removeFavoriSehir('Afyon');
              } else {
                provider.addFavoriSehir('Afyon');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Afyon')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Afyon')
                        ? 'Afyon favorilere eklendi!'
                        : 'Afyon favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Afyon')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Afyon')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Afyon')) {
                provider.removeGidilenSehir('Afyon');
              } else {
                provider.addGidilenSehir('Afyon');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Afyon')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Afyon')
                        ? 'Afyon gidilen şehirlere eklendi!'
                        : 'Afyon gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1362949320/tr/fotoğraf/afyonkarahisar-cityscape-and-volcanic-rock-with-ancient-castle-in-evening.jpg?s=612x612&w=0&k=20&c=zHb9hXmu-qMcahBeOI3iDqz14R2E-1jrbFin8ig4_oE=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Afyon, Türkiye\'nin Ege Bölgesi\'nde yer alan tarihi ve doğal güzellikleriyle ünlü bir şehirdir. '
                    'Afyonkarahisar Kalesi, termal kaplıcaları, lokumu ve sucuklarıyla tanınır. Ayrıca, Frig Vadisi\'nde yer alan tarihi yapılar, '
                    'antik kaya mezarları ve doğal güzellikler, ziyaretçileri büyülemektedir. Termal turizm açısından Türkiye\'nin önemli '
                    'merkezlerinden biridir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiAfyon(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiAfyon(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Afyon'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiAfyon extends StatelessWidget {
  const YerSayfasiAfyon({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Afyonkarahisar Kalesi',
      'gorsel':
          'https://www.prontotour.com/Blog/wp-content/uploads/2024/03/afyon-kalesi.jpg',
      'bilgi': 'Afyonkarahisar Kalesi, şehri yüksek bir tepeye hakim bir şekilde görebilen tarihi bir kaledir. '
          'Kaya üzerine inşa edilen kale, Frigya dönemine kadar uzandığı düşünülen köklü bir tarihe sahiptir. '
          'Bugünkü yapısının çoğunluğu Selçuklu ve Osmanlı dönemlerine aittir. Kale, 226 metre yüksekliğiyle '
          'şehri kuş bakışı görebilen bir noktada yer alır ve ziyaretçilere panoramik manzara sunar. Bugün kale, turistlerin '
          'ilgisini çeken önemli bir mekan olup, bölgenin kültürel mirasının bir parçası olarak korunmaktadır.'
    },
    {
      'isim': 'Frig Vadisi',
      'gorsel':
          'https://iasbh.tmgrup.com.tr/828613/650/344/0/43/1200/672?u=https://isbh.tmgrup.com.tr/sbh/2022/11/28/frig-vadisi-nerede-afyon-frig-vadisine-nasil-gidilir-gezilecek-ve-fotograf-cekilecek-yerler-nereler-k1-1669618954086.jpg',
      'bilgi': 'Afyon Frig Vadisi, Afyonkarahisar il sınırlarında yer alan ve Frigya uygarlığının izlerini taşıyan önemli bir tarihi alandır.'
          ' Bu vadi, Frig dönemine ait kaya mezarları, kaya tapınakları ve antik yerleşim alanlarıyla ünlüdür. Özellikle Frig kaya mezarları ve'
          ' Yazılıkaya gibi tarihi kalıntılar, bölgenin en dikkat çeken yapıları arasındadır. Vadideki kaya oluşumları, doğal güzelliklerle '
          'harmanlanmış, ziyaretçilere hem tarihi bir keşif hem de doğa yürüyüşü fırsatları sunar. Frig Vadisi, zengin tarihi mirasıyla ve etkileyici '
          'manzarasıyla hem tarih meraklıları hem de doğa severler için önemli bir cazibe merkezi olmuştur.'
    },
    {
      'isim': 'Zafer Meydanı',
      'gorsel':
          'https://afyonzafernet.teimg.com/crop/1280x720/afyonzafer-net/images/haberler/2020/07/zafer_meydanina_millet_kiraathanesi_h51253_4e655.JPG',
      'bilgi': 'Afyon Zafer Meydanı, Afyonkarahisar il merkezinin önemli bir simgesidir ve şehri ziyaret edenlerin sıkça uğradığı bir alandır. '
          'Meydan, 1922 deki Büyük Taarruz zaferini anmak amacıyla düzenlenmiş olup, Zafer Anıtı ile ünlüdür. Zafer Anıtı, Türk milletinin bağımsızlık'
          'mücadelesinin simgelerinden biridir ve Mustafa Kemal Atatürk ün liderliğinde kazanılan zaferin anısını yaşatmaktadır. Meydan, çevresindeki yeşil'
          ' alanlar, yürüyüş yolları ve kafelerle şehre canlılık katan bir mekan olup, halkın dinlenme ve sosyal etkinlikler için tercih ettiği bir noktadır.'
          'Ayrıca Zafer Meydanı, Afyonkarahisar ın tarihî kimliğini yansıtan önemli bir alan olarak şehri ziyaret edenlere tarihi ve kültürel bir deneyim sunar.'
    },
    {
      'isim': 'Afyon Termal Kaplıcaları',
      'gorsel':
          'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQI-J9NdiD63JiXinIo2IOXZbJB_y0xkZFGcQ&s',
      'bilgi': 'Afyon Termal Kaplıcaları, Türkiye nin en bilinen ve şifalı termal su kaynaklarına sahip bölgelerindendir. Afyonkarahisar, '
          'yeraltı su kaynakları sayesinde, sıcak su banyoları, hamamlar ve kaplıca otelleri ile ünlüdür. Bölgedeki termal sular, romatizma, '
          'cilt hastalıkları, kas ve eklem ağrıları gibi rahatsızlıkların tedavisinde kullanılır. Afyon un termal kaplıcaları, mineral bakımından'
          'zengin olan suları ve şifalı özellikleriyle, hem yerli hem de yabancı turistler tarafından sıklıkla tercih edilir. Gazlıgöl, Sandıklı ve'
          'Haydarlı gibi bölgelerde yer alan kaplıcalar, aynı zamanda spa ve sağlık turizmi açısından büyük bir öneme sahiptir. Sıcak su havuzları ve'
          'termal oteller, misafirlere rahatlatıcı bir tatil imkanı sunar.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiAfyon(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiAfyon extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiAfyon(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiAfyon extends StatelessWidget {
  const YemekSayfasiAfyon({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Afyon Sucuklu Yumurta',
      'gorsel':
          'https://st2.depositphotos.com/3765753/5574/i/450/depositphotos_55742387-stock-photo-turkish-sausage-sucuk-and-egg.jpg',
      'yemekBilgisi': 'Afyon Sucuklu Yumurta, Afyonkarahisar ın en ünlü ve lezzetli kahvaltı yemeklerinden biridir. Bu yemek, Afyon sucuk ile yapılan'
          ' bir çeşit menemen olup, sucuk ve yumurta ana malzemeleridir. Afyon sucukları, özellikle baharatlı ve etli yapısıyla tanınır, bu da yemeğe özgün bir'
          ' lezzet katar. Sucuklar dilimlenip tavada hafifçe kızartılır ve üzerine yumurtalar eklenerek pişirilir. Genellikle taze ekmek ile birlikte servis'
          ' edilen Afyon sucuklu yumurta, zengin ve doyurucu bir kahvaltı alternatifi olarak oldukça popülerdir. Ayrıca, Afyon un geleneksel mutfağının'
          'vazgeçilmez bir parçasıdır ve misafirlere bölgenin mutfak kültürünü tanıtmak için sıklıkla sunulur.',
    },
    {
      'isim': 'Afyon Lokumu',
      'gorsel':
          'https://st3.depositphotos.com/1326558/15895/i/450/depositphotos_158959772-stock-photo-bowl-with-turkish-delight-and.jpg',
      'yemekBilgisi': 'Afyon Lokumu, Afyonkarahisar’ın en bilinen ve sevilen tatlılarından biridir. Bu özel lokum, nişasta ve şeker gibi malzemelerin'
          ' karıştırılıp kaynatılmasıyla hazırlanır ve gül suyu, vanilya gibi tatlandırıcılar eklenerek lezzetlendirilir. Afyon lokumu, geleneksel '
          'yöntemlerle hazırlanarak, yoğun kıvamı ve yumuşak dokusu ile dikkat çeker. Genellikle pudra şekeri ile kaplanarak sunulur. Afyon lokumu, '
          'hem tatlı olarak hem de hediye olarak tercih edilen bir üründür ve geleneksel Türk mutfağı içinde özel bir yere sahiptir. Afyonkarahisar’a '
          'özgü olan bu lokum, şehrin gastronomik kimliğini yansıtan önemli bir tatlıdır.',
    },
    {
      'isim': 'Kuzu Tandır',
      'gorsel':
          'https://media.istockphoto.com/id/1537273446/tr/fotoğraf/turkish-foods-lamb-shank-tandoori-on-bulgur-wheat-rice.jpg?s=612x612&w=0&k=20&c=oVwTDYgICAMymiQGf2DVpH-qqondJdW1Q4Ih_-46Xh4=',
      'yemekBilgisi': 'Afyon Kuzu Tandır, Afyonkarahisar ın en ünlü ve lezzetli et yemeklerinden biridir. Bu yemek, kuzu etinin özel bir şekilde tandırda'
          'pişirilmesi ile hazırlanır. Kuzu etinin uzun süre düşük ısıda pişirilmesi, etin yumuşak ve sulu kalmasını sağlar. Afyon kuzu tandırı, özellikle'
          'baharatlarla marine edildikten sonra tandırda pişirilir ve bu sayede etin lezzeti derinleşir. Geleneksel olarak, tandırda pişirilen et, soğan,'
          'domates ve biber gibi sebzelerle birlikte sunulur. Kuzu tandır, genellikle pilav veya yufka ekmeği ile servis edilir ve Afyon un mutfak kültürünün'
          'vazgeçilmez lezzetlerinden biridir. Hem yerel halk hem de turistler tarafından büyük ilgi gören bu yemek, şehre özgü bir tat deneyimi sunar.'
    },
    {
      'isim': 'Bükme Börek',
      'gorsel':
          'https://server.canakkaleolay.com/public/photos/news/2024/202410/haber-72409/43413398_72409_afyonkarahisar-in-lezzetl.jpg',
      'yemekBilgisi': 'Afyon Bükme Börek, Afyonkarahisara özgü, ince yufka ile hazırlanan ve farklı şekillerde sarılarak pişirilen nefis bir börek'
          'türüdür. Genellikle peynir, kıyma veya ıspanak gibi iç malzemelerle hazırlanır, ancak en yaygın olanı peynirli versiyonudur. Bükme böreğin özelliği,'
          'yufkanın el ile incecik açılması ve gözleme tarzı sarılarak fırında pişirilmesidir. Yufka, zeytinyağı veya tereyağı ile yağlanarak lezzetlendirilir'
          've ardından sarma işlemi yapılır. Piştikten sonra dışı çıtır, içi ise yumuşak ve lezzetli olur. Afyon bükme böreği, özellikle kahvaltılarda ve'
          'öğünlerde tercih edilir. Afyonkarahisarın geleneksel mutfağının önemli bir parçası olan bu börek, misafirlere sunulan sıcak ve doyurucu bir lezzettir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiAfyon(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiAfyon extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiAfyon({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class AgriSayfasi extends StatefulWidget {
  const AgriSayfasi({super.key});

  @override
  _AgriSayfasiState createState() => _AgriSayfasiState();
}

class _AgriSayfasiState extends State<AgriSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Ağrı',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Ağrı')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Ağrı')) {
                provider.removeFavoriSehir('Ağrı');
              } else {
                provider.addFavoriSehir('Ağrı');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Ağrı')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Ağrı')
                        ? 'Ağrı favorilere eklendi!'
                        : 'Ağrı favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Ağrı')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Ağrı')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Ağrı')) {
                provider.removeGidilenSehir('Ağrı');
              } else {
                provider.addGidilenSehir('Ağrı');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Ağrı')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Ağrı')
                        ? 'Ağrı gidilen şehirlere eklendi!'
                        : 'Ağrı gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1059142464/tr/fotoğraf/khor-virap-manastırı-ve-mt-ararat.jpg?s=612x612&w=0&k=20&c=bBA2qlzkTGmxmcbwr4BSqZ8Xb3-QPK1JD5zfXb2Yo8k=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Ağrı, Türkiye\'nin doğusunda yer alan ve doğal güzellikleriyle ünlü bir şehirdir. '
                    'Dünyanın en yüksek ikinci volkanik dağı olan Ağrı Dağı bu şehirde yer alır ve kutsal bir anlam taşır. '
                    'Tarihi İshak Paşa Sarayı, büyüleyici mimarisiyle ziyaretçileri cezbeder. Ayrıca, Ağrı doğal manzaraları ve '
                    'tarihi dokusuyla keşfedilmeye değer bir destinasyondur.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiAgri(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiAgri(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Ağrı'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiAgri extends StatelessWidget {
  const YerSayfasiAgri({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Ağrı Dağı',
      'gorsel':
          'https://media.istockphoto.com/id/1166976621/tr/fotoğraf/iğdır-türkiye-orta-doğu-ağrı-dağının-nefes-kesen-manzarası-türkiyenin-en-uç-doğusundaki-en.jpg?s=612x612&w=0&k=20&c=62MsaHs3PPeTmxdQ5uMkBOwBnuzkjes3GVqgvJt-Vxw=',
      'bilgi': 'Türkiyenin en yüksek noktası olan Ağrı Dağı, doğa severlerin ve dağcıların en çok tercih ettiği yerlerden biridir. 5.137 metre'
          'yüksekliğe sahip olan dağ, aynı zamanda efsanelere konu olan Nuh un Gemisi hikayesiyle ünlüdür. Dağda tırmanış yapmak isteyenler için profesyonel'
          'rehberlik hizmetleri sunulmaktadır. Ayrıca çevresi zengin bir biyolojik çeşitliliğe ev sahipliği yapar.'
    },
    {
      'isim': 'İshak Paşa Sarayı',
      'gorsel':
          'https://i.neredekal.com/i/neredekal/75/1200x675/653171fecd68d204ee92a595',
      'bilgi': 'Doğubayazıt ilçesinde bulunan İshak Paşa Sarayı, Osmanlı dönemine ait benzersiz bir mimari yapıdır. 18. yüzyılda inşa edilen saray,'
          'Anadolu da ilk kalorifer sistemi kullanılan yapılardan biri olarak dikkat çeker. Sarayın içindeki taş işçiliği, süslemeleri ve manzarası'
          'büyüleyicidir. Doğubayazıt Ovası na hakim bir konumda yer alan saray, tarih ve mimari meraklıları için mutlaka görülmesi gereken bir yerdir.'
    },
    {
      'isim': 'Doğubayazıt Kalesi',
      'gorsel':
          'https://i.neredekal.com/i/neredekal/75/585x300/60734c192e62bcfe31fa409c',
      'bilgi':
          'İshak Paşa Sarayı’na yakın bir konumda yer alan Doğubayazıt Kalesi, tarih boyunca stratejik bir savunma noktası olarak kullanılmıştır.'
              'Kaleye çıkarak Doğubayazıt Ovası nın eşsiz manzarasını izleyebilirsiniz. Ayrıca kale, Urartu ve Osmanlı dönemlerinden izler taşıyan tarihi'
              'kalıntılara sahiptir.'
    },
    {
      'isim': 'Meteor Çukuru',
      'gorsel':
          'https://www.kozmikanafor.com/wp-content/uploads/2018/02/dogubeyazit-Meteor-Cukuru-7716651523-e1541470299702.jpg',
      'bilgi': 'Doğubayazıt’ın Gürbulak Köyü yakınlarında bulunan Meteor Çukuru, dünyanın en büyük ikinci meteor çukuru olarak bilinir. 60 metre'
          ' derinlik ve 35 metre çapındaki bu çukur, bir göktaşının düşmesi sonucu oluşmuştur. Doğal bir oluşum olan Meteor Çukuru, bölgeyi ziyaret'
          ' eden turistler için ilginç bir duraktır. Ayrıca çevresi, doğa yürüyüşleri için elverişli bir alan sunar.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiAgri(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiAgri extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiAgri(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiAgri extends StatelessWidget {
  const YemekSayfasiAgri({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Abdigör Köftesi',
      'gorsel':
          'https://i.ytimg.com/vi/4_KJn9hT_OM/hq720.jpg?sqp=-oaymwEhCK4FEIIDSFryq4qpAxMIARUAAAAAGAElAADIQj0AgKJD&rs=AOn4CLCNVCDJ_T3pnCJu4uq3hzHEA78rbQ',
      'yemekBilgisi': 'Ağrı’nın en meşhur yemeklerinden biri olan Abdigör Köftesi, tarihsel bir geçmişe sahiptir ve Osmanlı mutfağından günümüze kadar ulaşmıştır. '
          'Bu özel köftenin yapımında yalnızca yağsız kuzu eti veya dana eti kullanılır. Et, özel bir teknikle taş ya da tokmak yardımıyla iyice '
          'dövülerek hamur kıvamına getirilir. Ardından içerisine çok az miktarda soğan, tuz ve baharat eklenir. Yoğrulan karışım, yuvarlak köfte'
          ' şekline getirilip kaynar suda haşlanarak pişirilir. Genellikle pirinç pilavı ya da yoğurt eşliğinde servis edilir. Abdigör Köftesi, '
          'Ağrı mutfağının en bilinen ve ziyaretçiler tarafından mutlaka denenmesi gereken yemeklerinden biridir.',
    },
    {
      'isim': 'Ağrı Keşkeği',
      'gorsel':
          'https://d17wu0fn6x6rgz.cloudfront.net/img/w/tarif/mgt/kesgkek_8-367.webp',
      'yemekBilgisi': 'Ağrı yöresine özgü olan keşkek, bayramlarda, düğünlerde ve özel günlerde yapılan geleneksel bir yemektir. Yapımında buğday,'
          ' kuzu eti ya da dana eti kullanılır. Buğday ve et, büyük kazanlarda uzun süre boyunca kısık ateşte pişirilerek birbirine karıştırılır ve'
          ' kıvam alması sağlanır. Pişirme sırasında sık sık karıştırılarak yemeğin özleşmesi sağlanır. Helme kıvamına gelen karışım, bir havanda '
          'dövülerek servis öncesi son halini alır. Üzerine eritilmiş tereyağı, kırmızı biber veya salça sosu gezdirilerek sıcak şekilde sunulur. '
          'Keşkek, yöre halkı tarafından hem doyurucu hem de lezzetli bir yemek olarak çok sevilir ve sıklıkla tüketilir.',
    },
    {
      'isim': 'Hengel',
      'gorsel':
          'https://i.pinimg.com/originals/e3/d2/13/e3d21355daae666e7fd910fb4ba3e94d.jpg',
      'yemekBilgisi': 'Hengel, Ağrı mutfağında oldukça yaygın olarak yapılan ve sevilen bir hamur işidir. Görüntüsü itibarıyla mantıya benzese de '
          'hazırlama ve sunum açısından farklıdır. Hengel, mayasız hamurun ince yufkalar halinde açılıp küçük kareler halinde kesilmesiyle hazırlanır.'
          ' Kesilen parçalar kaynar suda haşlanarak pişirilir. Ardından üzerine bolca sarımsaklı yoğurt dökülür ve eritilmiş tereyağı ile pul biber'
          ' karışımı eklenerek servis edilir. Bazı yörelerde üzerine kuru nane veya sumak da serpilir. Hengel, hafif ve lezzetli bir yemek olduğu'
          ' için özellikle akşam yemeklerinde tercih edilir ve yörede misafirlere ikram edilen özel yemeklerden biridir.',
    },
    {
      'isim': 'Helise',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/0x0/5e1c704e0f2544125445c353.jpg',
      'yemekBilgisi': 'Ağrı mutfağının en meşhur yemeklerinden biri olan Helise, hem özel günlerde hem de kış aylarında sıklıkla yapılan geleneksel'
          ' bir yemektir. Yapımında genellikle buğday ve kuzu eti kullanılır. Öncelikle buğday yıkanıp ayıklanır ve ardından kuzu etiyle birlikte '
          'büyük kazanlarda uzun süre pişirilir. Pişirme sırasında malzemeler iyice karışır ve yoğun bir kıvam alır. Yemeğin özleşmesi için sık sık '
          'karıştırılır. Helise, özel günlerde büyük kazanlarda topluca hazırlanır ve düğünlerde veya kalabalık etkinliklerde misafirlere ikram edilir. '
          'Üzerine tereyağı ve baharat dökülerek sıcak servis edilir. Lezzetli ve doyurucu olması nedeniyle bölgede oldukça popülerdir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiAgri(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.travel_explore),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiAgri extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiAgri({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.travel_explore),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class AksaraySayfasi extends StatefulWidget {
  const AksaraySayfasi({super.key});

  @override
  _AksaraySayfasiState createState() => _AksaraySayfasiState();
}

class _AksaraySayfasiState extends State<AksaraySayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Aksaray',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Aksaray')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Aksaray')) {
                provider.removeFavoriSehir('Aksaray');
              } else {
                provider.addFavoriSehir('Aksaray');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Aksaray')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Aksaray')
                        ? 'Aksaray favorilere eklendi!'
                        : 'Aksaray favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Aksaray')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Aksaray')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Aksaray')) {
                provider.removeGidilenSehir('Aksaray');
              } else {
                provider.addGidilenSehir('Aksaray');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Aksaray')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Aksaray')
                        ? 'Aksaray gidilen şehirlere eklendi!'
                        : 'Aksaray gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1213836989/tr/fotoğraf/uçhisar-köyü-nensehit-ditrict-kapadokya-türkiye-muhteşem-kayalık-kale.jpg?s=612x612&w=0&k=20&c=3AlRFtF-lVUT9R9Gi6O7p8cejLml1xQsHFbGQkpHkrQ=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Aksaray, Türkiye\'nin İç Anadolu Bölgesi\'nde yer alan bir ildir. Kapadokya bölgesinin bir parçası olan Aksaray, tarihi '
                    've doğal güzellikleriyle ünlüdür. Ihlara Vadisi, Selime Katedrali ve Aksaray\'ın simgesi haline gelmiş olan Kızılkaya gibi '
                    'doğal güzellikleri ile dikkat çeker. Ayrıca, tarihsel anlamda önemli olan Ağzıkarahan ve Sultanhanı gibi kervansaraylar da Aksaray\'da bulunur.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiAksaray(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiAksaray(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Aksaray'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiAksaray extends StatelessWidget {
  const YerSayfasiAksaray({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Ihlara Vadisi',
      'gorsel':
          'https://media.istockphoto.com/id/1202308629/tr/fotoğraf/kapadokyadaki-ihlara-vadisinin-panoramik-manzarası.jpg?s=612x612&w=0&k=20&c=E2MHt-dS3BLeOS-no_jLhXflB9zKkehVO1FL5AVGOkk=',
      'bilgi': 'Ihlara Vadisi, Aksaray ın en ünlü doğal güzelliklerinden biridir ve Türkiye nin en büyük kanyonlarından biri olarak bilinir.'
          'Melendiz Çayının oluşturduğu bu vadi, 14 kilometre uzunluğundadır ve doğa ile tarihin birleştiği eşsiz bir yerdir. Vadinin içerisinde kayalara '
          'oyulmuş kiliseler, manastırlar ve yaşam alanları bulunmaktadır. Bu yapılar, erken Hristiyanlık döneminden kalma olup Bizans döneminde önemli bir dini '
          'merkez olarak kullanılmıştır. Yürüyüş parkurları ve muhteşem doğası sayesinde doğa severler ve tarih meraklıları için harika bir destinasyondur.'
    },
    {
      'isim': 'Hasan Dağı',
      'gorsel':
          'https://erdemzengin.com.tr/wp-content/uploads/2021/05/Helvadere-Yaylalari-Hasandagi-Erdem-ZENGIN-Nisan-2021-1024x683.jpg',
      'bilgi': 'Aksaray’ın simgesi haline gelen Hasan Dağı, 3.268 metre yüksekliğiyle İç Anadolu Bölgesi nin en yüksek dağlarından biridir.'
          'Sönmüş bir volkanik dağ olan Hasan Dağı, dağcılık ve doğa sporları için oldukça elverişlidir. Zirvesine tırmanış yapanlar, Aksaray ve çevresinin'
          'panoramik manzarasını izleyebilir. Ayrıca, Hasan Dağı çevresi, antik dönemlerde volkanik hareketler sonucu oluşmuş tüflerden dolayı Kapadokya ya'
          'benzer bir coğrafyaya sahiptir. Bu özellikleriyle hem doğaseverlerin hem de fotoğrafçıların ilgisini çeker.'
    },
    {
      'isim': 'Karatay Hanı',
      'gorsel':
          'https://lh3.googleusercontent.com/proxy/fP8ibkVPexvY2_00XMyje9jU5ouAEIm928DTfJ4cKN8d9nZ3-Nyvgysx0_zUwDQRKO9y6JVLxNvd8QdmUY_7skgC3eH56w',
      'bilgi': 'Karatay Hanı, Selçuklu döneminden kalma bir kervansaraydır ve Aksaray’ın Sultanhanı Kasabasında yer alır. 13. yüzyılda, Selçuklu sultanı'
          'Alaaddin Keykubat döneminde yapılmıştır. İpek Yolu üzerinde bulunan bu kervansaray, ticaret kervanlarının dinlenme ve güvenlik ihtiyacını karşılamak'
          'için inşa edilmiştir. Mimari yapısı oldukça etkileyicidir; avlusu, revakları ve süslemeleriyle Selçuklu taş işçiliğinin en güzel örneklerinden birini'
          'sergiler. Günümüzde turistler tarafından yoğun ilgi gören bu han, tarih ve kültür meraklıları için mutlaka görülmesi gereken yerlerden biridir.'
    },
    {
      'isim': 'Aşıklı Höyük',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/uploads/21.asikli-hoyuk-balon_0.jpg?format=jpg&quality=50',
      'bilgi': 'Aksaray’ın Güzelyurt ilçesinde bulunan Aşıklı Höyük, Anadolu’nun bilinen en eski yerleşim yerlerinden biridir ve yaklaşık 10.000 yıl '
          'öncesine dayanan bir geçmişe sahiptir. Burası, tarımın ve hayvancılığın ilk izlerinin görüldüğü, yerleşik hayata geçişin önemli bir aşamasını '
          'temsil eden bir höyüktür. Aşıklı Höyük’te yapılan kazılarda, obsidiyen (volkanik cam) aletler, taş evler ve mezar alanları gibi birçok '
          'arkeolojik bulgu ortaya çıkarılmıştır. Tarih boyunca önemli bir kültürel merkez olan Aşıklı Höyük, tarih severler için benzersiz bir ziyaret '
          'noktasıdır.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiAksaray(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.travel_explore),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiAksaray extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiAksaray(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.travel_explore),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiAksaray extends StatelessWidget {
  const YemekSayfasiAksaray({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Aksaray Tandır Kebabı',
      'gorsel':
          'https://media-cdn.tripadvisor.com/media/photo-s/1c/37/24/c2/firin-kebab9i.jpg',
      'yemekBilgisi':
          'Aksaray Tandır Kebabı, şehrin en meşhur yemeklerinden biridir. Kuzu etinin, özellikle but kısmının, uzun süre odun ateşinde '
              'pişirilmesiyle hazırlanır. Et, tandırda yavaşça pişerek, lezzetini ve yumuşaklığını kazanır. Tandır kebabı, genellikle yanında pilav veya'
              ' soğan salatası ile servis edilir. Özellikle düğünler ve büyük kutlamalar gibi özel günlerde sıkça yapılır ve Aksaray’ın eşsiz tatlarından'
              ' biridir.',
    },
    {
      'isim': 'Kokina Çorbası',
      'gorsel':
          'https://server.canakkaleolay.com/public/photos/news/2024/202407/haber-66731/91692657_66731_kokina-corbasi-nasil-yapi.webp',
      'yemekBilgisi': 'Kokina Çorbası, Aksaray a özgü geleneksel bir çorba olup, özellikle kış aylarında yapılan besleyici bir yemektir.'
          'Adını, yöreye özgü ve dağlarda yetişen kokina bitkisinden alır. Çorba, kokina bitkisi, bulgur, nohut, et suyu ve çeşitli baharatlar kullanılarak'
          'hazırlanır. Bu malzemeler kaynatılarak, kendine has lezzeti ve aromasını kazandıran bir çorba ortaya çıkar. Kokina Çorbası, özellikle soğuk kış '
          'günlerinde bağışıklık sistemini güçlendirici ve enerji verici bir seçenek olarak tercih edilir. Genellikle ekmek veya yoğurt ile birlikte servis '
          'edilen bu çorba, Aksaray ın geleneksel mutfak kültürünün önemli bir parçasıdır.',
    },
    {
      'isim': 'Aksaray Soğanlama',
      'gorsel':
          'https://cdn.ye-mek.net/App_UI/Img/out/420/2021/11/soganlama-resimli-yemek-tarifi(12).jpg',
      'yemekBilgisi': 'Aksaray Soğanlama yemeği, yumurta ve soğan ile yapılan geleneksel bir yemektir. Bu yemek, Aksaraya özgü olup, özellikle'
          'kahvaltılarda tercih edilir. Soğanlar, ince ince doğranarak az yağda kavrulur ve ardından yumurta eklenerek karıştırılır. Yumurtalar, soğanlarla '
          'birlikte pişirilir ve bu karışıma genellikle baharatlar (özellikle kararbiber ve tuz) eklenir. Soğanların tatları yumurtaya geçer ve ortaya oldukça '
          'lezzetli ve besleyici bir yemek çıkar. Aksaray Soğanlama, basit ama lezzetli bir yemektir, genellikle ekmek ile birlikte servis edilir ve hem '
          'kahvaltılarda hem de akşam yemeklerinde tercih edilir. Bu yemek, Aksaray ın geleneksel mutfak kültürünü yansıtan önemli bir lezzettir.',
    },
    {
      'isim': 'Mantarlı Bulgur Pilavı',
      'gorsel':
          'https://d17wu0fn6x6rgz.cloudfront.net/img/w/tarif/ogt/mantarli-bulgur-pilavi.webp',
      'yemekBilgisi': 'Aksaray Mantarlı Bulgur Pilavı, Aksaray’a özgü ve oldukça lezzetli bir yemektir. Bu pilav, bulgur ve mantar gibi malzemelerin '
          'birleşimiyle hazırlanır. Bulgur pilavının temel malzemesi olarak kullanıldığı bu yemekte, doğranmış mantarlar önceden kavrulup, bulgurla birlikte'
          ' pişirilir. Mantarların lezzeti pilava siner, böylece ortaya zengin aromalı bir yemek çıkar. Genellikle soğan, domates ve baharatlar (tuz, karabiber,'
          ' pul biber gibi) da eklenerek pilavın tadı zenginleştirilir. Aksaray Mantarlı Bulgur Pilavı, hem sağlıklı hem de doyurucu bir alternatiftir. Özellikle'
          'et yemeklerinin yanında garnitür olarak sunulabilir. Bu yemek, Aksarayın yerel mutfağını yansıtan ve hem evde hem de misafir sofralarında sıkça '
          'tercih edilen bir lezzettir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiAksaray(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.travel_explore),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiAksaray extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiAksaray({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.travel_explore),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class AmasyaSayfasi extends StatefulWidget {
  const AmasyaSayfasi({super.key});

  @override
  _AmasyaSayfasiState createState() => _AmasyaSayfasiState();
}

class _AmasyaSayfasiState extends State<AmasyaSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Amasya',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Amasya')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Amasya')) {
                provider.removeFavoriSehir('Amasya');
              } else {
                provider.addFavoriSehir('Amasya');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Amasya')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Amasya')
                        ? 'Amasya favorilere eklendi!'
                        : 'Amasya favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Amasya')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Amasya')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Amasya')) {
                provider.removeGidilenSehir('Amasya');
              } else {
                provider.addGidilenSehir('Amasya');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Amasya')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Adıyaman')
                        ? 'Amasya gidilen şehirlere eklendi!'
                        : 'Amasya gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://cdn2.enuygun.com/media/lib/1200x675/uploads/image/amasya-54292.webp',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Amasya, Karadeniz Bölgesi\'nde yer alan ve tarihi dokusu ile ünlü bir şehir olan Amasya, Osmanlı döneminden kalma '
                    'birçok tarihi yapıya sahiptir. Amasya Kalesi, Hatuniye Medresesi, Amasya Evleri ve Tarihi Çarşılar şehri önemli '
                    'turistik mekanları arasındadır. Ayrıca, Amasya\'nın bulunduğu vadi manzarası da büyüleyici bir görsel şölen sunar.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiAmasya(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiAmasya(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Amasya'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiAmasya extends StatelessWidget {
  const YerSayfasiAmasya({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Amasya Kalesi',
      'gorsel':
          'https://www.kulturportali.gov.tr/contents/images/20180626151158924_AMASYA%20KALE%20GULCAN%20ACAR%20(1).jpg',
      'bilgi': 'Amasya Kalesi, şehri yüksekten izleyebileceğiniz ve tarihi dokusunu derinden hissedebileceğiniz önemli bir yapıdır. Yeşilırmak boyunca'
          ' yer alan kaleye, zorlu bir tırmanışla ulaşılabilir. MÖ 3000 yıllarına kadar dayandığı düşünülen kale, Pontus Krallığı dönemine kadar uzanan bir tarihe '
          'sahiptir. Kale, Roma, Bizans ve Osmanlı dönemlerinde de kullanılmıştır. Kale duvarları, sur, kule ve saray kalıntıları gibi pek çok tarihi yapıyı içerir. '
          'Yüksekçe bir tepeye inşa edildiği için Amasya nın muazzam manzarasını görebileceğiniz harika bir nokta sunar.'
    },
    {
      'isim': 'Yalıboyu Evleri',
      'gorsel': 'https://ayder.com.tr/uploads/p/o/kdb82rvfirqj.webp',
      'bilgi': 'Amasya Yalıboyu Evleri, Amasya nın en bilinen ve tarihi açıdan önemli yapılarından biridir. Şehir merkezine hakim bir konumda bulunan'
          'bu evler, Osmanlı dönemi mimarisinin güzel örneklerinden olup, Amasya nın geleneksel yaşam tarzını yansıtır. Yalıboyu Evleri, genellikle ahşap ve taş'
          ' malzemelerle inşa edilmiş olup, çoğu iki katlı ve saçaklı yapıdadır. Evlerin dış cephelerinde dikkat çeken en önemli özellik, ahşap işlemeler ve ince'
          ' detaylarla bezenmiş pencereleridir. Ayrıca evlerin çoğunda balkon ve teras yer alır. Evlerin iç mekanlarında ise geniş odalar, yüksek tavanlar ve '
          'geleneksel Türk ev hayatına uygun düzenlemeler göze çarpar. Yalıboyu Evleri, Yeşilırmak kenarına sıralanmış olup, bu evler hem Amasya nın estetik '
          'dokusunu hem de tarihini yansıtan önemli bir kültürel mirastır. Ziyaretçilere, eski Amasya yaşamı hakkında fikir verirken, aynı zamanda şehri panoramik '
          'olarak görme imkanı da sunar. Bugün, bu evlerin bir kısmı restore edilerek turistlere açılmıştır.'
    },
    {
      'isim': 'Hazeranlar Konağı',
      'gorsel':
          'https://afillikosk.com/wp-content/uploads/2021/08/hazeranlarkonagi3.jpg',
      'bilgi': 'Amasyanın Osmanlı dönemi mimarisinin en iyi örneklerinden biri olan Hazeranlar Konağı, aynı zamanda Amasya nın kültürel ve sosyal tarihine '
          'dair bilgi edinmek için mükemmel bir mekandır. 19. yüzyılda inşa edilen bu konak, 2 katlı olup, Ahşap Osmanlı konak mimarisini yansıtan ayrıntılara '
          'sahiptir. Konağın içindeki odalar, o dönemin yaşam tarzını ve sosyal düzenini gözler önüne sererken, zengin dekorasyonu, el işlemeleri ve zarif mobilyalar'
          ' da dikkat çeker. Bugün Amasya Müzesi olarak kullanılan konakta, etnografik sergiler ve dönemin yaşamına dair öğeler bulunur. Ziyaretçilere, Amasyanın'
          'eski zamanlardaki halk yaşamı hakkında geniş bilgi sağlanır.'
    },
    {
      'isim': 'II. Beyazıt Külliyesi',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/SehirRehberi//GezilecekYer/20211020083531925_002.jpg?format=jpg&quality=50',
      'bilgi': 'II. Beyazıt Külliyesi, Amasyada Osmanlı dönemi mimarisinin önemli örneklerinden bir diğeridir. Külliye, II. Beyazıt tarafından 1486-1487'
          'yılları arasında yaptırılmıştır ve Amasyanın Merkez ilçesinde yer alır. Külliye, cami, medrese, hamam ve imaret gibi yapıları içerir. Camisi, özellikle'
          ' zarif mimarisi ve Osmanlı minaresi ile dikkat çeker. Ayrıca külliyede yer alan medrese, dönemin eğitim kurumlarını yansıtır ve burada çeşitli bilimsel'
          ' çalışmalar yapılmıştır. Hamam kısmı ise geleneksel Osmanlı hamam kültürünü gösterir. Bugün külliye, hem turistler hem de araştırmacılar için önemli '
          'bir tarihi ve kültürel zenginlik sunmaktadır. Amasyaya gelenlerin görmesi gereken yerlerden biridir.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiAmasya(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.travel_explore),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiAmasya extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiAmasya(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.travel_explore),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiAmasya extends StatelessWidget {
  const YemekSayfasiAmasya({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Bakla Dolması',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/SehirRehberi//TurkMutfagi/20190516105337704_sag%20kose%20loGgolu.jpg?format=jpg&quality=50',
      'yemekBilgisi': 'Amasya Bakla Dolması, taze baklanın lezzetini en iyi şekilde yansıtan yöresel bir yemektir. Baklalar, pirinç, kıyma veya zeytinyağı '
          ' ile doldurulup baharatlarla tatlandırılır ve zeytinyağı ile pişirilir. Yemeğin içinde yer alan dereotu, nane gibi otlar, ona ferah bir aroma '
          'katar. Genellikle yaz aylarında yapılan bu dolma, soğuk servis edilebileceği gibi sıcak da tüketilebilir. Amasya nın geleneksel mutfağını '
          'keşfetmek isteyenler için vazgeçilmez bir lezzet sunar. Hem sağlıklı hem de doyurucu bir seçenek olan bakla dolması, Amasya nın özgün yemek kültürünü '
          ' yansıtır.',
    },
    {
      'isim': 'Topuz Kebabı',
      'gorsel':
          'https://amasya.ktb.gov.tr/Resim/434212,has-ascibasi-ahmet-ozdemir-topuz-kebab-1jpg.png?0',
      'yemekBilgisi': 'Amasya Topuz Kebabı, Amasya nın geleneksel et yemeklerinden biridir ve özellikle yöresel tatları arayanlar için ideal bir seçimdir.'
          'Bu kebap, kuzu etinin belirli bölümlerinden yapılan, terbiyeli ve baharatlı etlerin şişe dizilerek pişirilmesiyle hazırlanır. Etler, önce zeytinyağı, '
          'sarımsak, soğan, yoğurt ve baharatlarla marine edilir, ardından şişlere geçirilip mangalda veya ocakta pişirilir. Etin lezzeti, uzun süre yapılan '
          'marinasyon işleminden ve pişirme tekniklerinden gelir. Genellikle pilav veya yoğurtla birlikte servis edilen Amasya Topuz Kebabı, hem lezzetli hem de '
          'doyurucu bir yemektir.',
    },
    {
      'isim': 'Amasya Çöreği',
      'gorsel': 'https://amasya.ktb.gov.tr/Resim/355293,amasyacoregi.png?0',
      'yemekBilgisi': 'Amasya Çöreği, Amasya nın en bilinen ve sevilen yöresel tatlarından biridir. Özellikle bayramlarda ve özel günlerde yapılan bu '
          'çörek, yoğurt, un, şeker ve yağ gibi temel malzemelerin birleşiminden oluşur. Hamuru yoğurulduktan sonra, üzerine genellikle ceviz, fındık veya susam'
          'serpilerek lezzeti artırılır. Amasya Çöreği, dışı kıtır kıtır, içi ise yumuşak ve yoğun bir dokuya sahiptir. Yapımı genellikle uzun zaman alır,'
          'ancak sonunda elde edilen sonuç, hem tatlı severler hem de misafirler için mükemmel bir ikramdır. Amasya nın yerel mutfağını tanımak isteyenler için'
          ' bu çörek, bölgenin özgün tatlarından biridir. Hem kahvaltılarda hem de çay saatlerinde tercih edilen bu tatlı, Amasya nın geleneksel lezzet kültürünü '
          'yansıtan harika bir örnektir.',
    },
    {
      'isim': 'Elma Tatlısı',
      'gorsel':
          'https://iasbh.tmgrup.com.tr/83aac0/812/467/0/114/2853/1754?u=http://i.tmgrup.com.tr/sfr/2013/07/26/Orjinal/575908453896.jpg',
      'yemekBilgisi': 'Amasya Elma Tatlısı, Amasyanın yöresel tatlılarından biridir ve özellikle elma üretimiyle ünlü bu bölgenin elmalarından yapılır.'
          'Tatlı, taze elma dilimlerinin, şeker ve çeşitli baharatlarla tatlandırılarak pişirilmesiyle hazırlanır. Genellikle tarçın ve karanfil gibi aromatik '
          'baharatlar, elmanın doğal tadını zenginleştirir. Elmalar pişirildikten sonra üzerine ceviz veya fındık serpilir, bazen de şerbet eklenerek tatlıyı '
          'tatlandıran bir sıvı ile tamamlanır. Hem pratik hem de lezzetli olan bu tatlı, Amasyanın zengin meyve çeşitliliğinden yararlanarak yapılan geleneksel '
          'bir tatlıdır. Şekerli ve hafif asidik tadıyla, Amasya Elma Tatlısı, elma severlerin beğenisini kazanır.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiAmasya(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.travel_explore),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiAmasya extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiAmasya({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.travel_explore),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class AnkaraSayfasi extends StatefulWidget {
  const AnkaraSayfasi({super.key});

  @override
  _AnkaraSayfasiState createState() => _AnkaraSayfasiState();
}

class _AnkaraSayfasiState extends State<AnkaraSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Ankara',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Ankara')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Ankara')) {
                provider.removeFavoriSehir('Ankara');
              } else {
                provider.addFavoriSehir('Ankara');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Ankara')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Ankara')
                        ? 'Ankara favorilere eklendi!'
                        : 'Ankara favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Ankara')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Ankara')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Ankara')) {
                provider.removeGidilenSehir('Ankara');
              } else {
                provider.addGidilenSehir('Ankara');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Ankara')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Ankara')
                        ? 'Ankara gidilen şehirlere eklendi!'
                        : 'Ankara gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://c0.wallpaperflare.com/preview/939/110/520/turkey-anıtkabir-monument-mausolea.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Ankara, Türkiye\'nin başkenti olup, tarihi ve kültürel zenginlikleri ile önemli bir şehirdir. '
                    'Anıtkabir, Atatürk Orman Çiftliği, Kuğulu Park ve Kocatepe Camii gibi yerlerle ünlüdür. '
                    'Ankara, aynı zamanda ülkenin politik ve idari merkezidir. Türkiye Büyük Millet Meclisi ve Cumhurbaşkanlığı Sarayı gibi önemli yapılar da burada bulunmaktadır.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiAnkara(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiAnkara(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Ankara'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiAnkara extends StatelessWidget {
  const YerSayfasiAnkara({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Anıtkabir',
      'gorsel':
          'https://www.arkitera.com/wp-content/uploads/2009/11/anıtkabir.jpg.jpeg',
      'bilgi': 'Anıtkabir, Türkiye Cumhuriyeti nin kurucusu Mustafa Kemal Atatürk ün ebedi istirahatgahı olup, Ankara nın en önemli simgelerinden biridir.'
          'Modern ve anıtsal bir mimariyle tasarlanmış olan bu yapının inşasına 1944 te başlanmış, 1953 te tamamlanmıştır. Anıtkabir, görkemli Aslanlı Yol u,'
          ' Atatürk ün hayatına ve mücadelesine dair objelerin sergilendiği müzesi ile ziyaretçilerine tarihi bir deneyim sunar. Ayrıca, Barış Parkı ve '
          'çevresindeki yeşil alanlar, Anıtkabir in etrafını çevreleyen huzurlu bir atmosfer oluşturur. Hem Türk halkı hem de yabancı turistler için önemli '
          'bir ziyaret noktasıdır.'
    },
    {
      'isim': 'Kuğulu Park',
      'gorsel':
          'https://www.kulturportali.gov.tr/contents/images/ANKARA-KUĞULUĞARK-KIŞ-GÜLCANACAR%20(8)%20kopya.jpg',
      'bilgi': 'Kuğulu Park, Ankara nın en bilinen ve sevilen parklarından biridir, Tunalı Hilmi Caddesi üzerinde yer alır. Adını içinde yaşayan '
          'kuğulardan alan bu park, doğal güzellikleri ve sakin atmosferiyle şehre gelenlerin ilgi odağıdır. Parkta kuğular, ördekler ve diğer su kuşları, '
          'ziyaretçilere keyifli anlar sunarken, çevresindeki geniş çimenlik alanlar ve yürüyüş yolları da dinlenmek için idealdir. Kuğulu Park, şehre gelenler'
          'için hem dinlenme hem de sosyal bir buluşma noktası olmasının yanı sıra, çevresindeki kafelerde oturmak ve alışveriş yapmak için popüler bir'
          'lokasyondur.'
    },
    {
      'isim': 'Ankara Kalesi',
      'gorsel':
          'https://media.istockphoto.com/id/1196841474/tr/fotoğraf/ankara-kalesi-manzarası-türkiyede-antik-surlar.jpg?s=612x612&w=0&k=20&c=OiLnH1dlw6H2wxMDK9oO3rZt-Ewd_-Aba8tPwJU99K0=',
      'bilgi': 'Ankara Kalesi, şehrin en eski ve tarihi yapılarından biridir ve şehri yüksek bir tepeden görebilmenizi sağlar. Kale, Roma, Bizans,'
          ' Selçuklu ve Osmanlı dönemlerine ait izler taşır ve her dönemde çeşitli eklemelerle güçlendirilmiştir. İç kısmında taş duvarlarla çevrili dar '
          'sokaklar, tarihi evler ve antikacılar yer alır. Kale, hem tarihi bir yapı hem de Ankara nın panoramik manzarasını sunan bir nokta olarak büyük '
          'ilgi görür. Ayrıca, kale çevresindeki surlardan şehir manzarası eşliğinde fotoğraflar çekmek oldukça popülerdir. Ankara Kalesi, turistler ve yerli '
          'halk için tarih, kültür ve doğal güzelliklerin bir arada sunulduğu önemli bir ziyaret noktasıdır.'
    },
    {
      'isim': 'CerModern',
      'gorsel':
          'https://img.piri.net/mnresize/900/-/resim/imagecrop/2024/04/30/09/58/resized_2f0a5-4ed49d5f2.jpg',
      'bilgi': 'CerModern, Ankara nın en önemli çağdaş sanat galerilerinden biridir ve modern sanatın Türkiye deki önemli temsilcilerinden birini sunar.'
          ' Eski bir tren deposunun restore edilerek sanat galerisine dönüştürülmesiyle oluşturulmuş olan CerModern, sanatı farklı disiplinlerde tanıtan '
          'bir merkez olarak faaliyet gösterir. Galeri, yerel ve uluslararası sanatçıların eserlerini sergileyerek çağdaş sanatın farklı yönlerini '
          'keşfetmek isteyen sanatseverler için zengin bir içerik sunar. Ayrıca, CerModern’de çeşitli etkinlikler de düzenlenir; film gösterimleri, sanat '
          'atölyeleri ve açık hava konserleri gibi organizasyonlar ziyaretçilere kültürel bir deneyim sunar. Sanat galerisi içinde yer alan kafede '
          'dinlenebilir, sanatla ilgili kitaplar ve hediyelikler satın alabilirsiniz. CerModern, modern sanatı keşfetmek ve sanatsal etkinliklere katılmak'
          ' için popüler bir mekandır.'
    },
    {
      'isim': 'Seğmenler Parkı',
      'gorsel': 'https://weloveankara.com/wp-content/uploads/2021/09/1.jpg',
      'bilgi': 'Seğmenler Parkı, Ankara nın Çankaya ilçesinde yer alan büyük ve doğal güzellikleriyle ünlü bir parktır. Şehre yakın konumu ve geniş '
          'yeşil alanlarıyla, şehir hayatının stresinden uzaklaşmak isteyenler için popüler bir kaçış noktasıdır. Park, zengin bitki örtüsü, yürüyüş yolları, '
          'piknik alanları ve dinlenme alanlarıyla ziyaretçilerine doğayla iç içe bir deneyim sunar. Ayrıca, Seğmenler Parkı, şehri yüksek bir noktadan '
          'izleyebileceğiniz harika bir manzaraya sahiptir. Park, özellikle yaz aylarında, gölgelik alanlar ve serin havası ile Ankaralılar için ideal bir '
          'dinlenme alanı olarak tercih edilmektedir. Doğayla baş başa kalmak, yürüyüş yapmak veya piknik yapmak için mükemmel bir mekandır.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiAnkara(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiAnkara extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiAnkara(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiAnkara extends StatelessWidget {
  const YemekSayfasiAnkara({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Ankara Tava',
      'gorsel':
          'https://www.shutterstock.com/image-photo/local-turkish-food-lamb-on-600nw-2368057177.jpg',
      'yemekBilgisi': 'Ankara Tava, başkent Ankara nın meşhur yerel yemeklerinden biridir ve genellikle kuzu eti, soğan, sarımsak, domates ve '
          'baharatlarla hazırlanır. Et, önce zeytinyağıyla kavrulur ve ardından ince doğranmış patatesler ve diğer sebzelerle birlikte fırınlanarak pişirilir. '
          'Bu lezzetli yemek, zengin baharatları ve etin yumuşak dokusu ile dikkat çeker, genellikle pilav ya da yoğurtla birlikte servis edilir. Özellikle kış '
          'aylarında tercih edilen bu yemek, Ankara mutfağının önemli bir parçası olup, şehre özgü eşsiz bir tat sunar.',
    },
    {
      'isim': 'İnceğiz Çorbası',
      'gorsel':
          'https://gastromanya.com/wp-content/uploads/2022/04/Çorba-2.jpg',
      'yemekBilgisi': 'Ankara İnceğiz Çorbası, başkent Ankara nın geleneksel yemeklerinden biridir ve özellikle soğuk kış günlerinde tercih edilir.'
          'Bu çorba, ana malzeme olarak buğday, nohut ve et kullanılarak hazırlanır. İnceğiz Çorbası, buğdayın ve nohudun haşlanarak et suyuyla pişirilmesiyle '
          'yapılan, oldukça besleyici ve doyurucu bir yemektir. İçerisine genellikle soğan, sarımsak ve baharatlar eklenerek lezzetlendirilir. Kıvamı yoğun ve '
          'besleyici olan bu çorba, yanında ekmek ya da yoğurtla birlikte servis edilir. Geleneksel Ankara mutfağının vazgeçilmezlerinden biri olan İnceğiz Çorbası, '
          'misafirlere hem lezzetli hem de sıcak bir deneyim sunar.',
    },
    {
      'isim': 'Ankara Simidi',
      'gorsel':
          'https://www.ankarasimit.com.tr/assets/uploads/65ab7a56188a8.webp',
      'yemekBilgisi': 'Ankara simidi, başkent Ankara nın en sevilen sokak lezzetlerinden biridir. Özellikle sabah kahvaltılarında ya da atıştırmalık '
          'olarak tercih edilen bu simit, geleneksel Türk simidiyle benzerlik gösterse de kendine özgü bazı özelliklere sahiptir. Ankara simidi, daha ince '
          've gevrek yapısıyla dikkat çeker. Susamla kaplanmış dış yüzeyi çıtır çıtır olup, içi ise yumuşak ve hafif mayalıdır. Genellikle fırınlarda sıcak '
          'olarak satılan bu simit, yanında peynir, zeytin ya da çay ile tüketilir. Şehirdeki simitçiler, bu lezzeti sabahın erken saatlerinden akşam geç saate '
          'kadar sunar, ve hem yerli halk hem de turistler tarafından sıklıkla tüketilir. Ankaralılar için simit, yalnızca bir atıştırmalık değil, aynı zamanda '
          'şehrin geleneksel ve kültürel bir parçasıdır.',
    },
    {
      'isim': 'Ovmaç (Oğmaç) Aşı',
      'gorsel':
          'https://i.lezzet.com.tr/images-xxlarge-recipe/ovmac-corbasi-280e935c-0750-450d-aad9-7ab4873f3252.jpg',
      'yemekBilgisi': 'Ankara Ovmaç Aşı, başkent Ankara nın geleneksel yemeklerinden biridir ve özellikle kış aylarında, soğuk günlerde sıklıkla '
          'tercih edilen besleyici bir yemektir. Ovmaç, aslında bir çeşit çorba olarak kabul edilir ve buğday unu, yumurta, yoğurt, tereyağı ve et suyu '
          'gibi malzemelerle hazırlanır. Yoğurt ve un karıştırılarak açılan hamur küçük parçalar haline getirilir ve kaynayan et suyuna eklenir. Çorba '
          'piştikten sonra üzerine tereyağında kavrulmuş soğan, pul biber ve nane gibi baharatlar ilave edilir. Kıvamı yoğun ve doyurucu olan Ovmaç Aşı,'
          'geleneksel olarak ekmek ya da yoğurtla birlikte servis edilir. Hem besleyici hem de lezzetli olan bu çorba, Ankara mutfağının önemli örneklerinden '
          'biri olup, misafirlere sıcak ve rahatlatıcı bir öğün sunar.',
    },
    {
      'isim': 'Höşmerim Tatlısı',
      'gorsel':
          'https://www.suleymanpasa.bel.tr/icerikresimleri/img/kapak-31547.jpg',
      'yemekBilgisi': 'Ankara höşmerim tatlısı, başkent Ankara ya ait geleneksel bir tatlıdır ve özellikle yöresel mutfakta önemli bir yer tutar. '
          'Bu tatlı, genellikle lor peyniri, un, tereyağı, şeker ve vanilya gibi malzemelerle hazırlanır. İlk olarak peynirin lor kısmı kavrulup şekerle '
          'karıştırılır, ardından un ve tereyağı eklenir. Kıvamı yoğun ve kremamsı olan höşmerim, soğuduktan sonra dilimlenerek servis edilir. Hem tatlı '
          'hem de tuzlu peynirin lezzetli uyumunu sunan bu tatlı, genellikle üzerine dökülen kavrulmuş fındık veya cevizle süslenerek sunulur. Ankara höşmerimi, '
          'hem tatlı sevenlerin hem de yöresel mutfağı keşfetmek isteyenlerin mutlaka denemesi gereken özel bir lezzettir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiAnkara(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiAnkara extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiAnkara({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class AntalyaSayfasi extends StatefulWidget {
  const AntalyaSayfasi({super.key});

  @override
  _AntalyaSayfasiState createState() => _AntalyaSayfasiState();
}

class _AntalyaSayfasiState extends State<AntalyaSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Antalya',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Antalya')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Antalya')) {
                provider.removeFavoriSehir('Antalya');
              } else {
                provider.addFavoriSehir('Antalya');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Antalya')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Antalya')
                        ? 'Antalya favorilere eklendi!'
                        : 'Antalya favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Antalya')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Antalya')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Antalya')) {
                provider.removeGidilenSehir('Antalya');
              } else {
                provider.addGidilenSehir('Antalya');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Antalya')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Antalya')
                        ? 'Antalya gidilen şehirlere eklendi!'
                        : 'Antalya gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://cdn.pixabay.com/photo/2021/06/10/15/52/antalya-6326400_640.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Antalya, Türkiye\'nin güney sahilinde yer alan bir tatil cennetidir. '
                    'Ünlü plajları, Antik kentleri ve tarihi yapılarıyla dikkat çeker. '
                    'Olimpos, Phaselis ve Kaleiçi gibi önemli turistik bölgeler burada yer almaktadır. '
                    'Antalya, Akdeniz iklimi ve doğal güzellikleriyle tatilcilerin gözdesidir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiAntalya(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiAntalya(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Antalya'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),

            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),

            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiAntalya extends StatelessWidget {
  const YerSayfasiAntalya({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Kaleiçi',
      'gorsel':
          'https://antalya.com.tr/Uploaded/Content/new_afa671c2-4f63-45c7-872e-8add12647a86.jpg',
      'bilgi': 'Kaleiçi, Antalya nın tarihi merkezi olup, dar sokakları ve taş yapılarıyla dikkat çeker. Burada, Yivli Minare ve Hadrianus Kapısı gibi '
          'tarihi yapılar bulunur. Kaleiçi nin eski Osmanlı evleri, bölgeye özgü bir atmosfer yaratır ve dar sokaklarında gezmek oldukça keyiflidir. Ayrıca, bölge '
          'birçok restoran, kafe ve dükkana ev sahipliği yapar. Antalya nın tarihi surlarının bir kısmı da burada yer alır. Kaleiçi nden limana doğru inerken, deniz'
          ' manzarası eşliğinde yürüyüş yapabilirsiniz. Hem geçmişin hem de modern yaşamın iç içe geçtiği bu bölge, Antalya nın en popüler turistik noktalarından '
          'biridir.'
    },
    {
      'isim': 'Düden Şelalesi',
      'gorsel':
          'https://media.istockphoto.com/id/469055560/tr/fotoğraf/duden-falls.jpg?s=612x612&w=0&k=20&c=FUOBiVoofWnnvvBwGyzVSxxinidHLV_trZbmcHKVCCA=',
      'bilgi': 'Düden Şelalesi, Antalya şehir merkezinin sadece 12 km doğusunda yer alır ve hem yerli hem de yabancı turistlerin ilgisini çeker. '
          'Şelale, özellikle kayaların arasından düşen suyun oluşturduğu görüntü ile büyüleyicidir. Üst ve alt olmak üzere iki farklı noktasından'
          ' izlenebilen şelale, her iki alanda da farklı bir güzellik sunar. Üst kısımda suyun doğal olarak aktığı bölge, park ve piknik alanlarıyla '
          'çevrilidir, burada doğa yürüyüşleri yapılabilir. Alt Düden Şelalesi ise kayaların altından denize doğru dökülen suyu ile ünlüdür ve çevresinde'
          ' yürüyüş yolları ile zenginleştirilmiştir. Bu bölge, aynı zamanda fotoğrafçılar için harika bir mekandır.'
    },
    {
      'isim': 'Perge Antik Kenti',
      'gorsel':
          'https://antalya.com.tr/Uploaded/listing/1-395/antalya_perge_antik_kenti.jpg',
      'bilgi': 'Perge Antik Kenti, Antalya ya sadece 15 km uzaklıkta yer alır ve Roma dönemine ait önemli yapılarıyla büyük bir tarihi öneme sahiptir. '
          'Şehirdeki tiyatro, stadyum, hamamlar ve agora gibi yapılar, antik kentin büyüklüğünü ve ihtişamını yansıtır. Tiyatro, 15.000 kişilik kapasitesiyle '
          'dikkat çekerken, stadyum da dönemin spor aktivitelerine ev sahipliği yapmıştır. Perge nin en bilinen yapılarından biri olan Agora, ticaretin merkezi '
          'olmasının yanı sıra, şehrin sosyal hayatını da yansıtan önemli bir alandır. Arkeolojik kazılar hala devam etmekte olup, kentte çıkarılan eserler'
          ' Antalya Müzesi nde sergilenmektedir. Antik kent, sadece tarihi kalıntılarıyla değil, aynı zamanda ziyaretçilerine huzurlu bir atmosfer ve etkileyici '
          'bir manzara sunar. Perge, tarih severler için keşfedilmesi gereken bir açık hava müzesidir.'
    },
    {
      'isim': 'Antalya Müzesi',
      'gorsel':
          'https://antalya.ktb.gov.tr/Resim/376323,antalya-muzesi2jpg.png?0',
      'bilgi': 'Antalya Müzesi, bölgedeki arkeolojik ve etnografik eserleri sergileyen önemli bir kültürel merkezdir. Müze, Roma, Bizans, Selçuklu ve '
          'Osmanlı dönemlerine ait eserlerin yanı sıra, antik dönemlere ait birçok eşsiz buluntuyu da içermektedir. En dikkat çekici koleksiyonlardan biri, '
          'Perge ve diğer antik kentlerden çıkarılan heykellerdir. Ayrıca, müzede çok sayıda mezar taşları, mozaikler, antik dönemin günlük yaşamını yansıtan '
          'objeler ve etnografik eserler de sergilenmektedir. Özellikle, Roma dönemi heykel koleksiyonu, Antalya Müzesi ni uluslararası alanda tanınan bir '
          'arkeolojik müze haline getirmiştir. Müze, tarih severler için zengin bir görsel deneyim sunarken, aynı zamanda şehrin tarihini daha yakından keşfetmek '
          'isteyen ziyaretçilere rehberlik eder. Antalya Müzesi, hem yerli hem de yabancı turistlerin ilgisini çeker ve şehrin kültürel mirasını tanımak için '
          'ideal bir mekandır.'
    },
    {
      'isim': 'Olympos ve Yanartaş',
      'gorsel':
          'https://i.neredekal.com/i/neredekal/75/1002x562/6640d6ca662eaeb7273af74a?updated_at=2024-05-12T14:48:42.841Z',
      'bilgi': 'Olympos, antik bir Likya kenti olup, hem doğal güzellikleri hem de tarihi kalıntılarıyla dikkat çeker. Olympos, antik tiyatro, hamamlar '
          've tapınak gibi yapılarıyla tarihi bir zenginliğe sahiptir ve bölge, aynı zamanda güzel plajları ile de ünlüdür. Yanartaş ise Olympos'
          ' yakınlarında yer alan ve yer altından çıkan doğal gazların alev alarak yandığı bir yerdir. Bu doğa olayı, bölgenin mistik havasına katkı '
          'sağlar ve trekking severler için popüler bir yürüyüş rotasıdır. Yanartaş ın sürekli yanan alevleri, bölgeyi gece daha da büyülü kılar ve '
          'ziyaretçilere eşsiz bir manzara sunar. Ayrıca, Olympos un çevresi, zeytin ağaçları ve çam ormanlarıyla dolu olup, doğa severler için harika bir'
          ' keşif alanı sunar. Olympos ve Yanartaş, hem tarih hem de doğa severler için unutulmaz bir deneyim vaat eder.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiIstanbul(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiAntalya extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiAntalya(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiAntalya extends StatelessWidget {
  const YemekSayfasiAntalya({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Frigya Biber Dolması',
      'gorsel':
          'https://batiantalyacomtr.teimg.com/batiantalya-com-tr/uploads/2024/01/antalya-mutfaginin-saheseri-frigya-biber-dolmasi-tarifi-ile-tanisin-1.webp',
      'yemekBilgisi': 'Antalya’ya özgü Frigya biber dolması, bölgedeki Frigya biberlerinin tatlımsı lezzetiyle hazırlanan ve Akdeniz mutfağının '
          'hafifliğini yansıtan bir yemektir. Genellikle zeytinyağlı olarak yapılan bu dolma, pirinç, soğan, domates, maydanoz ve çeşitli baharatlarla'
          ' hazırlanan iç harcıyla doldurulur. Antalya usulünde zeytinyağının yanı sıra nar ekşisi veya limon suyu gibi hafif ekşi dokunuşlar da '
          'kullanılarak ferah bir tat elde edilir. Hem sıcak hem de soğuk olarak servis edilebilen bu yemek, Antalyalıların sofralarında özellikle '
          'yaz aylarında sıklıkla yer alır ve yerel lezzetler arasında öne çıkar.',
    },
    {
      'isim': 'Enginarlı Girit Kebabı',
      'gorsel':
          'https://yemekzevki.com.tr/wp-content/uploads/2015/06/Girit-Kebabi.png',
      'yemekBilgisi': 'Antalya mutfağına özgü Enginarlı Girit Kebabı, Akdeniz’in zengin lezzetlerini bir araya getiren hafif ve sağlıklı bir yemektir.'
          ' Yemeğin temel malzemeleri, taze enginar, kuzu eti ve bahar sebzeleridir. Kuzu eti, zeytinyağıyla hafifçe kavrulduktan sonra enginarla birlikte'
          ' yavaş pişirilir ve yemeğe sarımsak, limon suyu, taze dereotu ve baharatlar eklenerek lezzet katılır. Bazı tariflerde, kereviz sapı ve havuç gibi'
          ' sebzeler de kullanılarak yemeğe çeşitlilik kazandırılır. Girit usulü, Akdeniz mutfağının etkisiyle zeytinyağı ağırlıklı bir pişirme tarzını '
          'benimser ve yemek genellikle düşük ateşte uzun süre pişirilerek sebzelerin ve etin lezzetlerinin tam olarak bütünleşmesi sağlanır. Enginarlı'
          'Girit Kebabı, hafifliği ve besleyiciliği ile hem günlük sofralarda hem de özel davetlerde tercih edilen bir yemektir. Genellikle sıcak olarak'
          ' servis edilir ve yanına taze ekmek veya sade pilav eşlik eder. Bu yemek, Antalya’nın hem yerel tatlarını hem de Girit mutfağının izlerini'
          ' yansıtarak bölgenin kültürel zenginliğini de ortaya koyar.',
    },
    {
      'isim': 'Gülüklü (Hülüklü) Çorba',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/SehirRehberi//TurkMutfagi/20210416033928856_GULUKLU%20CORBA%20%20(4).jpg?format=jpg&quality=50',
      'yemekBilgisi': 'Antalya Gülüklü (Hülüklü) Çorbası, yöreye özgü geleneksel bir çorbadır ve özellikle kış aylarında sofralarda yerini alır.'
          ' Çorbanın adı, içinde yer alan küçük köftelerden gelir; bu köfteler genellikle kıyma, bulgur, un ve baharatlarla hazırlanarak minik toplar halinde'
          ' yapılır. Ana malzemeleri arasında köftelerin yanı sıra tavuk eti, nohut ve domates salçası bulunur.Çorbanın yapımında önce tavuk eti ve nohutlar '
          'haşlanarak zengin bir et suyu hazırlanır. Ardından, köfteler bu suya eklenir ve domates salçasıyla tatlandırılarak kaynatılır. Son aşamada'
          ' çorbanın üzerine eritilmiş tereyağı ve kuru nane dökülerek lezzeti tamamlanır. Yoğun ve doyurucu yapısıyla tam bir ana yemek niteliği'
          ' taşıyan Gülüklü Çorba, Antalya’nın köklü mutfak kültürünün önemli bir parçasıdır ve düğün, bayram gibi özel günlerde de sıkça yapılır.',
    },
    {
      'isim': 'Antalya Piyazı',
      'gorsel': 'https://i.ytimg.com/vi/F6MdYgKvR8w/maxresdefault.jpg',
      'yemekBilgisi': 'Antalya piyazı, tahinli sosuyla diğer piyaz türlerinden ayrılan ve Antalya mutfağının tescilli lezzetlerinden biridir. '
          'Haşlanmış kuru fasulyenin üzerine tahin, zeytinyağı, limon suyu, sarımsak ve sirke ile hazırlanan kremsi bir sos dökülerek yapılır. '
          'Domates, kuru soğan, maydanoz ve haşlanmış yumurta dilimleriyle süslenir; üzerine sumak serpilerek zengin bir aroma katılır.'
          ' Genellikle ızgara köfteyle birlikte sunulan bu piyaz, başlı başına bir yemek olarak da tüketilir. 2017 yılında Coğrafi İşaret Tescili '
          'alarak Antalya’nın simge yemeklerinden biri olmuştur ve yöredeki köftecilerde sıklıkla servis edilir. Tahinli sosunun verdiği yoğun kıvam '
          've zengin lezzet, bu yemeği eşsiz kılar.',
    },
    {
      'isim': 'Şilofta',
      'gorsel':
          'https://www.friendz10.com/content/upload/posts/61c3a40201840.png',
      'yemekBilgisi': 'Antalya Şilofta, Antalya mutfağına özgü, hafif tatlı bir lezzettir ve genellikle yörede tatlı yerine tüketilir. Şilofta,'
          ' yapımında kullanılan malzemelerin sadeliği ve hafifliği ile Akdeniz mutfağının sağlıklı yemek anlayışını yansıtır. Temel olarak irmik, un,'
          ' şeker ve suyun bir araya gelmesiyle hazırlanan hamurun kızartılarak ya da kaynatılarak pişirilmesiyle yapılır.Pişen hamur topları, önceden'
          'hazırlanan tatlı bir şerbetin içine atılarak şerbeti çeker. Bu şekilde tatlanan şilofta, üzerine tarçın serpilerek ya da yanında cevizle servis '
          'edilir. Bazı tariflerde, nar suyu veya portakal kabuğu gibi bölgeye özgü aromalar da eklenerek tat zenginleştirilir. Antalya’da özellikle'
          ' bayramlarda, düğünlerde ya da özel günlerde ikram edilen bu tatlı, hafif yapısı sayesinde yemek sonrası rahatlıkla tüketilebilir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiAntalya(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiAntalya extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiAntalya({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class ArdahanSayfasi extends StatefulWidget {
  const ArdahanSayfasi({super.key});

  @override
  _ArdahanSayfasiState createState() => _ArdahanSayfasiState();
}

class _ArdahanSayfasiState extends State<ArdahanSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Ardahan',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Ardahan')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Ardahan')) {
                provider.removeFavoriSehir('Ardahan');
              } else {
                provider.addFavoriSehir('Ardahan');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Ardahan')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Ardahan')
                        ? 'Ardahan favorilere eklendi!'
                        : 'Ardahan favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Ardahan')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Ardahan')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Ardahan')) {
                provider.removeGidilenSehir('Ardahan');
              } else {
                provider.addGidilenSehir('Ardahan');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Ardahan')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Ardahan')
                        ? 'Ardahan gidilen şehirlere eklendi!'
                        : 'Ardahan gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://www.ardahan.bel.tr/images/ardahan-hakkinda.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Ardahan, Türkiye\'nin kuzeydoğusunda yer alan, doğa harikalarıyla ünlü bir şehirdir. '
                    'Kars, Erzurum ve Artvin ile komşu olan Ardahan, dağlar ve göllerle çevrilidir. '
                    'Tarihi ve doğal zenginlikleriyle dikkat çeker, özellikle Çıldır Gölü, Ardahan Kalesi ve '
                    'Kura Nehri gibi önemli turistik noktalara sahiptir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiArdahan(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiArdahan(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Ardahan'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),

            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),

            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiArdahan extends StatelessWidget {
  const YerSayfasiArdahan({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Çıldır Gölü',
      'gorsel':
          'https://cdnuploads.aa.com.tr/uploads/Contents/2021/12/30/thumbs_b_c_34cbe2f26ebed9e442869521abc0ebb9.jpg?v=092925',
      'bilgi': 'Ardahan şehir merkezine yaklaşık 45 kilometre uzaklıkta yer alan Çıldır Gölü, özellikle kış aylarında donarak bir buzul alanına dönüşür.'
          ' Gölün üzerinde yürüyüş yapabilir, kışın buzun üstünde yürüyüş yaparak etkileyici manzaralar yakalayabilirsiniz. Yazın ise gölde yapılan '
          'balık tutma ve tekne turları oldukça popülerdir. Ayrıca göl çevresinde piknik alanları ve doğal güzellikler de bulunmaktadır. '
          'Çıldır Gölü’nün etrafındaki köylerde geleneksel olarak yapılan balık festivalleri de yerel kültürün bir parçasıdır.'
    },
    {
      'isim': 'Şeytan Kalesi',
      'gorsel':
          'https://kulturveyasam.com/wp-content/uploads/2018/01/ardahan-13.jpg',
      'bilgi': 'Ardahan’ın merkezinin 17 kilometre batısında yer alan bu kale, hem tarihi hem de efsaneleriyle ünlüdür. Orta Çağ dan kalma bu kale, '
          'kayalık bir tepeye inşa edilmiştir ve çevresindeki manzara oldukça etkileyicidir. Şeytan Kalesi, bölgedeki yerleşimlerden korunmak amacıyla'
          ' inşa edilmiştir ve stratejik konumuyla dikkat çeker. Kaleye ulaşmak için zorlu bir yürüyüş gerektirse de, manzarası ve tarihî atmosferi'
          ' onu ziyaret etmeye değer kılar.'
    },
    {
      'isim': 'Yalnızçam Yaylası',
      'gorsel':
          'https://i.pinimg.com/550x/d5/73/7d/d5737d61046647ddbc884fd45f34161a.jpg',
      'bilgi': 'Yalnızçam Yaylası, Ardahan il sınırları içinde yer alan en yüksek yaylalardan biridir. Yüksek rakımı ve temiz havasıyla ünlüdür.'
          ' Yaz aylarında doğa yürüyüşleri yapmak ve kamp kurmak için harika bir yerdir. Kışın ise Yalnızçam Kayak Merkezi, kayak yapmayı sevenler '
          'için popüler bir destinasyon haline gelir. Yalnızçam Yaylası, karasal iklimiyle farklı bir deneyim sunar; bu nedenle doğa severler ve kış '
          'sporları meraklıları için ilgi çekicidir. Yaylada yerel halkın geleneksel yaşamını gözlemleyebilir, otantik köy evlerinde konaklayabilirsiniz.'
    },
    {
      'isim': 'Ardahan Kalesi',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/SehirRehberi//GezilecekYer/20240912113421948_ardahan%20kalesi.jpg?format=jpg&quality=50',
      'bilgi': 'Ardahan Kalesi, şehrin en yüksek noktasında yer alır ve şehre hâkim bir manzaraya sahiptir. Kale, Bizans ve Osmanlı dönemlerine ait izler'
          ' taşır. Zaman içinde çeşitli medeniyetler tarafından restore edilmiş ve çeşitli savunma amaçlarıyla kullanılmıştır. Ardahan’ın tarihi dokusunu'
          ' yansıtan bu kale, özellikle fotoğrafçılar için etkileyici bir manzara sunar. Kale çevresindeki parklar ve yürüyüş yolları da, kaleye ulaşırken '
          'ziyaretçilere keyifli bir doğa turu imkânı sağlar.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiArdahan(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiArdahan extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiArdahan(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiArdahan extends StatelessWidget {
  const YemekSayfasiArdahan({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Ayran Aşı',
      'gorsel':
          'https://www.ardahanvakfi.org/wp-content/uploads/2020/09/812x467-ayran-asi-corbasi-1594271517243.jpg',
      'yemekBilgisi': 'Ardahan ayran aşı, hem sağlıklı hem de doyurucu bir çorba olarak bölge mutfağında önemli bir yere sahiptir. Ana malzemeleri '
          'arasında yoğurt, buğday, mercimek, tereyağı, un ve çeşitli sebzeler yer alır. Özellikle yaz aylarında yapılan yoğurtlu ayranın, buğdayla'
          ' pişirilip mercimek ve sebzelerle harmanlanarak geleneksel bir yemek haline gelmesi, bu çorbanın karakteristik özelliklerinden biridir. '
          'Ayran aşı, genellikle sıcak servis edilse de soğuk da içilebilir. Yoğurdun verdiği ekşimsi tat ve buğdayın hafif yumuşak dokusu, çorbanın '
          'lezzetini belirler. Bölge halkı, bu yemeği hem bir ana yemek hem de hafif bir öğün olarak tüketir. Özellikle kış aylarında, soğuk havada '
          'enerjik tutan ve vücuda sıcaklık sağlayan bu çorba, hem sağlık açısından faydalıdır hem de uzun süre tok tutar. Ayran aşı, Ardahan ve '
          'çevresindeki köylerde, geleneksel düğünlerde ve misafir ağırlamalarda da sıkça ikram edilen bir yemektir.',
    },
    {
      'isim': 'Yarpuzlu Sulu Köfte',
      'gorsel': 'https://i.ytimg.com/vi/Fky0FeE64Sg/maxresdefault.jpg',
      'yemekBilgisi': 'Ardahan Yarpuzlu Köfte, Ardahan mutfağının geleneksel ve lezzetli yemeklerinden biridir. Yarpuzlu köfte, adını içinde kullanılan'
          ' yarpuz otu (yabani kekik) ve köfteden alır. Bu yemek, özellikle yarpuzun kendine has aromasıyla zenginleşir. Köftesi, ince bulgur, kıyma, soğan '
          've baharatlarla yoğrularak hazırlanır. İçine genellikle yarpuz otu da eklenir, bu da yemeğe özgün bir lezzet katmaktadır. Yarpuzlu köfte, yuvarlak '
          'veya uzun şekillerde hazırlanıp, haşlanarak pişirilir. Ardahan da bu köfte genellikle yoğurt, tereyağı ve pul biberle servis edilir. Ayrıca,'
          'bazen üzerine domatesli veya biberli sos eklenerek daha da lezzetlendirilir. Yarpuzlu köfte, bölgedeki özel günlerde, misafir ağırlamalarında '
          've günlük öğünlerde sıkça tercih edilen, hem besleyici hem de doyurucu bir yemektir. Yarpuz otu, bu yemeğe sağlık açısından da faydalar sunar,'
          'çünkü bu ot sindirimi kolaylaştırıcı özelliklere sahip olarak bilinir.',
    },
    {
      'isim': 'Hingal Mantı',
      'gorsel':
          'https://i.ytimg.com/vi/uCiknsi4y3k/hq720.jpg?sqp=-oaymwEhCK4FEIIDSFryq4qpAxMIARUAAAAAGAElAADIQj0AgKJD&rs=AOn4CLDczD9Rc1XLlhZSenSZyRcECQ3Kog',
      'yemekBilgisi': 'Ardahan hingal mantısı, özellikle Ardahan ve çevresinde sevilen geleneksel bir yemektir. Hingal, ince açılmış hamurun içerisine'
          ' yapılan harçla şekil verilerek pişirilen bir tür mantıdır. Hamurun iç harcı genellikle kıyma, soğan ve baharatlardan oluşur. Hazırlanan'
          ' hamurlar küçük kareler halinde kesildikten sonra köşelerinden katlanarak üçgen veya daha farklı şekillerde kapatılır. Ardahan hingalinin'
          ' en belirgin özelliği, haşlanarak pişirilmesidir ve genellikle yoğurt, tereyağı ve sarımsaklı sosla servis edilir. Ayrıca, üzerine'
          ' kızdırılmış tereyağı ve pul biber dökülerek sunumu yapılır. Hingal, özellikle kış aylarında sıcak bir şekilde tüketilen, doyurucu ve'
          ' besleyici bir yemektir. Yöresel geleneklere göre, bu yemek hem aile içi sofralarda hem de misafirlere ikram olarak sıkça hazırlanır.'
          ' Hem pratik hem de lezzetli bir seçenek olan hingal, Ardahan mutfağının en tanınan yemeklerinden biridir.',
    },
    {
      'isim': 'Ardahan Köfte',
      'gorsel':
          'https://www.ardahanvakfi.org/wp-content/uploads/2020/09/adiyaman-koftesi.jpg',
      'yemekBilgisi': 'rdahan köfte, Ardahan mutfağının sevilen ve geleneksel yemeklerinden biridir. Köfte, ince bulgur, kıyma, soğan, baharatlar '
          've bazen yarpuz gibi yerel otlarla yoğrulup şekillendirilir. Yarpuz, köfteye özgün bir aroma katarken, aynı zamanda sindirimi kolaylaştırıcı'
          ' özellikler de sağlar. Genellikle haşlanarak pişirilen Ardahan köftesi, üzerine yoğurt, tereyağı, pul biber ve bazen domates sosu eklenerek'
          ' servis edilir. Bu köfte, hem besleyici hem de doyurucu olup, özellikle kış aylarında ve özel günlerde sofralarda yerini alır. Ardahan köftesi, '
          'bölge halkı tarafından geleneksel misafir ağırlamaları ve düğünlerde sıkça yapılan bir yemektir.',
    },
    {
      'isim': 'Mafiş Tatlısı',
      'gorsel':
          'https://i.nefisyemektarifleri.com/2016/03/11/mafis-tatlisi-citir-citir14.jpeg',
      'yemekBilgisi': 'Ardahan Mafiş Tatlısı, Ardahan a özgü geleneksel bir tatlıdır. Özellikle kış aylarında yapılan bu tatlı, yumuşak ve pürüzsüz'
          ' dokusuyla bilinir. Mafiş, un, yoğurt, tereyağı, şeker ve bazen sütle hazırlanan hamurun kızartılmasıyla yapılır. Hamur, ince açılır ve '
          'küçük yuvarlaklar halinde şekillendirilip, sıcak yağda kızartılır. Kızaran mafişler, üzerine şerbet dökülerek tatlandırılır. Şerbeti, '
          'genellikle sade şekerli olur ve tatlının üzerine döküldüğünde yumuşak ve tatlı bir kıvam elde edilir. Ardahan Mafiş Tatlısı, özellikle'
          ' soğuk kış günlerinde hem tatlı ihtiyacını karşılar hem de yüksek kalorisi ile enerji verir. Yöre halkı tarafından misafir ağırlamada ve '
          'özel günlerde tercih edilir. Bu tatlı, hem lezzetli hem de doyurucu olduğu için Ardahan mutfağının vazgeçilmezlerinden biridir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiArdahan(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiArdahan extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiArdahan({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class ArtvinSayfasi extends StatefulWidget {
  const ArtvinSayfasi({super.key});

  @override
  _ArtvinSayfasiState createState() => _ArtvinSayfasiState();
}

class _ArtvinSayfasiState extends State<ArtvinSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Artvin',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Artvin')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Artvin')) {
                provider.removeFavoriSehir('Artvin');
              } else {
                provider.addFavoriSehir('Artvin');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Artvin')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Artvin')
                        ? 'Artvin favorilere eklendi!'
                        : 'Artvin favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Artvin')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Artvin')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Artvin')) {
                provider.removeGidilenSehir('Artvin');
              } else {
                provider.addGidilenSehir('Artvin');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Artvin')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Artvin')
                        ? 'Artvin gidilen şehirlere eklendi!'
                        : 'Artvin gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/480968800/tr/fotoğraf/karagöl.jpg?s=612x612&w=0&k=20&c=UREx2v0_o2OUnacdX9Ajn9t0aLaE_1kopWSOTXbyX30=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Artvin, Türkiye\'nin Karadeniz Bölgesi\'nde yer alan, doğal güzellikleriyle ünlü bir şehirdir. '
                    'Çoruh Nehri boyunca uzanan Artvin, ormanları, dağları, gölleri ve vadileri ile büyüleyici bir manzaraya sahiptir. '
                    'Kafkasör Yaylası, Artvin Kalesi ve Macahel Vadisi gibi turistik yerler burada ziyaretçilerini beklemektedir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiArtvin(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiArtvin(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Artvin'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),

            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiArtvin extends StatelessWidget {
  const YerSayfasiArtvin({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Karagöl (Borçka Karagöl Tabiat Parkı)',
      'gorsel': 'https://www.artvinli.com/uploads/files/borckakaragol1.jpg',
      'bilgi': 'Karagöl (Borçka Karagöl Tabiat Parkı), Artvin in Borçka ilçesinde yer alan, heyelan sonucu oluşmuş doğal bir göldür. '
          'Yemyeşil ormanlarla çevrili olan bu doğa harikası, özellikle kamp, piknik ve doğa fotoğrafçılığı için idealdir. İlkbaharda yemyeşil,'
          'sonbaharda ise sarı ve turuncu tonlara bürünen göl, her mevsim farklı bir güzellik sunar. Göl çevresinde yürüyüş yapabilir, kuş gözlemciliğiyle '
          'ya da huzurlu atmosferde vakit geçirerek keyifli anlar yaşayabilirsiniz. Karagöl, hem manzarasıyla hayran bırakan bir saklı cennet hem de doğayla '
          'baş başa kalmak isteyenler için mükemmel bir kaçış noktasıdır.'
    },
    {
      'isim': 'Hatila Vadisi Milli Parkı',
      'gorsel':
          'https://arhavizyon.com/wp-content/uploads/2019/09/hatilla-milli-parkı.jpg',
      'bilgi': 'Hatila Vadisi Milli Parkı, Artvin merkeze sadece 10 km mesafede yer alan ve Türkiye’nin en büyük kanyonlarından birine ev sahipliği '
          'yapan eşsiz bir doğa alanıdır. Farklı bitki örtüsü, zengin yaban hayatı ve Hatila Deresi nin oluşturduğu benzersiz manzaralar, burayı doğa severler '
          'için vazgeçilmez bir destinasyon haline getirir. Milli parkta yürüyüş yolları ile keşfe çıkabilir, kuş sesleri eşliğinde huzurlu bir atmosferin tadını '
          'çıkarabilirsiniz. Özellikle 220 metre yükseklikteki Cam Seyir Terası, vadinin nefes kesen manzarasını izlemek için ideal bir noktadır. Hatila Vadisi,'
          'doğa tutkunları ve macera arayanlar için Artvin’de mutlaka ziyaret edilmesi gereken yerlerden biridir.'
    },
    {
      'isim': 'Mençuna Şelalesi',
      'gorsel':
          'https://yoldaolmak.com/wp-content/uploads/2020/05/Mencuna-Selalesi.jpg',
      'bilgi': 'Mençuna Şelalesi, Artvin’in Arhavi ilçesinde, Kamilet Vadisi’nde yer alan ve yaklaşık 70 metre yüksekten dökülen büyüleyici bir doğa '
          'harikasıdır. Şelale, çevresini saran yemyeşil ormanlarla birlikte adeta bir tabiat şöleni sunar. Buraya ulaşmak için doğa severlerin keyifle'
          ' tamamlayacağı taşlı bir yürüyüş parkuru bulunur; bu yolculuk sırasında Kamilet Deresi nin huzur veren sesi size eşlik eder. Şelale bölgesi,'
          'fotoğrafçılık, piknik ve doğayla baş başa kalmak için ideal bir mekandır. Yakın çevresinde yer alan taş kemer köprüler ve Kamilet Vadisi’nin el '
          'değmemiş doğası, bölgeyi keşfi daha da anlamlı kılar. Mençuna Şelalesi, hem huzur arayanlar hem de macera severler için unutulmaz bir deneyim sunar.'
    },
    {
      'isim': 'Barhal Kilisesi (Altıparmak Kilisesi)',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/25022013/8ab9ac20-ccea-4386-a15b-77d088c37447.jpg?format=jpg&quality=50',
      'bilgi': 'Artvin’in Yusufeli ilçesinde yer alan Barhal Kilisesi, 10. yüzyılda inşa edilmiş ve günümüze kadar oldukça iyi korunmuş bir Orta Çağ'
          ' Gürcü mimarisi örneğidir. Altıparmak Köyünde bulunan kilise, bölgede tarihi ve kültürel geziler yapmak isteyenler için önemli bir duraktır. '
          'Kilise, yüksek taş duvarları ve kemerli yapısıyla dikkat çeker ve günümüzde cami olarak kullanılmaktadır. Çevresi yemyeşil doğayla çevrili olan '
          'bu yapı, hem tarih hem de doğa tutkunları için etkileyici bir deneyim sunar. Ayrıca, Altıparmak Dağları’nın manzarası eşliğinde bu tarihi yapıyı '
          'ziyaret edebilirsiniz.'
          'değmemiş doğası, bölgeyi keşfi daha da anlamlı kılar. Mençuna Şelalesi, hem huzur arayanlar hem de macera severler için unutulmaz bir deneyim sunar.'
    },
    {
      'isim': 'Çoruh Vadisi ve Nehri',
      'gorsel':
          'https://turkeyoutdoor.com/wp-content/uploads/2021/08/coruh-nehri.jpg',
      'bilgi': 'Artvinin en büyük doğal zenginliklerinden biri olan Çoruh Nehri ve etrafındaki Çoruh Vadisi, doğa severler için eşsiz bir keşif alanıdır.'
          'Bölge, yemyeşil ormanlar, yüksek dağlar ve nehrin kıyısında bulunan yerleşim yerleriyle dikkat çeker. Çoruh Vadisi, rafting gibi su sporları için '
          'oldukça popülerdir, ancak aynı zamanda trekking ve doğa yürüyüşleri için de ideal bir alandır. Çoruh Nehrinin sakin akışı ve çevresindeki doğal '
          'güzellikler, bölgeyi hem doğa hem de macera turizmi için cazip bir destinasyon yapmaktadır. Bu bölge, Artvinin keşfedilmemiş köşelerinden biridir '
          've doğa ile iç içe vakit geçirmek isteyen ziyaretçilere unutulmaz bir deneyim sunar.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiIstanbul(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiArtvin extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiArtvin(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiArtvin extends StatelessWidget {
  const YemekSayfasiArtvin({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Kaloca',
      'gorsel':
          'https://static.daktilo.com/sites/71/uploads/2024/07/10/kalaco-nasil-yapilir-tarifi-2.webp',
      'yemekBilgisi': 'Kaloca, Artvin mutfağının geleneksel lezzetlerinden biri olup, mısır unu ve beyaz peynir ile hazırlanan pratik ve lezzetli bir '
          'yemektir. Tereyağında kavrulan mısır ununun üzerine peynir eklenerek yapılan bu yemek, genellikle kahvaltılarda veya atıştırmalık olarak'
          ' tercih edilir. Bazı tariflerde süt veya yoğurt kullanılarak kıvam verilir ve sıcak tüketildiğinde tereyağı ve peynirin uyumu ile benzersiz'
          ' bir tat sunar. Artvin’in köy mutfağında odun ateşinde hazırlanmasıyla ayrı bir lezzet kazanan Kaloca, yanına çay eşliğinde Karadeniz’in'
          ' özgün tatlarını keşfetmek isteyenler için mutlaka denenmelidir.',
    },
    {
      'isim': 'Kaygana',
      'gorsel':
          'https://cdn.yemek.com/mnresize/1250/833/uploads/2024/11/karadeniz-usulu-kaygana-tarifi.jpg',
      'yemekBilgisi': 'Artvin Kayganası, yöresel Karadeniz mutfağının vazgeçilmez lezzetlerinden biridir ve özellikle kahvaltılarda tüketilir.'
          ' Mısır unu, yumurta, süt ve tuz gibi basit malzemelerle hazırlanan bu yemek, hafif krep tarzında bir hamur işidir. İnce bir tabaka halinde'
          ' tavada pişirilerek yapılan kaygana, sıcak servis edilir ve genellikle üzerine peynir, bal ya da reçel eklenerek tatlandırılır.'
          ' Pratik hazırlanışı ve zengin lezzetiyle Artvin Kayganası, hem tuzlu hem de tatlı olarak tercih edilebilecek çok yönlü bir yöresel yemektir.'
          ' gelir.',
    },
    {
      'isim': 'Benekli Alabalık',
      'gorsel':
          'https://imgrosetta.mynet.com.tr/file/11830778/11830778-900x900.jpg',
      'yemekBilgisi': 'Benekli Alabalık, Artvin’in temiz ve soğuk akarsularında doğal olarak yetişen bir tatlı su balığıdır ve yöre mutfağının en özel '
          'lezzetlerinden biridir. Genellikle taze yakalanan alabalıklar, sade ve doğal yöntemlerle hazırlanır. Izgara, tava veya buğulama gibi pişirme '
          'yöntemleriyle yapılan bu yemek, balığın doğal tadını korur. Tereyağı, limon ve yöresel baharatlar ile lezzetlendirilerek sunulur. Besleyici'
          ' ve hafif bir yemek olan benekli alabalık, özellikle Artvin’e özgü doğallığı ve lezzetiyle hem yerel halkın hem de ziyaretçilerin beğenisini'
          ' kazanır. Dağlık ve akarsu kenarındaki restoranlarda sıkça servis edilen bu yemek, bölgenin temiz doğasıyla özdeşleşmiştir.',
    },
    {
      'isim': 'Hamsili Ekmek',
      'gorsel':
          'https://www.karaca.com/blog/wp-content/uploads/2023/12/hamsiliekmek1.webp',
      'yemekBilgisi': 'Hamsili Ekmek, Artvin ve Karadeniz mutfağının özgün lezzetlerinden biridir. Taze hamsi, mısır unu ve çeşitli otlarla hazırlanan'
          ' bu yemek, hem doyurucu hem de besleyici bir yöresel tattır. Hamsiler temizlenip mısır unuyla harmanlandıktan sonra, maydanoz, taze soğan ve'
          ' isteğe bağlı olarak ıspanak gibi otlarla karıştırılarak hamurun içine eklenir. Ardından fırında ya da tavada pişirilir. Çıtır dış yüzeyi ve '
          'içindeki zengin malzemeleriyle, özellikle kış aylarında sofraların vazgeçilmezidir. Artvin in doğallığını yansıtan Hamsili Ekmek, bölgeye özgü '
          'tatları deneyimlemek isteyenlerin mutlaka denemesi gereken bir lezzettir.',
    },
    {
      'isim': 'Hasuta Tatlısı',
      'gorsel': 'https://i.ytimg.com/vi/sbBrLnkBTTM/maxresdefault.jpg',
      'yemekBilgisi': 'Hasuta Tatlısı, Artvine özgü geleneksel bir tatlıdır ve özellikle kış aylarında tercih edilir. Yapımında buğday unu, tereyağı,'
          'süt ve şeker gibi basit malzemeler kullanılır. Tatlının özelliği, buğday ununun tereyağı ile kavrulup sütle karıştırılarak pişirilmesidir.'
          'Sonrasında üzerine şeker eklenir ve karıştırılarak koyu kıvamlı bir tatlı elde edilir. Hasuta, genellikle sıcak olarak servis edilir ve üzerine '
          'tarçın ya da ceviz eklenerek sunulabilir. Lezzetli, hafif ve besleyici olan bu tatlı, Artvinin yöresel mutfağının önemli bir parçasıdır.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiIstanbul(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiArtvin extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiArtvin({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class AydinSayfasi extends StatefulWidget {
  const AydinSayfasi({super.key});

  @override
  _AydinSayfasiState createState() => _AydinSayfasiState();
}

class _AydinSayfasiState extends State<AydinSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Aydın',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context);
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Aydın')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Aydın')) {
                provider.removeFavoriSehir('Aydın');
              } else {
                provider.addFavoriSehir('Aydın');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Aydın')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Aydın')
                        ? 'Aydın favorilere eklendi!'
                        : 'Aydın favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Aydın')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Aydın')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Aydın')) {
                provider.removeGidilenSehir('Aydın');
              } else {
                provider.addGidilenSehir('Aydın');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Aydın')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Aydın')
                        ? 'Aydın gidilen şehirlere eklendi!'
                        : 'Aydın gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://cdn2.enuygun.com/media/lib/1200x675/uploads/image/aydin-53496.webp',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Aydın, Türkiye\'nin Ege Bölgesi\'nde yer alan, tarihî ve doğal güzellikleriyle ünlü bir şehirdir. '
                    'Kuşadası, Didim gibi sahil beldeleri, antik kentleri, plajları ve termal kaynaklarıyla ünlüdür. '
                    'Aydın\'da, ayrıca dünyanın en eski kalıntılarından biri olan Afrodisyas Antik Kenti ve Menderes Nehri gibi doğal ve kültürel zenginlikler yer almaktadır.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiAydin(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiAydin(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Aydın'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),

            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiAydin extends StatelessWidget {
  const YerSayfasiAydin({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Aphrodisias Antik Kenti',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/small/PetekIcon/AfrodisiasIcon_20180123221914611.jpg',
      'bilgi': 'Aphrodisias Antik Kenti, Aydın ın Karacasu ilçesinde yer alan ve Roma dönemine ait kalıntılarıyla ünlü bir antik yerleşimdir. '
          'UNESCO Dünya Mirası Listesinde yer alan bu kent, Afrodit Tapınağı, tiyatro, stadyum ve Sebasteion gibi önemli yapılarıyla dikkat çeker. '
          'Özellikle heykel sanatındaki ünüyle tanınan kent, dönemin en büyük heykel atölyelerinden birine sahipti. Bugün, Aphrodisias Müzesinde bulunan'
          ' eserler, kentin tarihini ve sanatsal zenginliğini gözler önüne seriyor. Antik kent, tarih ve arkeoloji meraklıları için önemli bir ziyaret'
          ' noktasıdır.'
    },
    {
      'isim': 'Dilek Yarımadası',
      'gorsel': 'https://dogadakiler.com/img/B/K/2020/11/63-3525578.jpg',
      'bilgi': 'Dilek Yarımadası-Büyük Menderes Deltası Milli Parkı, Aydın il sınırlarında yer alan ve doğal güzellikleriyle ünlü bir milli parktır. '
          '27.000 hektarlık alana sahip olan bu park, zengin flora ve faunasıyla dikkat çeker. Milli park, özellikle kuş gözlemciliği yapmak isteyenler '
          'için harika bir yerdir, çünkü burada göçmen kuşların uğradığı önemli duraklardan biri olan Büyük Menderes Deltası yer almaktadır. Ayrıca, '
          'parkta çok sayıda nadir bitki türü de bulunur. Dilek Yarımadası, çam ormanları ve zeytinliklerle çevrili olup, yürüyüş parkurları,'
          ' kamp alanları ve piknik alanlarıyla doğa severlere pek çok fırsat sunar. Milli parkın sahil kısmında ise temiz plajlar ve deniz, tatilciler'
          ' için cazip bir seçenek oluşturur. Aynı zamanda, bölgeyi keşfetmek isteyenler için tarihi kalıntılar da mevcuttur. Tüm bu özellikleriyle '
          'Dilek Yarımadası-Büyük Menderes Deltası Milli Parkı, hem doğa yürüyüşleri yapmak hem de doğal güzelliklerin tadını çıkarmak için ideal bir '
          'destinasyondur.'
    },
    {
      'isim': 'Tralles Antik Kenti',
      'gorsel':
          'https://aydinmobil.com/wp-content/uploads/2021/04/tralles_6.jpg',
      'bilgi': 'Tralles Antik Kenti, Aydın şehir merkezine yaklaşık 7 km mesafede, modern Atça kasabasının yakınlarında yer alır. Kent, Roma döneminden'
          ' kalma kalıntılarıyla ünlüdür ve özellikle iyi korunmuş tiyatro ve şehir surlarıyla dikkat çeker. Tralles, Roma İmparatoru Augustus döneminde'
          ' büyük bir şehir haline gelmiş ve önemli bir ticaret merkezi olmuştur. Kentin tiyatrosu, yaklaşık 6.000 kişilik kapasitesiyle büyüklüğüyle'
          ' dikkat çeker ve antik dönem etkinliklerinin yapıldığı bir yerdi. Ayrıca, Tralles’teki şehir surları, Roma dönemi savunma yapıları hakkında '
          'önemli bilgiler sunar. Bugün bu kalıntılar, antik kentin geçmişi hakkında ziyaretçilere derin bir izlenim bırakmaktadır. Kentin diğer önemli '
          'yapıları arasında hamamlar ve su yolları da bulunmaktadır. Tralles, hem tarih meraklıları hem de arkeolojik keşif yapmak isteyenler için'
          ' önemli bir ziyaret noktasıdır.'
    },
    {
      'isim': 'Beydağları',
      'gorsel':
          'https://iaysr.tmgrup.com.tr/85342a/780/411/0/242/2048/1321?u=https://iysr.tmgrup.com.tr/2022/10/14/1665759008008.jpeg',
      'bilgi': 'Beydağları, Aydın il sınırlarında, özellikle Çine ve Köşk ilçeleri arasında yer alan dağlar, doğa severler ve dağcılar için harika bir '
          'destinasyondur. Beydağları, Ege Bölgesinin en yüksek dağ silsilesine sahip olup, bölgedeki zengin flora ve fauna ile dikkat çeker. Yüksek dağlar, '
          'bol oksijenli ormanlık alanlar ve doğa harikası manzaralar, bölgeyi hem doğa yürüyüşleri yapmak isteyenler hem de dağcılar için cazip kılar.'
          ' Dağlarda yer alan yürüyüş parkurları, hem amatör hem de profesyonel dağcılar için farklı zorluk seviyelerinde seçenekler sunar. Beydağları aynı '
          'zamanda Beydağları Milli Parkına da ev sahipliği yapmaktadır. Bu milli park, zeytinlikler, çam ormanları ve endemik bitki türleriyle ünlüdür. '
          'Beydağlarında, ayrıca pek çok doğal mağara, şelale ve dağ köyleri de keşfe açıktır. Bölgeye yapılan ziyaretler, doğanın içinde huzurlu bir '
          'kaçamak yapmak isteyenler için ideal bir seçenek oluşturur. Ayrıca, dağcılar ve doğa meraklıları için kamp yapma imkanı da sunulmaktadır. '
          'Beydağları, aynı zamanda yaban hayatı gözlemi ve fotoğrafçılık için de uygun bir bölgedir.'
    },
    {
      'isim': 'Kuşadası',
      'gorsel':
          'https://media.istockphoto.com/id/1462727346/tr/fotoğraf/aerial-view-kusadasi.jpg?s=612x612&w=0&k=20&c=Kh6f0s5mrLw6vtyX3FjEVsohOux-Nqv6YQoOkBXggTk=',
      'bilgi': 'Kuşadası, Aydın il sınırlarında yer alan popüler bir tatil beldesidir ve Ege Bölgesinin en bilinen sahil kasabalarından biridir. '
          'Güzel plajları, hareketli gece hayatı ve tarihi yerleriyle ünlüdür. Kadınlar Plajı ve Long Beach gibi plajları, temiz denizi ve su sporları '
          'aktiviteleriyle dikkat çekerken, kasaba aynı zamanda Kuşadası Kalesi gibi tarihi yapılarıyla da öne çıkar. Kuşadası, Efes Antik Kentine olan '
          'yakınlığı ile de bilinir, bu sayede ziyaretçiler kolayca Efes’i gezebilir. Ayrıca, kasaba gece hayatı ile de ünlüdür; sahil boyunca bulunan '
          'barlar ve restoranlar akşam saatlerinde canlı bir atmosfer sunar. Hem tarihi hem de doğal güzellikleriyle Kuşadası, tatilciler için '
          'dinlendirici ve eğlenceli bir destinasyon olma özelliği taşır.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiIstanbul(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiAydin extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiAydin(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiAydin extends StatelessWidget {
  const YemekSayfasiAydin({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Çine Köftesi',
      'gorsel':
          'https://mehmetzengin.com/wp-content/uploads/2022/09/IMG_8093-scaled.jpg',
      'yemekBilgisi': 'Aydın Çine Köftesi, Ege mutfağının önemli lezzetlerinden biri olarak, özellikle Aydının Çine ilçesiyle özdeşleşmiştir. '
          'Bu köfte, geleneksel tariflere sadık kalınarak, ince ince doğranmış etin, baharatlar ve ek malzemelerle yoğrulup şekil verilerek hazırlanır. '
          'İçeriğinde genellikle dana eti, soğan, sarımsak, kimyon, tuz ve karabiber bulunur. Bunlar yoğrulup ince bir şekilde şekil verilerek kızgın yağda'
          ' kızartılır. Çine köftesinin özelliği, etin baharatlarla harmanlanarak yumuşak ve lezzetli bir kıvama gelmesidir. Köftenin dışı çıtır, içi ise'
          ' yumuşak olur. Genellikle sıcak olarak, pilav, salata veya yoğurt eşliğinde servis edilir. Çine köftesi, yöre halkı tarafından genellikle özel'
          ' günlerde veya misafirlere ikram edilen bir yemektir ve Aydına özgü mutfak kültürünün önemli bir parçasıdır.',
    },
    {
      'isim': 'Yuvarlama Çorbası',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/0x0/5f69a54d7af5070588a0fc44.jpg',
      'yemekBilgisi': 'Aydın Yuvarlama Çorbası, Ege mutfağının geleneksel ve lezzetli çorbalarından biridir. Adını, içinde yer alan küçük yuvarlak '
          'hamur toplarından (yuvarlama) alır. Genellikle bu çorba, ince ince doğranmış et veya tavuk suyu ile yapılır. İç harcı için un, yumurta, '
          'tuz ve su karıştırılarak küçük parçalar halinde yuvarlanır ve kaynar suda haşlanır. Ardından, haşlanan hamur topları et suyuna eklenir ve'
          ' çorba pişmeye devam eder. Üzerine nane, pul biber ve tereyağı eklenerek lezzeti arttırılır. Aydın Yuvarlama Çorbası, özellikle soğuk kış '
          'günlerinde besleyici ve sıcak bir öğün olarak tercih edilir. Hem doyurucu hem de hafif olan bu çorba, yöre halkı tarafından sıklıkla '
          'tüketilir ve misafirlere ikram edilir. Aydın’a özgü bir yemek olarak, bölge mutfağının önemli bir parçasıdır.',
    },
    {
      'isim': 'Etli Enginar',
      'gorsel':
          'https://i.nefisyemektarifleri.com/2022/04/06/ege-usulu-etli-enginar-yemegi-tarifi-videolu.jpg',
      'yemekBilgisi': 'Aydın Etli Enginar Yemeği, Ege mutfağının sağlıklı ve lezzetli yemeklerinden biridir. Kuzu veya dana eti, soğan, sarımsak ve'
          ' baharatlarla kavrulup, taze enginarlarla birlikte pişirilir. Limon suyu, tuz ve karabiberle tatlandırılarak kısık ateşte pişirilir ve son olarak'
          ' zeytinyağı eklenerek lezzetini artırır. Bu yemek, enginarın besleyici özellikleriyle etin lezzetini birleştirerek, hem hafif hem de doyurucu bir'
          ' seçenek sunar. Aydına özgü olan bu yemek, özellikle yaz aylarında sağlıklı ve besleyici bir alternatif olarak sofralarda sıkça yer alır.',
    },
    {
      'isim': 'Acılı Güveç',
      'gorsel':
          'https://static.ticimax.cloud/43437/uploads/urunresimleri/buyuk/dana-etli-guvec-8630ce.jpg',
      'yemekBilgisi': 'Aydın Acılı Güveç, Ege mutfağının zengin ve baharatlı lezzetlerinden biridir. Genellikle kuzu eti, tavuk ya da köfte gibi '
          'etler kullanılarak yapılır ve acılı bir sosla tatlandırılır. Etler, soğan, sarımsak, domates, biber ve çeşitli baharatlarla birlikte'
          ' güveçte pişirilir. Acılı güveçteki en belirgin özellik, içine eklenen acı biberin verdiği lezzet ve yoğunluktur. Yavaş pişirilen et, '
          'bu karışımla oldukça yumuşak hale gelir ve lezzetler birbirine iyice karışır. Genellikle yanında pilav, ekmek veya yoğurtla servis edilir. '
          'Aydın Acılı Güveç, hem etin hem de acılı sosun birleşimiyle damaklarda iz bırakan bir tat bırakır. Bu yemek, özellikle et severlerin ve '
          'baharatlı yemekleri sevenlerin tercihi olan, Aydın mutfağının eşsiz tariflerinden biridir.',
    },
    {
      'isim': 'Zerde Tatlısı',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/750x422/5e58c122c9de3d09c015a901.jpg',
      'yemekBilgisi': 'Zerde Tatlısı, Osmanlı mutfağından günümüze gelen, özellikle Ege Bölgesinde ve Aydında yaygın olarak tüketilen tatlı bir yemektir.'
          ' Şeker, pirinç, safran, süt ve kuymak gibi malzemelerle hazırlanır. Safran, yemeğe hem rengini hem de kendine has aromatik tadını verir. '
          'Zerde, genellikle özel günlerde, davetlerde ya da geleneksel kutlamalarda ikram edilen bir tatlıdır. Pirinç, yumuşayıncaya kadar haşlanır'
          ' ve ardından süt, şeker, safran ve nişasta eklenerek karıştırılır. Karışım, kısık ateşte pişirilip koyulaştıktan sonra kaselere dökülür '
          've soğumaya bırakılır. Soğuduktan sonra üzerine nar taneleri veya cevizle süslenerek servis edilir. Zerde, hafif tatlı tadı ve rengarenk'
          ' görünümü ile hem gözleri hem de damakları şenlendirir. Safranın sağlık açısından faydalarıyla birlikte, lezzetli ve geleneksel bir tatlı'
          ' olarak Aydın mutfağında önemli bir yere sahiptir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiAydin(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiAydin extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiAydin({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class BalikesirSayfasi extends StatefulWidget {
  const BalikesirSayfasi({super.key});

  @override
  _BalikesirSayfasiState createState() => _BalikesirSayfasiState();
}

class _BalikesirSayfasiState extends State<BalikesirSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Balıkesir',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Balıkesir')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Balıkesir')) {
                provider.removeFavoriSehir('Balıkesir');
              } else {
                provider.addFavoriSehir('Balıkesir');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Balıkesir')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Balıkesir')
                        ? 'Balıkesir favorilere eklendi!'
                        : 'Balıkesir favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Balıkesir')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Balıkesir')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Balıkesir')) {
                provider.removeGidilenSehir('Balıkesir');
              } else {
                provider.addGidilenSehir('Balıkesir');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler
                          .contains('Balıkesir')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Balıkesir')
                        ? 'Balıkesir gidilen şehirlere eklendi!'
                        : 'Balıkesir gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://www.gmka.gov.tr/assets/img/photo-gallery-balikesir.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Balıkesir, Türkiye\'nin kuzeybatısında yer alan, Marmara ve Ege Denizi\'ne kıyısı olan bir şehirdir. '
                    'Cunda Adası, Ayvalık, Kaz Dağları ve Şeytan Sofrası gibi doğal ve tarihi yerleriyle ünlüdür. '
                    'Balıkesir, ayrıca zeytin ve zeytinyağı üretimi ile de tanınır. Hem deniz turizmi hem de dağ ve doğa turizmi için ideal bir yerdir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiBalikesir(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const YemekSayfasiBalikesir(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Balıkesir'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),

            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiBalikesir extends StatelessWidget {
  const YerSayfasiBalikesir({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Kaz Dağları',
      'gorsel':
          'https://i.superhaber.tv/2/649/365/storage/files/images/2019/08/01/kazdaglari-2xfn_cover.jpg',
      'bilgi': 'Kaz Dağları (İda Dağı), Balıkesir ile Çanakkale arasında yer alan ve doğa severler için bir cennet niteliğindedir. Zengin flora ve '
          'faunası, endemik bitkileri ve zeytinlikleri ile ünlüdür. Dağ, aynı zamanda mitolojik açıdan önemli bir yerdir; Homerosun İlyada destanında '
          'Truva Savaşıyla bağlantılıdır. Kaz Dağları, trekking, dağcılık, şelale ziyaretleri ve kamp gibi aktiviteler için popülerdir. Kaz Dağları Milli '
          'Parkı, biyolojik çeşitliliği koruyarak ekoturizm için önemli bir alan oluşturur. Bölgeye kolay ulaşım sağlanabilir ve çeşitli konaklama seçenekleri '
          'sunar.'
    },
    {
      'isim': 'Cunda Adası (Alibey Adası)',
      'gorsel':
          'https://www.bizevdeyokuz.com/wp-content/uploads/cunda-kapak.jpg',
      'bilgi': 'Cunda Adası (Alibey Adası), Balıkesirin Ayvalık ilçesine bağlı, Egenin en gözde tatil beldelerinden biridir. Egenin berrak sularında'
          ' yer alan adada, eski taş evler, dar sokaklar ve geleneksel Türk köy yaşamının izlerini görmek mümkündür. Cunda, özellikle deniz ürünleri ile ünlüdür;'
          ' taze balık ve mezeler, adanın restoranlarında öne çıkar. Ayrıca, Cundanın masmavi plajları ve koyları, yüzme ve su sporları için ideal alanlar '
          'sunar. Adada yer alan Taksiyarhis Kilisesi, Cunda Ayvalık Belediye Turu gibi tarihi yapılar, ziyaretçilere hem kültürel hem de mistik bir deneyim '
          'ulaşılabilir ve adada yürüyüş yaparak, muazzam manzaraların keyfini çıkarabilirsiniz.'
    },
    {
      'isim': 'Ayvalık',
      'gorsel':
          'https://media.istockphoto.com/id/1203606611/tr/fotoğraf/türkiyenin-ege-yakasındaki-cunda-adasındaki-ayvalık-ilçesi-manzarası.jpg?s=612x612&w=0&k=20&c=QPg5lOuUvo_4LhaANP8yKOEfQaTSBigJSSVgHiwy9mM=',
      'bilgi': 'yvalık, Balıkesirin en popüler tatil beldelerinden biri olup, hem tarihi hem de doğal güzellikleri ile dikkat çeker. Eski Rum evleri, '
          'dar sokakları ve tarihi taş yapıları ile zengin bir kültürel mirasa sahip olan Ayvalık, aynı zamanda zeytinlikleriyle ünlüdür ve Egenin en büyük'
          ' zeytinyağı üretim merkezlerinden biridir. Ayvalıkın denizi, sakin koyları ve berrak suları ile oldukça popülerdir; özellikle Cunda Adası ve '
          'Badavut Plajı gibi bölgeler, yüzme ve güneşlenme için tercih edilen yerlerdir. Ayvalıkta gezilecek en bilinen yerlerden biri olan Şeytan Sofrası,'
          ' muazzam bir manzaraya sahiptir ve Ayvalıkın körfezine bakan bu yüksek noktadan gün batımını izlemek eşsiz bir deneyim sunar. Ayrıca, Ayvalıka '
          'özgü geleneksel yemekler, özellikle zeytinyağlılar ve deniz ürünleri, mutfağının vazgeçilmezlerindendir. Ayvalık, Egenin huzurlu atmosferini yaşamak '
          'isteyenler için ideal bir tatil destinasyonudur.'
    },
    {
      'isim': 'Saat Kulesi',
      'gorsel': 'https://wowturkey.net/dosyalar/saat_kulesi-jpg.2709/',
      'bilgi': 'Balıkesir Saat Kulesi, şehir merkezinin en bilinen simgelerinden biridir ve şehrin tarihine ışık tutan önemli bir yapıdır. 1827 yılında,'
          ' dönemin valisi Hüsrev Paşa tarafından inşa edilmiştir. Neoklasik tarzda tasarlanan kule, 19. yüzyıl Osmanlı mimarisinin örneklerinden biri olarak'
          ' öne çıkar. Kule, 17 metre yüksekliğinde olup, dört cephedeki saat kısımları ile dikkat çeker ve şehre özgü taşlardan yapılmıştır. Balıkesirin'
          ' geçmişini yansıtan bu yapı, zaman içinde şehrin kültürel kimliğinin bir parçası haline gelmiştir. Bugün, hem yerli halk hem de turistler'
          ' için popüler bir ziyaret noktası olan saat kulesi, özellikle çevresindeki meydanla birlikte şehri gezmek isteyenler için önemli bir durak '
          'oluşturur.'
    },
    {
      'isim': 'Manyas Kuş Cenneti',
      'gorsel':
          'https://www.atlasdergisi.com/wp-content/uploads/2015/01/1198.jpg',
      'bilgi': 'Manyas Kuş Cenneti, Balıkesirin Manyas ilçesinde yer alan, Türkiyenin en önemli kuş gözlem alanlarından biridir. 1959 yılında Milli '
          'Park olarak ilan edilen bu alan, özellikle kuş gözlemcileri ve doğa severler için benzersiz bir yerdir. Manyas Kuş Cenneti, 23 bin hektarlık bir '
          'alanı kaplar ve burada 200 den fazla kuş türü yaşamaktadır. En bilinen türlerden biri, her yıl göç mevsiminde binlercesiyle gelen flamingolardır.'
          ' Ayrıca, sazlıklar, bataklıklar ve göletlerden oluşan çeşitli habitatlar, farklı kuş türlerinin barınmasına olanak tanır. Yaz aylarında göç eden '
          'kuşların yanı sıra, kış aylarında da bazı yerli kuşlar burada kalarak bu alanı yıl boyunca canlı tutar. Kuş cennetinin etrafında, ziyaretçilere '
          'özel gözlem kuleleri ve yürüyüş parkurları bulunur, böylece doğa severler kuşları rahatsız etmeden izleyebilirler. Manyas Kuş Cenneti, biyolojik'
          ' çeşitliliği ve ekosistem zenginliğiyle, sadece Türkiye için değil, dünya çapında da önemli bir doğal alan olarak kabul edilir.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiBalikesir(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiBalikesir extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiBalikesir(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiBalikesir extends StatelessWidget {
  const YemekSayfasiBalikesir({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Tirit',
      'gorsel':
          'https://cdnblog.tatilbudur.com/wp-content/uploads/2024/07/Tirit-1-scaled.jpg',
      'yemekBilgisi': 'Balıkesir Tirit, zamanla sadece bir yemek değil, aynı zamanda yerel halkın geleneklerini ve misafirperverliğini de yansıtan '
          'bir ritüel haline gelmiştir. Genellikle ailelerin birlikte hazırlayıp tükettiği bu yemek, özel günlerde, kutlamalarda ve önemli '
          'misafirliklerde sofralarda yerini alır. Ekmek, et ve baharatların birleşimiyle oluşan bu eşsiz lezzet, Balıkesir’in kültürüne derin '
          'bir bağla bağlıdır. Ayrıca, yemeğin yapımında kullanılan malzemelerin yöresel olması, tiritin daha da özgün ve lezzetli hale gelmesini '
          'sağlar.',
    },
    {
      'isim': 'Kabak Çiçeği Dolması',
      'gorsel':
          'https://cdnblog.tatilbudur.com/wp-content/uploads/2024/07/kabak-cicegi-dolmasi-1-scaled.jpg',
      'yemekBilgisi': 'Balıkesir kabak çiçeği dolması, Ege mutfağının zarif ve hafif lezzetlerinden biri olup, taze kabak çiçeklerinin içine pirinç, '
          'zeytinyağı, soğan, dereotu, nane ve baharatlarla hazırlanan harcın doldurulmasıyla yapılır. Sabahın erken saatlerinde toplanan narin kabak '
          'çiçekleri, özenle doldurulup buharda ya da tencerede kısık ateşte pişirilerek servis edilir. Zeytinyağının aroması ve taze otların lezzetiyle'
          ' öne çıkan bu yemek, özellikle yaz aylarında Balıkesir sofralarının vazgeçilmez bir parçası olup genellikle soğuk meze olarak sunulur. '
          'Sağlıklı ve hafif yapısıyla Balıkesir mutfağını deneyimlemek isteyenler için mutlaka tadılması gereken bir yöresel lezzettir.',
    },
    {
      'isim': 'Edremit Köftesi',
      'gorsel':
          'https://media-cdn.tripadvisor.com/media/photo-s/10/21/06/51/kufta.jpg',
      'yemekBilgisi': 'Balıkesir Edremit köftesi, Edremit ilçesine özgü, tamamen et ve baharat kullanılarak hazırlanan, yoğun lezzetiyle dikkat çeken '
          'bir köfte çeşididir. Dana veya kuzu etinden yapılan bu köfte, genellikle ızgarada pişirilir ve yanına közlenmiş domates, biber ve zeytinyağlı'
          ' salata gibi eşlikçilerle servis edilir. Bölgenin kaliteli zeytinyağı, Edremit köftesine ayrı bir lezzet katar. Bayat ekmek kullanılmaması '
          'sayesinde doğal ve saf bir tat sunan bu köfte, Balıkesir mutfağının sade ama etkileyici bir temsilcisidir.',
    },
    {
      'isim': 'Ayvalık Tostu',
      'gorsel':
          'https://cdnblog.tatilbudur.com/wp-content/uploads/2024/07/ayalik-tostu-1-scaled.jpg',
      'yemekBilgisi': 'Balıkesir Ayvalık tostu, bölgeye özgü çıtır ve yumuşak dokulu özel Ayvalık ekmeğiyle hazırlanan, sucuk, salam, sosis, kaşar '
          'peyniri gibi malzemelerin bolca kullanıldığı, lezzetiyle ünlü bir tost çeşididir. Genellikle turşu, ketçap ve mayonez gibi eklemelerle '
          'zenginleştirilen Ayvalık tostu, hem doyurucu hem de hızlı bir atıştırmalık olarak Ayvalık’ın simgesi haline gelmiştir. Sahilde yürüyüş '
          'yaparken veya çarşıda dolaşırken hemen her köşede bulunabilen bu tost, doğal malzemelerle hazırlanan içeriği ve zeytinyağının kattığı '
          'eşsiz tat ile diğer tost çeşitlerinden ayrılır. Ayvalık ziyaretlerinde mutlaka tadılması gereken bu lezzet, hem yerel halk hem de turistler'
          ' için vazgeçilmez bir sokak yemeğidir.',
    },
    {
      'isim': 'Höşmerim',
      'gorsel':
          'https://cdn.yemek.com/mnresize/1250/833/uploads/2019/03/hosmerim-yeni-onecikan.jpg',
      'yemekBilgisi': 'Balıkesir höşmerim tatlısı, yöresel Türk mutfağının sevilen tatlılarından biri olup, un, irmik, şeker, tereyağı ve sütle'
          ' hazırlanır. Yumuşak ve kremamsı dokusu, tereyağının kattığı özel aroma ile dikkat çeker. Yapımında bazen ceviz ya da pekmez gibi malzemeler '
          'de kullanılarak tatlı zenginleştirilir. Genellikle sıcak servis edilen höşmerim, üzerine pudra şekeri veya tarçın serpilerek sunulur '
          've Balıkesir mutfağının önemli tatlıları arasında yer alır. Hem yerel halk hem de Balıkesir’i ziyaret edenler için mutlaka tadılması '
          'gereken bu tatlı, bayramlarda ve özel günlerde sofraların vazgeçilmezi olur.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiBalikesir(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiBalikesir extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiBalikesir({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class BartinSayfasi extends StatefulWidget {
  const BartinSayfasi({super.key});

  @override
  _BartinSayfasiState createState() => _BartinSayfasiState();
}

class _BartinSayfasiState extends State<BartinSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Bartın',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Bartın')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Bartın')) {
                provider.removeFavoriSehir('Bartın');
              } else {
                provider.addFavoriSehir('Bartun');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Bartın')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Bartın')
                        ? 'Bartın favorilere eklendi!'
                        : 'Bartın favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Bartın')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Bartın')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Bartın')) {
                provider.removeGidilenSehir('Bartın');
              } else {
                provider.addGidilenSehir('Bartın');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Bartın')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Bartın')
                        ? 'Bartın gidilen şehirlere eklendi!'
                        : 'Bartın gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1558799524/tr/fotoğraf/sunrise-in-amasra.jpg?s=612x612&w=0&k=20&c=CW8rgf0rD8mF7dTXynu8Ki9yABrQWpjeJpx3nFPABU8=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Bartın, Türkiye\'nin Karadeniz Bölgesi\'nde yer alan ve tarihi Amasra ilçesiyle ünlü bir şehirdir. '
                    'Doğal güzellikleri, tarihi yapıları ve lezzetli deniz ürünleriyle ziyaretçilerini büyüler. Bartın, '
                    'özellikle Amasra Kalesi, Kemere Köprüsü ve muhteşem plajlarıyla dikkat çeker.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiBartin(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiBartin(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Bartın'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),

            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiBartin extends StatelessWidget {
  const YerSayfasiBartin({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'İnkumu Plajı',
      'gorsel':
          'https://www.inkumu.com/wp-content/uploads/2011/08/inkumu-plaji-ve-yerlesim-deseni.jpg',
      'bilgi': 'İnkum Plajı, Bartın merkeze 15 km uzaklıkta, Karadeniz’in eşsiz doğasıyla çevrili, 3 km uzunluğunda altın sarısı kumsalıyla ünlü bir '
          'plajdır. Yaz aylarında yüzme ve güneşlenme için tercih edilen plajda şezlong, şemsiye, duş ve soyunma kabinleri gibi hizmetler bulunur.'
          ' Yemyeşil ormanlarla çevrili bu sakin tatil bölgesinde yürüyüş yapabilir, kamp alanlarından yararlanabilir ve çevre koyları tekne turlarıyla'
          ' keşfedebilirsiniz. Sahil boyunca yer alan restoranlarda Karadeniz mutfağının lezzetlerini tatma imkânı sunan İnkum, huzurlu bir tatil'
          ' arayanlar için ideal bir destinasyondur.'
    },
    {
      'isim': 'Kuşkayası Yol Anıtı',
      'gorsel': 'https://pbs.twimg.com/media/E-ioVLDXMAEPexm.jpg:large',
      'bilgi': 'Kuşkayası Yol Anıtı, Roma döneminden kalma, Anadoluda benzeri olmayan bir yol anıtıdır ve Bartın-Amasra yolu üzerinde sarp bir kayalıkta'
          ' yer alır. Milattan sonra 1. yüzyılda, Roma İmparatorluğu’nun valisi Gaius Julius Aquila tarafından yaptırıldığı düşünülmektedir. Askerler, '
          'tüccarlar ve yolcuların mola verdiği bu noktada, kaya içine işlenmiş bir figür ve Latince yazıt bulunmaktadır. Figür, zırh giymiş bir Roma'
          ' askerini temsil ederken, yazıt valiye ve Roma imparatoruna ithaf edilmiştir. Tarihi değerinin yanı sıra, konumunun sunduğu manzara ve '
          'çevredeki doğal güzellikler de ziyaretçilerin ilgisini çeker. Kuşkayası, hem tarihi hem de kültürel bir miras olarak Bartın’ın görülmesi '
          'gereken yerlerinden biridir.'
    },
    {
      'isim': 'Güzelcehisar Lav Sütunları',
      'gorsel':
          'https://i.neredekal.com/i/neredekal/75/585x300/60702800b97430eee0754c2e',
      'bilgi': 'Güzelcehisar Lav Sütunları, yaklaşık 80 milyon yıl önce volkanik faaliyetler sonucu oluşmuş, dünyanın nadir jeolojik oluşumlarından '
          'biridir. Altıgen, beşgen ve dörtgen prizma şeklindeki bu sütunlar, Karadeniz kıyısında 80 metrelik uzunluğa ve 30 metreye kadar yüksekliğe'
          ' sahiptir. Türkiye’de sadece Bartın’da görülebilen bu doğal miras, jeolojik yapısıyla bilim insanlarının ve turistlerin ilgisini çeker.'
          ' Lav sütunlarının bulunduğu Güzelcehisar sahili, Karadeniz’in doğal güzellikleriyle birleşerek eşsiz bir manzara sunar. Sahil boyunca '
          'yapılan yürüyüşlerde sütunların etkileyici yapısını yakından inceleyebilir, deniz kenarında huzurlu vakit geçirebilirsiniz. Bölgeye '
          'yapılan ahşap yürüyüş yolları ve seyir terasları, ziyaretçilere daha keyifli bir deneyim sunmaktadır.'
    },
    {
      'isim': 'Amasra Fatih Camii',
      'gorsel':
          'https://lh5.googleusercontent.com/proxy/Dg8Rdr06vh7gBgACdJL0v4OGqeuphdgy58vmib-dYyRtVYV9eby03RqJkUnsS_aD-nmByaanVeuznTXN6f1Dpip15o53F5WTLtZWzqzJi2Kj6xA5vM2LdJPDDb7tcw7l',
      'bilgi': 'Fatih Camii, Amasra Kalesi’nin içinde yer alan, Bizans döneminde kilise olarak inşa edilmiş ve 1460 yılında Fatih Sultan Mehmet’in '
          'Amasra’yı fethetmesinin ardından camiye dönüştürülmüş önemli bir tarihi yapıdır. Orijinalinde Hristiyan dini ibadethanesi olarak tasarlanan '
          'yapı, gotik mimari izleri taşır. Fetihten sonra cami olarak işlev görmesi için minber ve mihrap eklenmiştir. Osmanlı döneminde çeşitli'
          ' onarımlar görerek günümüze kadar ulaşan cami, sade ve etkileyici mimarisiyle dikkat çeker. Hem tarihi hem de kültürel bir değer taşıyan'
          ' Fatih Camii, Amasra’nın zengin geçmişine ışık tutan önemli bir mirastır. Cami, Amasra Kalesi’nin büyüleyici atmosferinde ibadet edenleri '
          've ziyaretçileri ağırlamaktadır.'
    },
    {
      'isim': 'Amasra Kemere Köprüsü',
      'gorsel':
          'https://lh3.googleusercontent.com/proxy/AzYkCjVd3pviPsjZHC7V_W2LzElsIKUkirkTEAVixuwHA0Mfj8Yxff_9G6zJ-zqlAW9U7b0tGKWKcggX_agZrpiPhhHIQDxTRVpqmitYwhANkKyfaAIv1rpbVChWOg',
      'bilgi': 'Kemere Köprüsü, Amasra Kalesi içinde yer alan ve Bizans döneminde inşa edilmiş tarihi bir köprüdür. Sormagir ve Zindan kalelerini '
          'birbirine bağlayan bu kemerli yapı, taş işçiliğinin zarif bir örneğini sunar. Denizden gelen etkileyici manzarasıyla ziyaretçilerin '
          'ilgisini çeken köprü, yalnızca mimari bir eser değil, aynı zamanda stratejik bir geçiş noktası olarak da kullanılmıştır. Osmanlı döneminde '
          'yapılan restorasyonlarla günümüze kadar ulaşan Kemere Köprüsü, Amasra’nın tarihi dokusunu tamamlayan önemli yapılardan biridir. Fotoğraf'
          ' çekmek, manzarayı seyretmek ve Amasra’nın tarihine yolculuk yapmak isteyenler için mutlaka görülmesi gereken bir noktadır.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiIstanbul(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiBartin extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiBartin(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiBartin extends StatelessWidget {
  const YemekSayfasiBartin({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Pirinçli Mantı',
      'gorsel':
          'https://i20.haber7.net/resize/1300x788//haber/haber7/photos/2024/32/bartinin_yoresinin_gizli_lezzeti_pirincli_bartin_manti_tarifi_1723196095_5823.jpg',
      'yemekBilgisi': 'Bartın Pirinçli Mantı, Bartın’a özgü geleneksel bir yemektir ve diğer mantılardan farklı olarak iç harcı pirinçle hazırlanır. '
          'Kıyma, tavuk veya bazen sadece pirinçle yapılan harç, soğan, baharatlar ve tuz ile karıştırılır. Bu karışım, ince açılan yufkaların içine'
          ' konulup kapatılır ve kaynar suda haşlanarak pişirilir. Üzerine yoğurt, sarımsak ve tereyağı eklenerek servis edilen Bartın Pirinçli Mantı,'
          ' hem hafif hem de doyurucu bir lezzet sunar ve özellikle kış aylarında sıkça tercih edilir. Yöresel mutfakta önemli bir yer tutan bu yemek, '
          'genellikle aile sofralarında birlikte yapılan keyifli bir etkinlik haline gelir. Bartın’da yapılan bu mantı, bölgeye özgü taze ve kaliteli'
          ' malzemelerle hazırlanarak lezzetini daha da artırır. Hem yerel halkın hem de misafirlerin favori yemeklerinden biri olan Bartın Pirinçli '
          'Mantı, geleneksel yemek kültürünün bir parçası olarak günümüzde de popülerliğini sürdürmektedir.',
    },
    {
      'isim': 'Pum Pum Çorbası',
      'gorsel':
          'https://lh4.googleusercontent.com/proxy/cU_yYXPkyy83fqXeIWgXbRypDidexLP3iHKLAHAgNxEPtptgLO9Cg_9YC0VWzerbWSc01bqyDNz2mh5NQS5e2JcUdgGCvKwc3UVh0yzTyP65rjo3g6a1gVLDGe9_BjT0oSNBPuXIfUwr66zvyWYMPW87CYi3h4TpqpPyU7W90l_EQg',
      'yemekBilgisi': 'Bartın Pum Pum Çorbası, Bartın’a özgü, lezzetli ve besleyici bir çorbadır. Bu çorba, özellikle kış aylarında tüketilen, yoğun'
          ' ve doyurucu bir yemektir. Yapımında genellikle buğday, nohut, fasulye, bakla ve pirinç gibi malzemeler kullanılır. Pum Pum Çorbası, '
          'sebzeler ve baklagillerin kaynatılmasıyla hazırlanır ve üzerine tereyağı, nane gibi baharatlar eklenerek lezzetlendirilir. Çorbanın adı, '
          'kullanılan malzemelerin birbirine karışması sonucu elde edilen yoğun kıvamdan gelir. Geleneksel olarak, üzerine yoğurt ve sarımsak eklenerek '
          'servis edilir. Bartın Pum Pum Çorbası, hem sağlıklı hem de doyurucu bir seçenek olarak, Bartın mutfağının benzersiz lezzetlerinden biridir.',
    },
    {
      'isim': 'Etli Ayva Yemeği',
      'gorsel':
          'https://cdn.yemek.com/mnresize/940/940/uploads/2020/05/etli-ayva-yemegi-tarifi.jpg',
      'yemekBilgisi': 'Bartın Etli Ayva Yemeği, Bartın’a özgü, hem tatlı hem tuzlu lezzetlerin bir araya geldiği geleneksel bir yemektir. Ayva, etli '
          'yemeklerde genellikle tatlı bir dokunuş sağlamak için kullanılır. Bu yemekte, kuzu veya dana eti ile pişirilen ayvalar, zeytinyağı, soğan, '
          'sarımsak ve çeşitli baharatlarla lezzetlendirilir. Ayvaların doğal asidik yapısı, etin lezzetini dengeleyerek yemeğe farklı bir aroma '
          'katmaktadır. Genellikle fırınlanarak yapılan bu yemek, ağırbaşlı bir tat ve hoş bir kıvam elde edilmesini sağlar. Etli Ayva Yemeği, Bartın '
          'mutfağının özgün tatlarını keşfetmek isteyenler için harika bir seçenektir ve genellikle pilav veya yoğurt ile servis edilir. Hem tatlı hem'
          ' de tuzlu bir tat arayanlar için ideal olan bu yemek, Bartın’ın geleneksel yemek kültüründe önemli bir yer tutmaktadır.',
    },
    {
      'isim': 'Gıcır Yemeği',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/SehirRehberi//TurkMutfagi/20190523103157117_gicir%20logolu.JPG?format=jpg&quality=50',
      'yemekBilgisi': 'Bartın Gıcır Yemeği, Bartın’a özgü geleneksel bir yemektir ve özellikle kış aylarında tercih edilir. Yapımında ana malzeme olarak'
          ' buğday kullanılır. Buğday, önce haşlanır ve ardından pişirilmiş et (genellikle kuzu veya dana eti) ile karıştırılır. Yemeğe ayrıca tereyağı,'
          ' soğan, tuz ve çeşitli baharatlar eklenerek lezzetlendirilir. "Gıcır" adı, yemeğin hazırlanma aşamasında buğdayın taze olarak pişirilmesi '
          've kullanılan etin lezzetinin, geleneksel yöntemlerle bir araya gelmesinden kaynaklanır. Bartın Gıcır Yemeği, hem besleyici hem de doyurucu '
          'bir yemektir ve yerel halk arasında kış aylarında sıkça tercih edilen bir lezzettir. Yavaş pişirilerek yapılan bu yemek, yoğun kıvamı ve'
          ' zengin tadıyla dikkat çeker.',
    },
    {
      'isim': 'Kaymaklı Tatlı Böreği',
      'gorsel':
          'https://i.lezzet.com.tr/images-xxlarge-recipe/kaymakli_tatli_borek-ac78f1f2-0d43-4b2e-88d5-98d62db03d34.jpg',
      'yemekBilgisi': 'Bartın Kaymaklı Tatlı Böreği, Bartına özgü geleneksel bir tatlıdır ve özellikle özel günlerde, bayramlarda veya misafirliklerde'
          ' tercih edilir. Yapımında yufka kullanılır, ancak iç harcı kaymakla hazırlanır. Kaymak, tatlının en belirgin özelliği olup, yufkalar arasına '
          'sürülerek tatlıya zengin ve kremamsı bir doku kazandırır. Ayrıca, ceviz veya fındık gibi malzemelerle lezzet artırılabilir. Yufkalar açılıp, '
          'kaymaklı harç ile katlanarak şekil verilir ve fırında altın rengi alana kadar pişirilir. Piştikten sonra, tatlı sıcaklığıyla birlikte üzerine '
          'şerbet dökülerek tatlandırılır. Kaymaklı Tatlı Böreği, hem tatlı hem de kaymaklı olmasıyla benzersiz bir lezzet sunar. Genellikle üzerine pudra şekeri serpilerek servis edilir. Bu tatlı, '
          'Bartının mutfak kültüründe önemli bir yer tutar ve geleneksel tatlar arayanlar için harika bir seçenektir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiBartin(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiBartin extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiBartin({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class BatmanSayfasi extends StatefulWidget {
  const BatmanSayfasi({super.key});

  @override
  _BatmanSayfasiState createState() => _BatmanSayfasiState();
}

class _BatmanSayfasiState extends State<BatmanSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Batman',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Batman')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Batman')) {
                provider.removeFavoriSehir('Batman');
              } else {
                provider.addFavoriSehir('Batman');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Batman')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Batman')
                        ? 'Batman favorilere eklendi!'
                        : 'Batman favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Batman')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Batman')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Batman')) {
                provider.removeGidilenSehir('Batman');
              } else {
                provider.addGidilenSehir('Batman');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Batman')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Batman')
                        ? 'Batman gidilen şehirlere eklendi!'
                        : 'Batman gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://atlastozu.com/wp-content/uploads/2014/05/img_20140517_151426.jpg?w=900',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Batman, Türkiye\'nin Güneydoğu Anadolu Bölgesi\'nde yer alan ve tarihi zenginlikleriyle tanınan bir şehirdir. '
                    'Hasankeyf, Dicle Nehri boyunca uzanan tarihi köprüleri ve kalıntılarıyla bölgenin en önemli turistik yerlerinden biridir. '
                    'Batman, aynı zamanda kültürel çeşitliliği ve petrol üretimiyle de dikkat çeker.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiBatman(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiBatman(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Batman'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),

            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiBatman extends StatelessWidget {
  const YerSayfasiBatman({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Hasankeyf Antik Kenti',
      'gorsel':
          'https://media-cdn.t24.com.tr/media/stories/2017/08/raw_12-bin-yillik-hasankeyf-dinamitle-patlatiliyor_721187633.jpg',
      'bilgi': 'Hasankeyf Antik Kenti, Batman il sınırlarında, Tigris Nehri kıyısında yer alır ve MÖ 12. yüzyıla kadar uzanan bir tarihe sahiptir. '
          'Pek çok medeniyetin izlerini taşıyan Hasankeyf, özellikle kayalara oyulmuş evleri, kaya mezarları, tarihi kaleleri ve benzersiz manzaralarıyla ünlüdür.'
          ' Artuklu, Selçuklu, Emevi, Roma ve Bizans gibi medeniyetlere ait izler bulunduran bu antik kent, Hasankeyf Kalesi, Zeynel Bey Türbesi, Ulu Camii ve '
          'El-Rızk Camii gibi önemli yapılarıyla tarihî miras açısından büyük bir değere sahiptir. Ayrıca, Hasankeyf in etkileyici kaya mezarları ve kaya'
          ' kiliseleri de bölgenin en dikkat çekici öğelerindendir. Ilısu Barajı nedeniyle nehrin çevresindeki birçok yer su altında kalacak olsa da, '
          'bölgeye yapılan kazılar ve restorasyon çalışmaları Hasankeyf’in tarihî önemini korumasına yardımcı olmuştur. Hem doğa hem tarih severler için'
          ' önemli bir gezi noktası olan Hasankeyf, geçmişin derin izlerini yansıtan zengin kültürel mirasıyla bölgedeki en dikkat çeken yerlerden biridir.'
    },
    {
      'isim': 'Zeynel Bey Türbesi(Kümbeti)',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/zeynel-bey-tomb-41472.webp',
      'bilgi': 'Batman ın Hasankeyf ilçesinde yer alan Zeynel Bey Türbesi, Akkoyunlu Dönemi’nin önemli bir mimarilerinden biri. Ilısu Barajı projesi '
          'nedeniyle taşınmak zorunda kalan türbe günümüzde yeni yerinde ziyaretçilerini bekliyor. Etkileyici türbe, Akkoyunlu Hükümdarı Uzun Hasanın 1473 te '
          'Otlukbeli Savaşında ölen oğlu Zeynel Bey için yaptırılmış. Zeynel Bey Türbesi, Anadoludaki anıt mezar geleneğinin ilk örneklerinden biri olarak '
          'kabul ediliyor. Türbenin mimari özellikleri ve süslemeleri, Azerbaycandaki 1322 tarihli Berde Kümbeti ile benzerlikler gösteriyor. Türbe, silindirik '
          'bir kaide üzerinde yükselen gövdesiyle hemen dikkat çekiyor. Dıştan daire, içten sekizgen planlı olan türbe döneminin mimari anlayışını taşıyor. Türbenin '
          'iç ve dış yüzeyleri ise geometrik motiflerle süslü. Bu süslemeler de Selçuklu ve İlhanlı dönemlerinin sanatını yansıtıyor. '
    },
    {
      'isim': 'Sason',
      'gorsel':
          'https://sason.meb.gov.tr/meb_iys_dosyalar/2017_04/27140447_3.jpg',
      'bilgi': 'Sason, Batman il sınırlarında yer alan ve doğa severler için keşfedilmeye değer bir bölgedir. Yüksek dağları, vadileri ve doğal güzellikleriyle'
          ' ünlü olan Sason, özellikle yürüyüş rotaları ve dağcılık gibi açık hava aktiviteleri için ideal bir yerdir. Bölge, Sason Dağı gibi yükseklikleriyle doğa'
          ' tutkunlarına muazzam manzaralar sunar. Ayrıca, Sasonun çevresindeki ormanlık alanlar, zengin bitki örtüsü ve vahşi yaşamı ile keşif yapmak isteyenler'
          ' için büyüleyici bir atmosfer yaratır. Sason, geleneksel köyleri ve yerel yaşam tarzı ile de dikkat çeker, bölgeye özgü tarım ürünleri ve el'
          ' sanatlarıyla tanınır. Sason’un huzurlu ve doğayla iç içe yapısı, dağcılıkla ilgilenenler, fotoğrafçılar ve doğa yürüyüşçüleri için ideal bir '
          'kaçış noktasıdır.'
    },
    {
      'isim': 'Batman Hasankeyf Kalesi',
      'gorsel':
          'https://www.kulturportali.gov.tr/contents/images/19022013_fb1b10f7-732a-4f1f-8c5b-30529c2d4774.jpg',
      'bilgi': 'Hasankeyf Kalesi, Batman il sınırlarında, Tigris Nehri kenarında yer alan ve tarihi açısından büyük öneme sahip bir yapıdır.'
          ' MÖ 12. yüzyıldan itibaren Artuklu ve Selçuklu gibi farklı medeniyetler tarafından kullanılan kale, şehri savunma amacıyla yüksek bir kaya'
          ' üzerine inşa edilmiştir. Kayalara oyulmuş yapıları, surlar ve kulelerle çevrili olan kale, bölgenin stratejik savunmasında önemli bir rol '
          'oynamıştır. Ayrıca, kalede bulunan su sarnıçları ve mağaralar da dönemin mühendislik bilgisi hakkında bilgi verir. Ilısu Barajı nedeniyle'
          ' kalenin bazı kısımları su altında kalma tehlikesiyle karşı karşıya olsa da, kale Hasankeyf’in tarihî ve kültürel mirasını yansıtan önemli '
          'bir yapıdır.'
    },
    {
      'isim': 'Malabadi Köprüsü',
      'gorsel':
          'https://lh4.googleusercontent.com/proxy/HpO0MCkspAfDFGRW1F24nr4cfQvfytGXtsuOFuA1wcsBU7OO7t4e8vfE50r4xwQOgE0zKrcsgo9quhdASUHONaeOfxxmxXkvdkdCUZyJRhXV9JddQbQZJVM3unF9z4ojq7sowHK8wtxZcK_SCTC9LQp1xNRmn0iR62EX_gRSI_1rmm0QoQbUc_Oobcub',
      'bilgi': 'Malabadi Köprüsü, Batman il sınırlarına yakın, Diyarbakır-Batman karayolu üzerinde yer alan 12. yüzyıldan kalma tarihi bir taş köprüdür. '
          'Artuklu dönemine ait olan bu köprü, Tigris Nehri üzerindeki en büyük taş köprülerden biri olup, 150 metre uzunluğa ve 7,50 metre genişliğe'
          ' sahiptir. İleri mühendislik bilgisiyle yapılan köprü, özellikle büyük orta kemeriyle dikkat çeker ve taş işçiliğiyle dönemin ustalığını yansıtır.'
          ' Hem ulaşım açısından hem de mimari olarak büyük bir öneme sahip olan Malabadi Köprüsü, bölgenin kültürel mirasını ve tarihî değerini simgeleyen'
          ' önemli bir yapıdır.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiBatman(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiBatman extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiBatman(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiBatman extends StatelessWidget {
  const YemekSayfasiBatman({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Kütülk',
      'gorsel':
          'https://i.lezzet.com.tr/images-800x600/batman-mutfagi-yemekleri--bs64-dda211b4-8261-4a52-8d16-b0e9eb3b441f',
      'yemekBilgisi': 'Kütülk, Batmana özgü bir içli köfte çeşididir ve özellikle kalabalık sofralarda tercih edilen bir yemektir. Kütülk, iki farklı '
          'bulgur türüyle hazırlanır; ince bulgur ve iri bulgur karıştırılarak yoğrulur. İç harcı ise genellikle kıyma, soğan, baharatlar ve ceviz ile '
          'hazırlanır. Hazırlanan harç, bulgurlu dış harca sarılır ve yuvarlanarak şekil verilir. Ardından, haşlanarak pişirilir. Kütülk, dışı yumuşak '
          've içi dolgun bir şekilde piştikten sonra, üzerine tereyağı ve yoğurt gibi malzemelerle servis edilir. Hem doyurucu hem de lezzetli olan bu'
          ' yemek, özellikle büyük aile yemeklerinde ve özel davetlerde sofralarda yerini alır. Kütülk, Batman mutfağının en sevilen ve ikonik '
          'yemeklerinden biridir.',
    },
    {
      'isim': 'Şam Böreği',
      'gorsel':
          'http://assets.enuygun.com/media/lib/825x620/uploads/image/cig-borek-mueddibe-13715.webp',
      'yemekBilgisi': 'Batman Şam Böreği, incecik açılmış yufka hamurunun içine kıyma, peynir veya ıspanak gibi çeşitli harçların konularak yapılan bir '
          'tuzlu börektir. Börek, genellikle kahvaltılarda veya atıştırmalık olarak tercih edilir. Hazırlığı sırasında hamur, özenle açılır ve içerisine seçilen '
          'malzemeler konarak rulo şeklinde sarılır. Sonrasında börek fırında pişirilir, dışı çıtır çıtır, içi ise yumuşak ve lezzetli olur. Batmanda yaygın olarak'
          ' yapılan bu börek, özellikle çay saatlerinde ve misafirliklerde sıkça sunulur. Hem pratik hem de lezzetli bir seçenek olan Batman Şam Böreği, '
          'yerel mutfağın sevilen tatlarındandır.',
    },
    {
      'isim': 'Ayran Çorbası',
      'gorsel':
          'http://assets.enuygun.com/media/lib/825x620/uploads/image/ayran-corbasi-62106.webp',
      'yemekBilgisi': 'Batman ayran çorbası, özellikle yaz aylarında tercih edilen hafif ve ferahlatıcı bir çorbadır. Yapımında yoğurt, su, un ve '
          'baharatlar (genellikle nane, tuz ve pul biber) kullanılır. Çorbanın temeli yoğurtla yapılırken, un ve su eklenerek kıvamı ayarlanır. Karışıma'
          ' eklenen baharatlar, çorbaya tatlı bir lezzet ve aroma katar. Soğuk olarak servis edilen bu çorba, özellikle sıcak havalarda sindirimi '
          'kolaylaştırıcı ve vücudu serinletici etkisiyle tercih edilir. Aynı zamanda besleyici olması nedeniyle enerji verir ve öğün olarak da'
          ' tüketilebilir. Batman ayran çorbası, yöresel mutfağın öne çıkan ve ferahlatıcı tatlarından biri olup, geleneksel yemekler arasında yerini alır.'
          ' Misafirlere sunulduğunda, hem görsellik hem de lezzet açısından beğeni toplar.',
    },
    {
      'isim': 'Kaburga Dolması',
      'gorsel':
          'https://i.lezzet.com.tr/images-800x600/batman-mutfagi-yemekleri--bs64-fa99c8f8-38e1-428c-bd31-12c29e701c5f',
      'yemekBilgisi': 'Kaburga dolması, Batmanın en meşhur yemeklerinden biri olup, özel günlerde ve davetlerde sıklıkla hazırlanır. Bu lezzetli yemek, '
          'pirinç, baharatlar ve kuru meyveler (özellikle kuş üzümü ve kayısı) ile doldurulan kaburga etlerinin fırında pişirilmesiyle hazırlanır.'
          ' Doldurulan kaburgalar, etin yumuşaklığı ve iç harcın lezzetiyle birleşerek ortaya oldukça doyurucu ve zengin bir yemek çıkar. Tarife, '
          'kimi zaman ceviz veya fındık gibi malzemeler de eklenebilir. Kaburga dolması, piştikten sonra hem görsel açıdan etkileyici hem de tat açısından'
          ' oldukça zengin olur. Geleneksel olarak üzerine biraz tereyağı eklenerek servis edilen bu yemek, özellikle aile yemekleri, bayramlar ve misafir'
          ' ağırlamaları gibi özel anlarda tercih edilir. Hem etin zengin lezzeti hem de iç harcın aromatik tatları bir araya geldiğinde, Kaburga dolması, '
          'Batman mutfağının en sevilen ve ikonik yemeklerinden biri haline gelir.',
    },
    {
      'isim': 'Havdel Tatlısı',
      'gorsel':
          'https://i.lezzet.com.tr/images-800x600/batman-mutfagi-yemekleri--bs64-bf070fd7-6afc-464d-b84f-9eb7992dc6fe',
      'yemekBilgisi': 'Havdel, Batman’ın geleneksel ve meşhur ev tatlılarından biridir ve özellikle özel günlerde, bayramlarda ve misafir ağırlarken '
          'sıklıkla hazırlanır. Yapımında un, pekmiz ve badem ana malzemeler olarak kullanılır. Tatlının yapımında, un kavrulur ve üzerine pekmez '
          'eklenerek karıştırılır. Karışıma, tatlıya özel bir lezzet katması için badem ilave edilir. Bazı tariflerde tatlının aromasını artırmak için'
          ' karanfil ve tarçın gibi baharatlar da eklenebilir. Bu karışım, kıvam alana kadar karıştırılır ve ardından soğumaya bırakılır. Soğuyan havdel, '
          'kesilerek dilimlenir ve üzeri genellikle ceviz veya fındık ile süslenir. Hem tatlı hem de hafif bir yapıya sahip olan havdel, pekmiz sayesinde'
          ' doğal bir tatlılık kazanır. Bu tatlı, sadece lezzetiyle değil, aynı zamanda geleneksel Batman mutfağının bir parçası olarak da önemlidir.'
          ' Yumuşak ve hafif dokusu ile, misafirlere ikram edildiğinde beğeni toplar ve Batman mutfağının eşsiz tatlarını yansıtan bir örnek oluşturur.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiBatman(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiBatman extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiBatman({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class BayburtSayfasi extends StatefulWidget {
  const BayburtSayfasi({super.key});

  @override
  _BayburtSayfasiState createState() => _BayburtSayfasiState();
}

class _BayburtSayfasiState extends State<BayburtSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Bayburt',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Bayburt')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Bayburt')) {
                provider.removeFavoriSehir('Bayburt');
              } else {
                provider.addFavoriSehir('Bayburt');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Bayburt')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Bayburt')
                        ? 'Bayburt favorilere eklendi!'
                        : 'Bayburt favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Bayburt')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Bayburt')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Bayburt')) {
                provider.removeGidilenSehir('Bayburt');
              } else {
                provider.addGidilenSehir('Bayburt');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Bayburt')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Bayburt')
                        ? 'Bayburt gidilen şehirlere eklendi!'
                        : 'Bayburt gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1310131943/tr/fotoğraf/bayburt-kalesi-manzarası.jpg?s=612x612&w=0&k=20&c=V7Q8KfUgB5EB9t2l2QBqwbNw1VGhL49FFI87-U3vagQ=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Bayburt, Türkiye\'nin Karadeniz Bölgesi\'nde yer alan tarihi ve doğal güzellikleriyle dikkat çeken bir şehirdir. '
                    'Bayburt Kalesi, Dede Korkut Hikayeleri\'nin izlerini taşıyan coğrafyası ve doğal güzellikleriyle ziyaretçilerini büyüler. '
                    'Bayburt, aynı zamanda misafirperver insanları ve yöresel yemekleriyle ünlüdür.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiBayburt(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiBayburt(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Bayburt'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),

            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiBayburt extends StatelessWidget {
  const YerSayfasiBayburt({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Aydıntepe Yeraltı Şehri',
      'gorsel':
          'http://assets.enuygun.com/media/lib/825x620/uploads/image/aydintepe-yeralti-sehri-55751.webp',
      'bilgi': 'Bayburt’un Aydıntepe ilçesinde yer alan Aydıntepe Yeraltı Şehri, yaklaşık 3500 yıllık geçmişiyle dikkat çeker ve Anadolunun en büyük,'
          ' en iyi korunmuş yeraltı şehirlerinden biridir. 1996 yılında tesadüfen keşfedilen bu şehir, tüf kayalara oyulmuş, 20 den fazla odadan oluşan bir '
          'yapıdır. Galeriler, depolama alanları, su kuyuları, havalandırma bacaları ve bir kilise gibi farklı işlevlere sahip mekanlar içerir.'
          ' Yeraltı şehri, savunma ve barınma amaçlarıyla inşa edilmiş, savaş zamanlarında halkı korumak için kullanılmış olabilir. Ziyaretçiler,'
          ' şehrin mimari ve mühendislik harikalarına hayran kalabilir, geçmişin izlerini keşfederken yeraltının gizemli atmosferini hissedebilir.'
    },
    {
      'isim': 'Sırakayalar Şelalesi',
      'gorsel':
          'http://assets.enuygun.com/media/lib/825x620/uploads/image/sirakayalar-selalesi-55758.webp',
      'bilgi': 'Sırakayalar Şelalesi, Bayburtun doğal güzelliklerinden biri. Bu şelale, Bayburt merkezine oldukça yakın olan Sırakayalar Köyü’nde '
          'bulunuyor. Sırakayalar Şelalesi, özellikle yaz aylarında serinlemek isteyenler için ideal bir yer. Şelalenin etrafı, yeşilin her tonunu barındıran '
          'ormanlarla çevrili. Burada doğa yürüyüşü yapabilir, piknik yapabilir, kuş sesleri eşliğinde dinlenebilirsin. Şelalelerin çevresindeki ormanlık alan,'
          ' piknik yapmak, doğa yürüyüşü yapmak ve fotoğraf çekmek için ideal. Sırakayalar Şelalesi, Bayburta gelenlerin mutlaka görmesi gereken bir yer.'
          ' Bu şelale, hem doğal hem de tarihi bir güzelliğe sahip.'
    },
    {
      'isim': 'Kop Şehitliği',
      'gorsel':
          'http://assets.enuygun.com/media/lib/825x620/uploads/image/kop-sehitligi-55760.webp',
      'bilgi': 'Bayburt ta görülmesi yerler arasında en dikkat çekenlerden biri de Kop Şehitliği. Bu şehitlik, 1916 yılında Rus işgaline karşı kahramanca '
          'mücadele eden Bayburtlu şehitlerin anısına yapıldı. Şehitliğin girişinde, şehitlerin isimlerinin yazılı olduğu bir anıt taş yer alıyor. Şehitliğin '
          'içinde ise, şehitlerin mezarları, bir cami, bir kütüphane ve bir müze bulunuyor. Şehitliğin etrafı, yeşil bir bahçe ile çevrili. Kop Şehitliği,'
          ' Bayburt un tarihini ve ruhunu yansıtan bir mekan. Burayı ziyaret edenler, şehitlerin fedakarlıklarını ve vatan sevgilerini hissedebilirler.'
          'Şehitliğin hemen önünde, Bayburt Kalesi görülüyor. Bayburt Kalesi, şehrin tarihi ve stratejik önemini gösteren bir yapı. Kale, birçok medeniyete '
          'ev sahipliği yaptığı biliniyor. Kop Şehitliği, Bayburta gelen herkesin mutlaka görmesi gereken bir yer. Burası, hem tarihi hem de manevi bir değere'
          ' sahip olması ile öne çıkan bir nokta.'
    },
    {
      'isim': 'Bayburt Kalesi',
      'gorsel':
          'http://assets.enuygun.com/media/lib/825x620/uploads/image/bayburt-kalesi-55752.webp',
      'bilgi': 'Bayburt Kalesi, Türkiye’nin en büyük üçüncü kalesi olarak tarihi ticaret yolu üzerinde yer alır ve pek çok medeniyetin ilgisini çekip'
          ' el değiştirmiştir. Kim tarafından inşa edildiği kesin olmamakla birlikte, bazı kaynaklar Roma İmparatorluğu, bazıları ise Ermenileri işaret '
          'etmektedir. Bizans, Arap, Selçuklu, Akkoyunlu, Osmanlı ve Ruslar gibi çeşitli devletlerin yönetiminde olan kale, özellikle Selçuklu döneminde '
          'Trabzon İmparatorluğu na karşı savunma amaçlı onarılmıştır. Kale, Dede Korkut hikayelerinde de yer almakta olup, Beyrek’in Banu Çiçek ile buluştuğu '
          'yer olarak bilinir. Günümüzde, muazzam manzarası ve tarihi kitabeleriyle ziyaretçilere görsel ve kültürel bir deneyim sunmaktadır.'
    },
    {
      'isim': 'Baksı Müzesi',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/1110x740/5f57728d7152d81e341b174e.jpg',
      'bilgi': 'Bayburt Baksı Müzesi, Bayburt ilinin Baksı köyünde bulunan ve Türkiye’nin önemli çağdaş sanat müzelerinden biridir. 2010 yılında açılan'
          ' müze, modern sanatla geleneksel kültürü birleştiren eserleriyle dikkat çeker. Müze, Baksı köyünün doğal güzellikleriyle iç içe olup, sadece'
          ' sanatsal içerikle değil, aynı zamanda mimari yapısıyla da ilgi uyandırır. Müze koleksiyonu, Türk ve dünya sanatçılarına ait eserlerin yanı'
          ' sıra geleneksel el sanatları ve yerel kültürün izlerini de barındırır. Sanat galerileri, sergi alanları ve çeşitli etkinliklerle '
          'ziyaretçilerine zengin bir kültürel deneyim sunan Baksı Müzesi, aynı zamanda sanatçılar için bir yaratım alanı olarak da önemli bir işlev '
          'görmektedir.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiBayburt(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiBayburt extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiBayburt(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiBayburt extends StatelessWidget {
  const YemekSayfasiBayburt({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Kesme Çorba',
      'gorsel': 'https://i.ytimg.com/vi/59cwB8FrLmY/maxresdefault.jpg',
      'yemekBilgisi': 'Bayburt Kesme Çorbası, Bayburtun yöresel mutfağının önemli lezzetlerinden biridir. Kesme, ince ince kesilmiş ev yapımı erişte '
          'benzeri hamur parçalarından yapılır ve bu parçalar, genellikle et suyu veya tavuk suyu ile pişirilir. Çorbada, tereyağı, soğan, tuz ve'
          ' baharatlar kullanılarak lezzetlendirilir. Bu çorba, özellikle soğuk kış günlerinde, vücuda sıcaklık veren, besleyici ve doyurucu bir '
          'yemek olarak tercih edilir. Bayburt Kesme Çorbası, sade ve lezzetli yapısıyla hem yöre halkı hem de misafirler için vazgeçilmez bir sofradır.',
    },
    {
      'isim': 'Lor Dolması',
      'gorsel':
          'https://cdn.yemek.com/mnresize/1250/833/uploads/2024/02/24-lor-dolmasi-yemekcom.jpg',
      'yemekBilgisi': 'Bayburt Lor Dolması, pazı yaprağına sarılan ve içi lor peyniri ile doldurulan bir yöresel yemektir. İç harcı, genellikle lor'
          ' peyniri, pirinç, ince bulgur ve çeşitli baharatlar ile zenginleştirilir. Hazırlanan harç, pazı yapraklarına dikkatlice sarılır ve tencerede'
          ' pişirilir. Bu yemek, özellikle kış aylarında tercih edilen, besleyici ve lezzetli bir alternatif olarak öne çıkar. Bayburt Lor Dolması,'
          ' genellikle yoğurt veya tereyağı ile servis edilir ve hem hafif hem de doyurucu bir seçenek sunar. Ayrıca, geleneksel Bayburt mutfağının '
          'önemli yemeklerinden biri olarak misafir sofralarına da sıkça konulur.',
    },
    {
      'isim': 'Galacoş',
      'gorsel':
          'https://cdn.yemek.com/mncrop/940/625/uploads/2018/05/galacos-site.jpg',
      'yemekBilgisi': 'Galacoş yemeği, Doğu Karadeniz Bölgesine özgü Bayburt mutfağının nadide yemeklerinden biridir. Genellikle yoğurt, mercimek,'
          ' kıyma ve tırnak pide ile hazırlanan bu yemek, hem doyurucu hem de lezzetli bir özelliğe sahiptir. Tırnak pide, özel olarak açılmış hamurun'
          ' fırında pişirilerek üstü çıtır çıtır hale getirilir. Üzerine mercimek, baharatlarla tatlandırılmış kıyma eklenir ve yoğurtla servis edilir. '
          'Bu eşsiz lezzet, yöre halkının geleneksel tarifleriyle günümüze kadar ulaşmış ve özellikle misafir sofralarının vazgeçilmezi olmuştur. '
          'Galacoş, sıcak servis edildiğinde, yoğun kıyma ve mercimek aroması ile damaklarda iz bırakırken, yoğurdun serinletici etkisiyle de ferahlatıcı '
          'bir tat sunar. Bayburtun bu yöresel yemeği, hem besleyici hem de farklı tatları bir arada sunarak, zengin mutfağının öne çıkan lezzetlerinden '
          'biridir.',
    },
    {
      'isim': 'Ekşili Lahana Yemeği',
      'gorsel': 'https://i.ytimg.com/vi/cIUtq3gr0UA/maxresdefault.jpg',
      'yemekBilgisi': 'Bayburt’un kış mutfağının vazgeçilmez yemeklerinden biri olan ekşili lahana yemeği, yörede yetişen taze lahana ile yapılır ve'
          ' özellikle soğuk kış günlerinde tüketilir. Yüksek besin değeri ile bilinen bu yemek, kurutulmuş kemikli et, bulgur, kuyruk yağı, tereyağı, salça '
          've soğanla hazırlanarak, hem besleyici hem de doyurucu bir lezzet sunar. Lahananın ekşi tadı, yemekle birleşerek yoğun bir aroma oluşturur ve kış'
          ' aylarında enerji verir. Bayburtun sert kış koşullarında, bu yemek, sıcak tutma özelliğiyle halkın tercihi olur. Ayrıca, lahana ve kemikli etin '
          'birleşimi, yemeğe hem derin bir lezzet hem de yoğun bir kıvam katmaktadır. Yöresel tarifle yapılan ekşili lahana, hem geleneksel hem de sağlıklı bir '
          'seçenek olarak, misafir sofralarının da sevilen yemeklerinden biridir.',
    },
    {
      'isim': 'Tel Helvası',
      'gorsel':
          'https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhMhZKnew8PeT284WOOkRuthnkCDQj_Y5lO-Q1MCXJ6FhkpNgqxLULk7P2fEyuqRANXkxm5tixTcHJiw2Q_GbHoasmQrS722OnIlW9tKT_lE_TRPXX1JeF0O-EbnvlRsHr25YN8F6kRexc/s1000/telhelvatar%25C4%25B1f%25C4%25B1.JPG',
      'yemekBilgisi': 'Bayburt tel helvası, Bayburta özgü geleneksel bir tatlıdır ve özellikle düğünlerde, özel günlerde ve misafir ağırlamada sıklıkla'
          ' yapılır. Bu helva, ince ince çekilmiş unun, tereyağı ve şekerle harmanlanıp kavrulmasıyla hazırlanır. En belirgin özelliği, tel şeklinde'
          ' açılmış hamurun tatlıya ilave edilmesiyle elde edilen incecik dokusudur. Hamurun ince bir şekilde açılması ve tereyağında kavrulması, '
          'helvaya kendine has bir lezzet ve dokunuş kazandırır. Bayburt tel helvası, hem lezzetli hem de görünüş olarak etkileyici bir tatlıdır. '
          'Şeker ve tereyağının birleşimi, tatlının hem tatlı hem de aromatik olmasını sağlar. Genellikle sıcak servis edilir ve özellikle şerbetli '
          'tatlar sevenler için oldukça beğenilen bir tatlıdır. Bayburt’un tel helvası, bölgenin zengin mutfağını yansıtan tatlılardan biri olarak, '
          'Türk mutfağında önemli bir yere sahiptir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiBayburt(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiBayburt extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiBayburt({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class BilecikSayfasi extends StatefulWidget {
  const BilecikSayfasi({super.key});

  @override
  _BilecikSayfasiState createState() => _BilecikSayfasiState();
}

class _BilecikSayfasiState extends State<BilecikSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Bilecik',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Bilecik')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Bilecik')) {
                provider.removeFavoriSehir('Bilecik');
              } else {
                provider.addFavoriSehir('Bilecik');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Bilecik')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Bilecik')
                        ? 'Bilecik favorilere eklendi!'
                        : 'Bilecik favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Bilecik')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Bilecik')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Bilecik')) {
                provider.removeGidilenSehir('Bilecik');
              } else {
                provider.addGidilenSehir('Bilecik');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Bilecik')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Bilecik')
                        ? 'Bilecik gidilen şehirlere eklendi!'
                        : 'Bilecik gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://bebka.org.tr/wp-content/uploads/2023/11/0128-kopyasi.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Bilecik, Türkiye\'nin Marmara Bölgesi\'nde yer alan ve Osmanlı İmparatorluğu\'nun temellerinin atıldığı şehirlerden biridir. '
                    'Söğüt ilçesindeki Ertuğrul Gazi Türbesi, Osmanlı tarihi için büyük bir öneme sahiptir. '
                    'Bilecik, aynı zamanda doğal güzellikleri ve kültürel mirasıyla ziyaretçilerini kendine hayran bırakır.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiBilecik(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiBilecik(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Bilecik'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),

            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiBilecik extends StatelessWidget {
  const YerSayfasiBilecik({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Ertuğrul Gazi Türbesi',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/bilecik-ertugrul-gazi-turbesi-35871.webp',
      'bilgi': 'Ertuğrul Gazi Türbesi, Osmanlı Devleti’nin kurucusu Ertuğrul Gazi’nin mezarının bulunduğu, Bilecik’in Söğüt ilçesindeki önemli bir '
          'tarihi yapıdır. Osman Gazi tarafından açık mezar olarak yaptırılan türbe, I. Mehmet döneminde koruma altına alınmış, 1886’da II. Abdülhamid'
          ' tarafından restore edilmiştir. Osmanlı mimarisinin zarif bir örneği olan sekizgen türbede Ertuğrul Gazi’nin sandukası, kılıcı, kalkanı '
          've zırhı sergilenmekte, duvarlarında Kurtuluş Savaşı’ndan kalan mermi izleri görülmektedir. Çevresinde Osmanlı’nın ilk döneminde yer alan '
          'önemli kişilerin mezarları bulunan türbe, TRT’de yayınlanan Diriliş: Ertuğrul dizisi sonrasında yoğun ziyaretçi çeken, Türk tarihi ve '
          'kültürü açısından değerli bir mekandır.'
    },
    {
      'isim': 'Kömürsu Yaylası',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/komursu-yaylasi-bilecik-35919.webp',
      'bilgi': 'Kömürsu Yaylası, Bilecik’in doğal güzelliklerinden biri olarak, doğa severlerin ilgisini çeken bir yer. Kömürsu Yaylası, Bozüyük ilçe'
          ' merkezine 28 kilometre uzaklıkta, 1650 metre yükseklikte, ormanlık bir alanda yer aldığı için oldukça farklı bir havası olan bir mekan. '
          'Köknar, kayın, karaçam, ardıç gibi ağaçların bulunduğu yayla son dönemde birçok kişi tarafından tercih edilmeye başladı. Türkiye’de '
          'yaygınlaşan yayla turizminin bir parçası olan Kömürsu Yaylası, el değmemiş bir cennet gibi. Bu alan, doğa yürüyüşleri, bisiklet turları, '
          'yaban hayatı gözlemciliği gibi aktiviteler için elverişli bir nokta. Kömürsu Yaylasında, ziyaretçilerin ihtiyaçlarını karşılayacak çeşitli '
          'imkanlar bulunmadığını da hatırlatmak gerekiyor. Bilecik’e gelip, doğal bir alanda kamp yapmak isterseniz tercih edebileceğiniz yerlerin '
          'başında gelen bu yayla, konaklama yapmasanız dahi görülmeye değer alanlar arasında bulunuyor. Özellikle yeşili ve tonlarını seven kişilerin'
          ' görebileceği bir yer.'
    },
    {
      'isim': 'Köprülü Mehmet Paşa Kervansarayı',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/koprulu-mehmet-pasa-kervansarayi-bilecik-35918.webp',
      'bilgi': 'Vezirhan’daki Köprülü Mehmet Paşa Kervansarayı, 17. yüzyılda Osmanlı Sadrazamı Köprülü Mehmet Paşa’nın vakıf eseri olarak inşa edilmiş,'
          ' Bağdat-İstanbul yolu üzerindeki kervanların dinlenme ve konaklama yeri olarak hizmet veren önemli bir tarihi yapıdır. Dikdörtgen planlı'
          ' ve üç bölümlü olan kervansaray, taş ve tuğladan yapılmış olup giriş kapısında bir kitabe yer alır. Orta bölümde arabalar ve atlar, yan '
          'bölümlerde ise yolcular konaklamış; duvarlardaki ocaklar ve pencereler misafirlerin kullanımına sunulmuştur. 1912’ye kadar kullanılan yapı, '
          'bakımsızlık nedeniyle yıkılmış ancak 2007’de başlatılan restorasyon çalışmalarının ardından 2010’da yeniden kullanıma açılmıştır.'
    },
    {
      'isim': 'Bilecik Kent Ormanı',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/bilecik-kent-ormani-53122.webp',
      'bilgi': 'Bilecik Kent Ormanı, şehrin merkezinde yer alan, doğal güzellikleri ve zengin biyoçeşitliliğiyle ziyaretçilerine huzur sunan geniş '
          'bir alandır. 1965 yılında ağaçlandırılmaya başlanan orman, uzun çalışmalar sonucunda 2005 yılında halkın kullanımına açılmıştır. 53 '
          'hektarlık alanında yürüyüş yolları, bisiklet rotaları ve piknik alanları gibi çeşitli aktiviteler için uygun imkanlar sunar. Sessizliği '
          've temiz havasıyla doğa yürüyüşleri yapmak, kuş türlerini ve doğal yaşamı gözlemlemek isteyenler için ideal bir ortamdır. Şehre gelenlerin'
          ' hem dinlenmek hem de doğanın keyfini çıkarmak için mutlaka uğraması gereken bu alan, doğal güzellikleriyle ziyaretçilerini büyüler.'
    },
    {
      'isim': 'Metristepe Zafer Anıtı',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/metristepe-zafer-aniti-53121.webp',
      'bilgi': 'Metristepe Zafer Anıtı, Bozüyük’te, Kurtuluş Savaşı’nın en önemli dönüm noktalarından biri olan İnönü Savaşları anısına inşa edilmiştir.'
          ' Türk milletinin bağımsızlık mücadelesindeki kahramanlığını simgeleyen 24 metre yüksekliğindeki anıt, çevresindeki restore edilmiş mevzilerle'
          ' ziyaretçilere duygusal anlar yaşatır. Anıt üzerinde İnönü Savaşları’na katılan birlikler, komutanlar ve döneme ait tarihi telgraflarla'
          ' ilgili rölyefler ve bilgiler yer alır. Yakınında bulunan İnönü Şehitliği de, bu önemli zaferin izlerini görmek ve şehitlerimize saygı'
          ' göstermek için ziyaret edilebilecek bir diğer anlamlı noktadır.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiBilecik(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiBilecik extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiBilecik(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiBilecik extends StatelessWidget {
  const YemekSayfasiBilecik({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Parmak Köftesi',
      'gorsel':
          'https://www.bilecikhaber.com.tr/d/other/2024/08/29/parmak-koftesi.jpg',
      'yemekBilgisi': 'Bilecik’in meşhur parmak köftesi, et sevmeyen köfte severler için farklı bir alternatif sunar ve şehrin hemen her dükkânında '
          'bulunabilir. Klasik köftelerden farklı olarak kıyma yerine ince bulgur, irmik, soğan, sarımsak, maydanoz, salça, yumurta, yağ, kimyon ve'
          ' karabiber gibi malzemelerle hazırlanır. Öncelikle bulgur ve irmik suyla ıslatılarak şişirilir, ardından diğer malzemelerle karıştırılarak '
          'yoğrulur. Hazırlanan harçtan koparılan parçalar avuç içinde parmak şekline getirilir ve köfteler haşlanır. Üzerine, yağda kavrulmuş soğan '
          've sarımsakla hazırlanan, yeşilliklerle zenginleştirilmiş sos dökülerek genellikle sarımsaklı yoğurt eşliğinde servis edilir. Bu köfte,'
          ' hem lezzeti hem de farklı yapımıyla dikkat çeker.',
    },
    {
      'isim': 'Bilecik Nohutlu Mantısı',
      'gorsel':
          'https://www.ardaninmutfagi.com/wp-content/uploads/2018/10/nohutlu-manti-2.jpg',
      'yemekBilgisi': 'Türkiyenin geleneksel lezzetlerinden biri olan mantı, her yörede farklı şekillerde hazırlanır ve Bilecik usulü mantı, klasik '
          'tariften farklı olarak kıyma yerine haşlanmış nohutla yapılır. El açması hamurun içine pişmiş nohut konularak küçük parçalara kesilir ve '
          'kapatılır. Tepsiye yerleştirilen bu mantılar, ateşte hafif pembeleşene kadar kavrulur. Ardından, klasik mantıların aksine tencerede değil, '
          'tepside pişirilir. Üzerine salçalı sos dökülen mantılar, suyunu çekene kadar ateşte pişirilir ve son olarak sarımsaklı yoğurtla servis edilir.'
          ' Bilecik’in bu yöresel mantısı, farklı yapılışı ve lezzetiyle dikkat çeker.',
    },
    {
      'isim': 'Dağ Eriği Ekşili Kesme Çorbası',
      'gorsel':
          'https://img.piri.net/resim/imagecrop/2021/04/13/10/29/resized_d28fe-5f5aa117989681.jpg',
      'yemekBilgisi': 'Bilecik’in en özel yöresel lezzetlerinden biri olan dağ eriği ekşili kesme çorbası, besleyici ve lezzetli bir yemektir. '
          'Çorbanın yapımında ev yapımı makarna, yeşil mercimek, et suyu, dağ eriği ve kızılcık kurusu kullanılır. Mercimek ve makarna et suyunda'
          ' haşlanırken, başka bir tavada tereyağı, sarımsak, salça ve baharatlar kavrulur. Çorbaya ekşi lezzet katmak için dağ eriği ve kızılcık '
          'kurusu kaynatılır. Hazırlanan ekşi karışım çorbaya eklenir ve son olarak tereyağı, sarımsak ve baharatlardan oluşan sos çorbanın üzerine'
          ' gezdirilerek servis edilir. Bu eşsiz çorba, Bilecik’in geleneksel mutfağının vazgeçilmezlerinden biridir.',
    },
    {
      'isim': 'Zırz',
      'gorsel':
          'https://i.pinimg.com/736x/89/2e/0c/892e0c88f22d2d808529c3256c8f5b90.jpg',
      'yemekBilgisi': 'Sıra dışı ismiyle dikkat çeken zırz, Bilecik mutfağının lezzetli ve farklı bir yemeğidir. Genellikle mısır özü ya da '
          'zeytinyağıyla pişirilen bu meze, taze soğan, sarımsak, kişniş ve pul biberle tatlandırılır. Yemeğin yapımında, ince doğranan ıspanaklar'
          ' haşlanırken tavada yağda taze soğan kavrulur ve üzerine haşlanmış ıspanak eklenip birkaç dakika daha kavrulur. Ardından süzme yoğurt,'
          ' rendelenmiş sarımsak, pul biber ve kişnişle hazırlanan sos ıspanakların üzerine gezdirilir. Klasik ıspanak yemeklerinden farklı olarak '
          'meze olarak tüketilen zırz, Bilecik seyahatinizde mutlaka denemeniz gereken lezzetlerden biridir.',
    },
    {
      'isim': 'Büzme Tatlısı',
      'gorsel':
          'https://cdn.otelleri.net/landing/bilecik/gezi-rehberi/cevizli-buzme-tatlisi-2640-9f.jpg',
      'yemekBilgisi': 'Bilecik yöresine özgü büzme tatlısı, klasik baklavalardan farklı olarak susam ve Hindistan ceviziyle servis edilen özel bir '
          'baklava çeşididir. Bayram, düğün ve kalabalık organizasyonlarda ikram edilen bu tatlı, el açması yufkalarla hazırlanır. Yufka üzerine nişasta'
          ' serpilip ceviz veya fındık içi eklenerek hamur oklavaya sarılır ve büzdürülür. Eritilen margarin veya tereyağı döküldükten sonra fırına verilir '
          've kızaran tatlıya şerbet eklenir. Son olarak, tatlı üzerine kavrulmuş susam ve Hindistan cevizi ile süsleme yapılır. Bilecikteki tüm tatlıcılarda'
          ' deneyebileceğiniz bu lezzeti, sevdikleriniz için paket olarak da alabilirsiniz.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiBilecik(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiBilecik extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiBilecik({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class BingolSayfasi extends StatefulWidget {
  const BingolSayfasi({super.key});

  @override
  _BingolSayfasiState createState() => _BingolSayfasiState();
}

class _BingolSayfasiState extends State<BingolSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Bingöl',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Bingöl')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Bingöl')) {
                provider.removeFavoriSehir('Bingöl');
              } else {
                provider.addFavoriSehir('Bingöl');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.favoriSehirler.contains('Bingöl')
                      ? Colors.green // Favorilere eklendiğinde yeşil
                      : Colors.red, // Favorilerden çıkarıldığında kırmızı
                  content: Text(
                    provider.favoriSehirler.contains('Bingöl')
                        ? 'Bingöl favorilere eklendi!'
                        : 'Bingöl favorilerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
          IconButton(
            icon: Icon(
              context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Bingöl')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                      .watch<GidilenSehirlerProvider>()
                      .gidilenSehirler
                      .contains('Bingöl')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('Bingöl')) {
                provider.removeGidilenSehir('Bingöl');
              } else {
                provider.addGidilenSehir('Bingöl');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  backgroundColor: provider.gidilenSehirler.contains('Bingöl')
                      ? Colors.green // Gidilen şehirlere eklenince yeşil
                      : Colors.red, // Gidilen şehirlerden çıkarılınca kırmızı
                  content: Text(
                    provider.gidilenSehirler.contains('Bingöl')
                        ? 'Bingöl gidilen şehirlere eklendi!'
                        : 'Bingöl gidilen şehirlerden çıkarıldı!',
                    style: const TextStyle(
                        color: Colors.black), // Yazı rengini siyah yapar
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://www.kulturportali.gov.tr/repoKulturPortali/large/17092015/e64497db-6be7-4c51-966d-2a622ea2d7a1.jpg?format=jpg&quality=50',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Bingöl, Doğu Anadolu Bölgesi\'nde yer alan doğal güzellikleri ve eşsiz manzaralarıyla tanınan bir şehirdir. '
                    'Yüzen adaları, dağları ve gölleriyle doğaseverler için eşsiz bir destinasyondur. '
                    'Ayrıca Bingöl, sıcak misafirperverliği ve tarihi yapılarıyla ziyaretçilerini ağırlamaktadır.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiBingol(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiBingol(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Bingöl'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),

            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),

            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiBingol extends StatelessWidget {
  const YerSayfasiBingol({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Solhan',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/solhan-41779.webp',
      'bilgi': 'Bingöl merkezine sadece bir saat uzaklıkta bulunan Solhan ilçesi, Hititler, Urartular, Asurlar, Medler, Persler ve Osmanlılar gibi pek '
          'çok medeniyete ev sahipliği yapmış tarihi ve doğal zenginlikleriyle dikkat çekiyor. Yüzen Adalar Tabiat Anıtı ve Zağ Mağarası gibi ünlü doğa'
          ' harikalarını keşfetme imkanı sunan Solhan, yaz aylarında doğa gezileri ve tarih turlarıyla ziyaretçilerini ağırlıyor. Dağlarla çevrili '
          'ilçenin yemyeşil yaylalarında sıcak yaz günlerinde keyifli geziler yapılabilir. Ayrıca, 1916’da Rus Harbi’nde şehit düşen askerler için'
          ' yapılan Şeref Meydanı Şehitliği ve Kaleköy’deki tarihi kalıntılarla geçmişe dair izler de keşfedilebilir.'
    },
    {
      'isim': 'Yayladere',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/yayladere-41783.webp',
      'bilgi': 'Bingöl ün doğal güzellikleriyle ünlü Yayladere ilçesi, Sülbüs Dağı eteklerinde düzenlenen Sülbüs Festivali ile büyük ilgi görüyor. Sarp dağlarla '
          'çevrili bu bölge, tarihi zenginlikleri ve el değmemiş doğasıyla dikkat çekiyor. Yayladerede, volkanik Sülbüs Dağının manzaralarını keşfedebilir, '
          'rehberli doğa yürüyüşlerine katılabilirsiniz. Ayrıca, Kalkanlı Mağarasını gezebilir ve romatizma ile kalp rahatsızlıklarına iyi gelen kaplıca '
          'sularından faydalanabilirsiniz.'
    },
    {
      'isim': 'Murat Nehri',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/murat-nehri-41777.webp',
      'bilgi': 'Doğu Anadolu Bölgesinin eşsiz doğa güzelliklerinden biri olan Murat Nehri, Fırat Nehrinin iki kolundan birini oluşturur ve 722'
          ' kilometre boyunca büyüleyici manzaralar sunar. Bingöl’de yaz aylarında rafting etkinliklerine ev sahipliği yapan nehir, yıl boyunca trekking,'
          ' bisiklet turları, fotoğraf safarileri ve kampçılık gibi etkinlikler için popüler bir destinasyon olmuştur. 40.000 kilometrekarelik havza alanıyla '
          'bölgenin en büyük su kaynaklarından biri olan Murat Nehri, Asur ve Hitit dönemlerinden kalma kaleleri keşfetme fırsatı da sunar. Ayrıca, nehir '
          'kenarındaki mesire alanlarında piknik yapabilir veya kanolarla huzurlu geziler yapabilirsiniz.'
    },
    {
      'isim': 'Hesarek Kayak Merkezi',
      'gorsel':
          'https://lh6.googleusercontent.com/proxy/CeYaGbyd1lx4Fay2CNSRZUunuuvMJA0MyGrSBcXixL-52NKXo0wk4-r9tCdHCVxFl1IuHLWtS5DGmdWd8KYnTWBWexv9g7b5PXsNLa5tPeavyfG2dnQkF2Rx4YjnBG_VnonXL8JE77xL7A_DdNCmhwk8NzKFOgVzz0pSL76H',
      'bilgi': 'Bingölde kış aylarında popüler bir turistik merkez olan Hesarek Kayak Merkezi, şehir merkezine yaklaşık 30 dakika uzaklıkta ve çevresi '
          'görkemli karlı dağlarla çevrilidir. Deniz seviyesinden yaklaşık 2500 metre yükseklikte bulunan merkezde, çocuklarınızla kayak ve snowboard'
          ' yaparak keyifli bir gün geçirebilirsiniz. Teleferik ile dağ zirvelerine çıkarak muazzam kar manzaralarının tadını çıkarabilir, rehber '
          'eşliğinde kar yürüyüşleri yaparak kışın kartpostal gibi güzelliklerini keşfedebilirsiniz.'
    },
    {
      'isim': '33 Şehit Anıtı',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/33-sehit-aniti-41763.webp',
      'bilgi': 'Bingölde, 1993 yılında usta birliklerine giderken şehit edilen 33 askerin anısına inşa edilen 33 Şehit Anıtı, şehirdeki önemli ziyaret'
          ' noktalarından biridir. Şehir merkezine sadece 13 kilometre mesafede, Anıttepe adı verilen yüksek bir tepeye yerleştirilen anıt, 2012 yılında '
          'tamamlanmış olup, Anıtkabirden getirilen 33 metre uzunluğundaki bayrak direğinde dalgalanan Türk bayrağıyla etkileyici bir görüntü sunmaktadır. '
          'Anıta toplu taşıma araçlarıyla kolayca ulaşarak şehitlerimizi anma fırsatını yakalayabilirsiniz.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiBingol(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiBingol extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiBingol(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiBingol extends StatelessWidget {
  const YemekSayfasiBingol({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Ayran Çorbası',
      'gorsel':
          'https://blog-biletbayi-com.cdn.ampproject.org/i/s/blog.biletbayi.com/wp-content/uploads/2017/09/ayran-corbasi.jpg',
      'yemekBilgisi': 'Bingöl’ün yöresel yemeklerinden biri olan bol yoğurtlu ayran çorbası, şehrin en sevilen lezzetlerinden biridir. Döğme ve nohut'
          ' eklenerek hazırlanan bu özel çorba, yoğurt ve yumurtayla terbiye edilerek kıvam alır. Yaz aylarında soğuk, kış aylarında ise sıcak olarak '
          'tüketilen ayran çorbası, hem hafif hem de doyurucu bir seçenektir. Nohut ve döğme sayesinde oldukça besleyici olan bu çorba, Bingöl '
          'sofralarının vazgeçilmezi olmayı sürdürmektedir. Yanında Bingöl’ün meşhur tandır ekmeğiyle sunulduğunda, lezzeti adeta ikiye katlanır. '
          'Özellikle kalabalık aile yemeklerinde sıkça tercih edilen ayran çorbası, Bingöl mutfağını keşfetmek isteyenler için ideal bir tattır.',
    },
    {
      'isim': 'Sorina Pel',
      'gorsel':
          'https://firatikesfet.com/BackOffice/UploadImage/gallery/orj_e01a598e-638b-4b7e-b5c4-34383b5d89cdsorina-pel-min.jpg',
      'yemekBilgisi': 'Türkiye’nin birçok bölgesinde farklı isimlerle anılan bu yufkalı özel lezzet, Bingöl’de sorina pel ya da sirina pel adıyla'
          ' biliniyor. Elde açılan ya da hazır olarak satın alınan yufkalarla yapılan bu yöresel yemek, fırında pişirildikten sonra üzerine sarımsaklı '
          'yoğurt ve eritilmiş tereyağı ile hazırlanan özel bir sos dökülerek sunuluyor. Az malzeme ile hazırlanan bu pratik ama son derece lezzetli '
          'yemek, hem hafif hem de doyurucu bir öğün için ideal. Sorina pel’i Bingöl’deki restoranlarda deneyebilir veya tarifine uygun şekilde kolayca '
          'kendi mutfağınızda hazırlayabilirsiniz.',
    },
    {
      'isim': 'İçli Köfte',
      'gorsel': 'https://pbs.twimg.com/media/EVly0ABWkAYVmar.jpg',
      'yemekBilgisi': 'Diğer bölgelerde genellikle büyük boyutlarda ve kızartılarak yapılan içli köfteler, Bingöl’de daha küçük boyutlarda hazırlanarak '
          'haşlama yöntemiyle pişiriliyor. İnce köftelik bulgur ile yoğrulan dış hamur, içine kıyma, soğan ve salça ile hazırlanan nefis bir harç '
          'eklenerek şekillendiriliyor. Ardından kaynar suda haşlanan içli köfteler, hafifliği ve lezzetiyle her öğün için ideal bir seçenek oluyor.'
          ' Bingöl’de aile sofralarının vazgeçilmezi olan bu köfteler, özellikle misafir ağırlarken sıkça tercih ediliyor. Yanında tereyağlı sos ya da '
          'limonla sunulan Bingöl usulü içli köfteyi mutlaka denemelisiniz.',
    },
    {
      'isim': 'Mastuva',
      'gorsel': 'https://i.ytimg.com/vi/ThRQRWl5niw/sddefault.jpg',
      'yemekBilgisi': 'Bingöl’ün en basit malzemelerle yapılan ancak lezzetiyle herkesi kendine hayran bırakan yemeklerinden biri olan mastuva, hem yöre'
          ' halkı hem de ziyaretçiler tarafından çok seviliyor. Pirinç, ayran ve tereyağı ile hazırlanan bu yemek, aslında yoğurtlu pilavın farklı bir'
          ' yorumu. Ancak pilavın geleneksel olarak su yerine doğrudan ayranla pişirilmesi, pirince hem yumuşak bir dokunuş hem de özgün bir tat katıyor.'
          ' Pişirme işlemi sırasında kullanılan ayran, pilava hafif bir ekşilik verirken, üzerine gezdirilen eritilmiş tereyağı da yemeğin aromasını '
          'zenginleştiriyor. Hem sade hem de doyurucu bir seçenek olan mastuvayı Bingöl’deki restoran ve evlerde kolaylıkla bulabilir, bu eşsiz lezzeti'
          ' deneyimleyebilirsiniz.',
    },
    {
      'isim': 'Burma Kadayıf Tatlısı',
      'gorsel':
          'https://www.kadayifal.com/wp-content/uploads/2020/05/kadayifci_saim_fistikli-burma-kadayif-diyarbakir-kadayifal_-1.jpg',
      'yemekBilgisi': 'ngöl Burma Kadayıfı, şehrin en sevilen tatlılarından biri olup ince tel kadayıflarla hazırlanır ve iç harcında genellikle bol '
          'ceviz veya fındık kullanılır. Kadayıflar elde burularak şekil verildikten sonra tepsiye dizilir, üzerine eritilmiş tereyağı gezdirilir '
          've fırında altın sarısı bir renk alana kadar pişirilir. Sıcak şerbetle buluştuğunda hem çıtır hem de yoğun bir lezzete sahip olan bu tatlı, '
          'Bingöl’ün doğal tereyağı ve cevizleri sayesinde eşsiz bir aroma kazanır. Bayram sofralarında ve özel günlerde sıklıkla tercih edilen burma '
          'kadayıf, şehirdeki tatlıcılarda taze olarak bulunabilir ve Bingöl mutfağını tanımak isteyenler için mutlaka denenmesi gereken bir lezzettir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiBingol(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiBingol extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiBingol({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class BitlisSayfasi extends StatefulWidget {
  const BitlisSayfasi({super.key});

  @override
  _BitlisSayfasiState createState() => _BitlisSayfasiState();
}

class _BitlisSayfasiState extends State<BitlisSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Bitlis',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Bitlis')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Bitlis')) {
                provider.removeFavoriSehir('Bitlis');
              } else {
                provider.addFavoriSehir('Bitlis');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Bitlis')
                        ? 'Bitlis favorilere eklendi!'
                        : 'Bitlis favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://www.shutterstock.com/image-photo/view-alemdar-bridge-vertical-frame-600nw-2390452291.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Bitlis, tarihi zenginlikleri ve doğal güzellikleriyle Doğu Anadolu\'nun önemli şehirlerinden biridir. '
                    'Nemrut Dağı, Ahlat Selçuklu Mezarlığı ve Van Gölü kıyısındaki doğal alanlarıyla ünlüdür. '
                    'Bitlis aynı zamanda tarihi kalesi ve benzersiz kültürüyle ziyaretçilerini büyülemektedir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiBitlis(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiBitlis(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Bitlis'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiBitlis extends StatelessWidget {
  const YerSayfasiBitlis({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Nemrut Krater Gölü',
      'gorsel':
          'https://i20.haber7.net/resize/1280x720//haber/haber7/photos/2021/34/dunyada_ikinci_nemrut_krater_golu_gorenleri_kendine_hayran_birakiyor_1630134829_4422.jpg',
      'bilgi': 'Ülkemizin dünyaca ünlü doğal güzelliklerinden biri olan Nemrut Krater Gölü, hem oluşumundaki mucizesiyle hem de büyüleyici manzaralarıyla'
          ' dikkat çekiyor. Dünyanın en büyük ikinci krater gölü olan bu eşsiz doğa harikası, 12 kilometrelik bir alana yayılmış ve beş farklı gölden'
          ' oluşuyor. Sazan balığı bolluğu sayesinde balıkçılık için ideal olan göl, aynı zamanda yürüyüş yolları, piknik alanları ve çevresindeki kamp'
          ' alanlarıyla doğa tutkunlarını cezbediyor. En derin noktası 155 metre olan gölde yaz aylarında yüzme keyfi yaşanabilirken, göl çevresi yüzlerce'
          ' kuş türüne ev sahipliği yapıyor. Dördüncü zamanda Nemrut Dağı’ndaki volkanik patlamalarla oluşan bu doğa mucizesi, huzurlu bir kaçış noktası '
          'arayanların mutlaka ziyaret etmesi gereken bir yer.'
    },
    {
      'isim': 'Bitlis Kalesi',
      'gorsel':
          'https://bitlishaber13net.teimg.com/bitlishaber13-net/uploads/2024/07/haber-kapak-sablon-2024-07-29t113239690.jpg',
      'bilgi': 'Bitlis’in simgelerinden biri olan ve yaklaşık 2300 yıl önce Büyük İskender’in emriyle inşa edildiği düşünülen Bitlis Kalesi, şehir'
          ' merkezinde yer almasıyla kolayca ziyaret edilebiliyor. Osmanlı ve Selçuklu dönemlerinde bazı değişimlere uğrayan kale, 50 metreyi aşan'
          ' surlarıyla ziyaretçilerine Bitlis’in en güzel manzaralarını sunuyor. Dik bir yamaç üzerinde konumlandığı için panoramik fotoğraf çekimleri'
          ' için ideal olan kalenin, sert kayalık bir alana inşa edilmesi nedeniyle savunma hendekleri bulunmuyor. Kale içerisinde süren arkeolojik'
          ' kazılar, ziyaret etmeye engel teşkil etmezken tarihle doğanın buluştuğu bu etkileyici yapıyı keşfetmek unutulmaz bir deneyim sunuyor.'
    },
    {
      'isim': 'Ahlat Selçuklu Mezar Taşları',
      'gorsel':
          'https://cdn1.ntv.com.tr/gorsel/JvJpjRSAYU-f2ULFPd6mZA.jpg?width=1000&mode=crop&scale=both',
      'bilgi': 'Bitlis’in tarihi ve kültürel miraslarından biri olan Ahlat Selçuklu Mezar Taşları, Van Gölü’ne yakın konumuyla dikkat çekiyor. Ahlat '
          'ilçesindeki Türk-İslam mezarlığında yaklaşık 8 bin mezar taşı bulunuyor ve bu bölge, UNESCO nun dünya mirası listesine dahil olması beklenen'
          ' önemli bir alan olarak Selçuklulardan Bitlis’e kalan en değerli miraslardan biri olarak kabul ediliyor. Taşlardaki ince işçilik ve '
          'kabartmalı bitki motifleri, bölgenin tarihsel değerini artırırken, Selçuklu döneminin önde gelen isimlerine ait anıtsal mezarlar da burada '
          'yer alıyor. 200 dönümlük geniş bir alan üzerine kurulu olan Ahlat Mezarlığı, Türk-İslam dünyasının en büyük mezarlıklarından biri olarak'
          ' "Kubbet-ül İslam" adıyla da anılıyor.'
    },
    {
      'isim': 'Ahlat Müzesi',
      'gorsel':
          'https://upload.wikimedia.org/wikipedia/commons/thumb/1/19/Bitlis_Ahlat_Müzesi.jpg/2560px-Bitlis_Ahlat_Müzesi.jpg',
      'bilgi': 'Ahlat ilçesine geldiğinde Ahlat Müzesini mutlaka ziyaret etmelisin. İlçenin tek müzesi olan Ahlat Müzesi, Urartu Döneminden Osmanlı '
          'Dönemi ne kadar uzanan geniş bir tarih yolculuğu sunuyor. Müze içinde, 4 bin yıl öncesine ait kaplar gibi etkileyici eserleri görebilirsin. '
          'Ayrıca, son yıllarda Çifte Hamam ve Ulu Camii gibi tarihi mekanlarda yapılan kazılardan çıkan eserler de müzede sergileniyor. 1971 yılında hizmete '
          'açılan Ahlat Müzesi, Kültür ve Turizm Bakanlığı’nın desteğiyle modernize edilerek 2014 yılında yeniden açıldı. Yeni haliyle, Bahçe, Fuaye, Kentsel '
          'Bellek ve Arkeolojik olmak üzere 4 ana bölümden oluşan müze, zengin koleksiyonu ile ziyaretçilerine tarih dolu bir deneyim sunuyor.'
    },
    {
      'isim': 'Nemrut Çiftkaya Kayak Merkezi',
      'gorsel':
          'https://kayaksever.com/storaje/2016/11/kis-turizmi-bitlis-nemrut-kayak-merkezi-kayaksever.jpg',
      'bilgi': 'Nemrut Çiftkaya Kayak Merkezi, bazen "Nemrut Kayak Merkezi" olarak da adlandırılmaktadır ve şehir merkezine oldukça yakın bir konumda'
          ' bulunması sayesinde kolayca ziyaret edilebilir. Her seviyeden kayak tutkununa hitap eden bu merkez, farklı zorluk seviyelerine sahip kayak '
          'parkurlarıyla dikkat çekiyor. Kayak yapmayı bilmeyenler için temel eğitimler sunan eğitmenler de mevcut. Kar teleferiği, seni kısa sürede zirveye '
          'taşıyarak unutulmaz bir deneyim yaşamanı sağlar. Kış turizmine önemli bir katkı sunan Nemrut Çiftkaya Kayak Merkezi, konaklama imkanı sunan'
          'pansiyonlar ve özel işletme tesisleriyle de dikkat çekiyor. Tatvan ilçe merkezine sadece 8 km mesafede bulunan merkezin zirvesinden, Nemrut Krater '
          'Gölünün büyüleyici manzarasını izleyebilirsin.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiBitlis(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiBitlis extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiBitlis(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiBitlis extends StatelessWidget {
  const YemekSayfasiBitlis({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Corti Aşı',
      'gorsel':
          'https://www.gurmerehberi.com/wp-content/uploads/2021/03/corti-asi.jpeg',
      'yemekBilgisi': 'Corti aşı, Bitlis’in akşam yemeklerinde sıkça karşılaşılan ve yöre halkı tarafından çok sevilen ana yemeklerden biridir. '
          'Bu yemek, mutlaka kemikli et ile hazırlanır, çünkü Anadolu kültüründe kemikli etin yemeğe kattığı lezzet tartışmasız kabul edilen bir '
          'gerçektir. Corti aşı, pişirilen kıvamına göre farklı şekillerde tüketilebilir; eğer kıvamı koyu olursa ana yemek, daha duru olursa çorba'
          ' olarak kabul edilir. Bu farklı sunum şekli, turistler tarafından ilginç bir özellik olarak karşılanmaktadır. Kemikli et ve buğday benzeri '
          'besinlerle yapılan bu yemek, akşam sofralarına lezzet katar. Ancak yemeğin hangi şekilde sunulacağı tamamen aşçının tercihlerine bağlıdır. '
          'Ayrıca, üzerine eklenen nane ile corti aşı daha da lezzetli hale gelir.',
    },
    {
      'isim': 'Bitlis Büryanı',
      'gorsel':
          'https://www.turkilleri.com/wp-content/uploads/2017/12/buryan.jpg',
      'yemekBilgisi': 'Büryan, Bitlis’in yöresel lezzetlerinden biri olup, bu bölgede tadılabilecek enfes bir yemektir. Onu bu kadar özel kılan ise'
          ' yöre halkının evlerinde bulunan tandırlarda pişiyor olmasıdır. Restoranlarda yediğiniz kebaplara benzer bir sunum şekli olsa da, tandırda '
          'pişmiş kuzu eti ve ekmekle yapılan Büryan, bambaşka bir lezzet deneyimi sunar. Büryan genellikle Ramazan ayında yapılsa da yılın diğer'
          ' dönemlerinde de sofralarda yerini alır. Yöre halkı, bu yemeği tandırda pişen kuzu etiyle hazırlar ve bu etin lezzeti, evde pişirilen kuzu '
          'etinden çok daha farklı ve derin bir tat sunar. Büryan, sadece bölgeye özgü olduğu için, bu deneyimi başka bir yerde yaşamak pek mümkün'
          ' değildir. Hem yöre halkı hem de turistler tarafından severek tüketilen Büryan, tek porsiyonuyla bile insanı doyuran bir lezzettir.',
    },
    {
      'isim': 'Katıklı Dolma',
      'gorsel': 'https://i.ytimg.com/vi/DWuqXiLjbaM/maxresdefault.jpg',
      'yemekBilgisi': 'Kabak ve dolma severlerin vazgeçilmezi olan katıklı dolma, Bitlis’in eşsiz lezzetlerinden biridir. Bu yemeği deneyimlemeden'
          ' önce mutlaka usta bir aşçının ellerinden yapıldığına emin olun, çünkü kabak dolması o kadar lezzetlidir ki, bir kez tattığınızda bir '
          'daha vazgeçmek istemezsiniz. Kabaklar halka halka kesilir, içleri boşaltılır ve lezzetli harçla doldurulur, ortaya çıkan sonuç ise gerçekten'
          ' enfes bir tat sunar. Bir oturuşta iki kabak dolmasını kolayca yiyebilirsiniz. Katıklı dolma deneyimini daha da unutulmaz kılan şey ise, '
          'üzerine eklenen sarımsaklı yoğurt ve baharatlı salçalı sostur. Sarımsaklı yoğurdun neredeyse her yemeğe yakıştığı bir gerçek olsa da, '
          'katıklı dolma ile buluştuğunda ortaya çıkan lezzet tam bir yöresel şaheser olur. İç harcının hazırlanmasından pişirilmesine kadar her '
          'aşamada özenle hazırlanan bu yemek, Bitlis’in en özel tatlarından biridir.',
    },
    {
      'isim': 'Ciğer Taplaması',
      'gorsel':
          'https://imgrosetta.mynet.com.tr/file/11813498/11813498-1200xauto.jpg',
      'yemekBilgisi': 'Ciğer taplaması, Bitlis’in en sevilen et yemeklerinden biridir ve özellikle ciğer severlerin vazgeçilmezi olarak öne çıkar. '
          'İçerdiği köftelik bulgurla farklı bir dokunuş kazanır, bu da yemeği daha lezzetli kılar. Genellikle yanında pirinç pilavı ile servis edilir.'
          ' Yöresel olarak, ciğer taplaması için mutlaka koyun ciğeri kullanılır ve pişirme yöntemi de yöreye özgüdür. Hem tadı hem de görüntüsüyle,'
          ' geleneksel lezzetleri sevenlerin damaklarında unutulmaz bir iz bırakır. Yedikçe yiyesi gelen bu lezzet, Bitlis’teki pek çok restoranda '
          'menülerde yer alır ve kolayca bulunabilir. Eğer yolunuz Bitlis’e düşerse, ciğer taplamasını tatmadan geçmemenizi tavsiye ederim. '
          'Şimdiden afiyet olsun!',
    },
    {
      'isim': 'Şeker Helvası',
      'gorsel':
          'https://blog.biletbayi.com/wp-content/uploads/2017/07/seker-helvasi.jpg',
      'yemekBilgisi': 'Bitlis şeker helvası, yöresel tatlılar arasında kendine has lezzetiyle öne çıkar. Yapımında şeker, un, tereyağı ve su gibi '
          'temel malzemeler kullanılır, ancak asıl farkı kullanılan teknik ve orijinal tarifidir. Şeker helvası, genellikle kaynar su ve şekerin'
          ' karıştırılmasıyla başlar ve ardından tereyağı ve un eklenerek karıştırılmaya devam edilir. Karışım, kısık ateşte pişirilerek yoğun kıvamlı, '
          'hafif sert ve lezzetli bir tatlı haline gelir. Bitlis şeker helvasının en önemli özelliklerinden biri, hazırlık sürecindeki ustalıktır;'
          ' bu nedenle helva, tatlı ve yoğun kıvamı ile bilinir. Genellikle özel günlerde, misafirliklerde ve bayramlarda yapılan bu tatlı, Bitlis’in '
          'geleneksel mutfağında önemli bir yere sahiptir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiBitlis(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiBitlis extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiBitlis({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class BoluSayfasi extends StatefulWidget {
  const BoluSayfasi({super.key});

  @override
  _BoluSayfasiState createState() => _BoluSayfasiState();
}

class _BoluSayfasiState extends State<BoluSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Bolu',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Bolu')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Bolu')) {
                provider.removeFavoriSehir('Bolu');
              } else {
                provider.addFavoriSehir('Bolu');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Bolu')
                        ? 'Bolu favorilere eklendi!'
                        : 'Bolu favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/0f/b0/e9/fb/photo3jpg.jpg?w=1200&h=1200&s=1',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Bolu, Türkiye\'nin Karadeniz bölgesinde yer alan, doğal güzellikleriyle ünlü bir şehirdir. '
                    'Abant Gölü ve Yedigöller Milli Parkı, Bolu\'yu ziyaret edenlerin gözde mekanlarıdır. '
                    'Ayrıca, Bolu mutfağı da lezzetli yöresel yemekleriyle ünlüdür. Doğa yürüyüşleri ve kampçılık için ideal bir yerdir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiBolu(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiBolu(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Bolu'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiBolu extends StatelessWidget {
  const YerSayfasiBolu({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Gölcük Tabiat Parkı',
      'gorsel':
          'https://dynamic-media-cdn.tripadvisor.com/media/photo-o/13/0f/28/ef/misafirhane.jpg?w=1200&h=-1&s=1',
      'bilgi': 'Bolu merkeze sadece 13 kilometre uzaklıkta bulunan Gölcük Tabiat Parkı, Türkiye nin en bilinen doğa kaçış alanlarından biridir. '
          'Yapay olarak oluşturulmuş Gölcük Gölü, deniz seviyesinden 1217 metre yükseklikte yer alırken, etrafını saran kayın ve gürgen ağaçlarıyla'
          ' büyüleyici bir manzara sunar. Ahşap konuk evleri, bungalov oteller, kır bahçeleri, kamp alanları ve restoranlarla donatılmış bu park, '
          'doğa yürüyüşçüleri için çeşitli parkurlarla dikkat çeker. Küçük gölde kano gezileri yapabilir, bisiklet turlarına katılabilir ya da balık '
          'avlama etkinliklerine katılabilirsiniz. Özellikle kış aylarında beyaz örtüsüyle kartpostallardan fırlamış bir görünüme sahip olan Gölcük'
          ' Tabiat Parkı, yılın her mevsimi fotoğraf safarilerine ev sahipliği yapmaktadır.'
    },
    {
      'isim': 'Bolu Yıldırım Beyazıt Camii',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/bolu-beyazit-camii-37198.webp',
      'bilgi': 'Bolu merkezinde, Büyükcami Mahallesinde yer alan ve Yıldırım Beyazıt tarafından 1382 yılında yaptırılan Yıldırım Beyazıt Camii, halk'
          ' arasında Büyük Camii olarak da bilinir. Hem Bolunun simgelerinden biri hem de en eski tarihi yapılarından biri olan bu cami, yanında bir '
          'medrese ve kütüphane ile zenginleştirilmiştir. İlk olarak ahşap olarak inşa edilen cami, 1800’lü yıllarda çıkan büyük bir yangından zarar görmüş '
          've 1899 yılında aslına uygun şekilde kesme taşlarla yeniden inşa edilmiştir. Tek kubbeli ve geleneksel Osmanlı mimarisiyle dikkat çeken cami,'
          'Boluda seyahat ederken mutlaka ziyaret edilmesi gereken bir yer olarak öne çıkmaktadır. Caminin iç mekanındaki ince işçilik ve tarih kokan'
          ' atmosferi, ziyaretçilere benzersiz bir deneyim sunar. Ayrıca, caminin etrafındaki tarihi yapılar ve çevresi, bölgenin kültürel mirasını daha '
          'derinlemesine keşfetme fırsatı sağlar.'
    },
    {
      'isim': 'At Yaylası',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/at-yaylasi-37195.webp',
      'bilgi': 'Bolu, yemyeşil yaylalarıyla ünlü olup, yayla turizmini sevenler için harika bir rotadır. Özellikle, Anadolu’ya özgü yılkı atlarıyla'
          ' tanınan At Yaylası, adını bu eşsiz atlardan alır. Bolu’ya sadece 10 kilometre uzaklıkta bulunan ve kolayca ulaşılabilen bu yayla, yaz '
          'aylarında hem yerli halk hem de turistler tarafından sıkça tercih edilmektedir. Deniz seviyesinden 1250 metre yükseklikte yer alan'
          ' At Yaylası, 7 farklı yayladan oluşur ve yüzlerce yıl boyunca Osmanlı sarayına at yetiştirmek için kullanıldığı bilinmektedir. '
          'Bugün de bölge, at yetiştiriciliği ve endemik bitki türleriyle dikkat çeker. Yılkı atlarının fotoğraflarını çekmek isteyenler için '
          'düzenlenen fotoğraf safarileri ve meyve ile kiraz bahçelerinin arasında uzanan yürüyüş parkurları, ziyaretçilerin ilgisini çeker. '
          'Doğal güzelliklerin içinde huzurlu bir kaçamak yapmak isteyenler için At Yaylası, eşsiz bir deneyim sunuyor.'
    },
    {
      'isim': 'Göynük Zafer Kulesi',
      'gorsel':
          'https://goynuk.meb.gov.tr/meb_iys_dosyalar/2021_12/24142558_goynuk1-1.jpg',
      'bilgi': '1922 yılında Sakarya Meydan Muharebesi sonrasında inşa edilen Göynük Zafer Kulesi, Bolu’ya 114 kilometre uzaklıkta, Göynük ilçesinde '
          'yer alıyor. Şehrin simgelerinden biri haline gelen bu tarihi kale, altıgen külahla örülü üç katlı yapısı ve bölgeye hakim yüksek tepeye '
          'konumlandırılmasıyla dikkat çekiyor. Göynük Zafer Kulesi’nin zirvesine çıkarak, Göynük’ün tarihi evlerinin ve doğal güzelliklerinin eşsiz '
          'fotoğraflarını çekebilirsiniz. Ayrıca, bu etkileyici yapının mimari özelliklerini yakından inceleyebilir ve kulağa çarpıcı gelen bu yapının'
          ' tarihine dair daha fazla bilgi edinebilirsiniz. Kulenin etrafındaki çevre düzenlemeleri, ziyaretçilere hem dinlenme hem de bölgenin tarihi '
          'atmosferini keşfetme fırsatı sunuyor. Ziyaretiniz sırasında, gökyüzüyle birleşen zafer kulesinin manzarası, unutulmaz anlar biriktirmenize '
          'olanak tanıyacaktır.'
    },
    {
      'isim': 'Akkaya Travertenleri',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/1110x740/5f0c0d6c7152d816181e8f92.jpg',
      'bilgi': 'Bolu’ya 10 kilometre mesafede bulunan Akyaka Travertenleri, az rastlanır güzelliğiyle her yıl binlerce turistin ilgisini çekiyor.'
          ' 250 metre uzunluğundaki bembeyaz traverten teraslarıyla adeta bir kartpostal gibi görünen bu doğal harika, ziyaretçilerine büyüleyici'
          ' bir manzara sunuyor. Yıl boyunca ziyaret edilebilen Akyaka Travertenleri’nde yaz aylarında göletlerinde yüzebilir, seyir teraslarından '
          'eşsiz fotoğraflar çekebilir ve kır bahçelerinde yöresel yemeklerin tadını çıkararak manzaranın keyfini sürebilirsiniz. Ayrıca, bu bölge'
          ' doğal zenginlikleriyle birlikte dinlendirici bir atmosfer sunarak, doğa yürüyüşleri yapmak ve huzurlu bir gün geçirmek isteyenler için '
          'ideal bir kaçış noktası oluşturuyor. Sessizliği ve görsel zenginliğiyle Akyaka Travertenleri, doğa severlerin mutlaka keşfetmesi gereken '
          'bir mekan.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiBolu(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiBolu extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiBolu(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiBolu extends StatelessWidget {
  const YemekSayfasiBolu({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Yayla Çorbası',
      'gorsel':
          'https://d2lswn7b0fl4u2.cloudfront.net/photos/pg-turkish-yogurt-soup-1682610391.jpg',
      'yemekBilgisi': 'Yemeklerden önce mideyi rahatlatan ve hazmı kolaylaştıran çorbalar, kış aylarında iç ısıtan özellikleriyle tercih edilir. '
          'Yayla çorbası, Türk mutfağının sevilen lezzetlerinden biri olmasına rağmen, Bolu usulü yapılan yayla çorbası hem lezzet hem de sunum '
          'açısından fark yaratır. Klasik yayla çorbasından farklı olarak, Bolu usulü yayla çorbasında dereotu ve maydanoz da kullanılır. Bunun yanı '
          'sıra, pirinç, yoğurt, un ve yumurtanın karıştırılarak hazırlandığı bu çorba, üzerine yakılan baharat ve yağla servis edilir. İçindeki'
          ' malzemeler, çorbanın içimini yumuşatırken damakta lezzet bırakacak özellikler taşır. Özellikle ana yemek öncesinde tercih edebileceğiniz '
          'yayla çorbası, hem mideyi rahatlatır hem de harika bir tat deneyimi sunar.',
    },
    {
      'isim': 'Abant Kebabı',
      'gorsel':
          'https://cdn.yemek.com/mnresize/940/940/uploads/2017/04/abant-kebabi-tarifi.jpg',
      'yemekBilgisi': 'Bolu’nun en meşhur yemeklerinden biri olan Abant kebabı, geleneksel kebap tariflerine yeni bir soluk getiriyor. Kızarmış ekmek ve '
          'közlenmiş patlıcanla hazırlanan bu lezzet, vejetaryen beslenenler için de alternatif sunuyor. Ancak, orijinal tarifte etli harç kullanıldığını '
          'belirtmekte fayda var. Abant kebabını hazırlamak için öncelikle bostan patlıcanları közleniyor, ardından etli harç ile doldurulup pişirilmeye '
          ' gönderiliyor. Üzerine erimiş kaşar peyniri eklenerek servis edilen bu doyurucu yemek, ismini Abant bölgesinde yapılmasından alıyor. Abant kebabını, '
          'Boludaki çoğu restoranda tadabilir ve bu benzersiz lezzeti keşfedebilirsiniz. Hem et severlere hem de vejetaryenlere hitap eden bu yemek, '
          'Bolu seyahatinizin vazgeçilmez bir parçası olabilir.',
    },
    {
      'isim': 'Mengen Pilavı',
      'gorsel':
          'https://cdn.yemek.com/mnresize/1250/833/uploads/2023/01/mengen-pilavi-sunum-yemekcom.jpg',
      'yemekBilgisi': 'Türkiye’nin gastronomik açıdan en önemli ilçelerinden biri olan Mengen, yetiştirdiği ünlü aşçılar ve yöresel lezzetleri ile '
          'tanınmaktadır. Mengen pilavı, ilk olarak bu ilçede yapılmış olsa da günümüzde Bolu’nun en çok tercih edilen pilavlarından biri haline'
          ' gelmiştir. İçeriğinde kuşbaşı et ve mantar bulunan Mengen pilavı, dolmalık fıstık, ceviz ve badem gibi ek malzemelerle daha da zenginleşir.'
          ' Klasik pilavlardan daha aromatik ve lezzetli olan bu pilav, kuşbaşı et ile zenginleşerek genellikle ana yemek olarak tercih edilir. '
          'Yanında ayran ile servis edilen Mengen pilavı, hem öğle hem de akşam yemeklerinin vazgeçilmez lezzetlerinden biridir.',
    },
    {
      'isim': 'Çantıklı Pide',
      'gorsel':
          'https://assets.tmecosys.com/image/upload/t_web767x639/img/recipe/ras/Assets/87ecfb3768fe6500eb5f6b41bc825554/Derivates/3c9709786de5d8b950f57b04dd18fd56aa96a981.jpg',
      'yemekBilgisi': 'Boluya ait olan çantıklı pide, bol mayalı hamurun elde açılmasıyla yapılan geleneksel bir lezzettir. İç harcı, kıyma, domates'
          ' ve soğan karışımından oluşur ve bu harç hamurun ortasına yerleştirildikten sonra fırına verilir. Fırında pişen pide, enfes kokusu ve '
          'lezzetiyle damakları şenlendirir.Yöre halkı tarafından evlerde de sıklıkla hazırlanan çantıklı pideyi denemek isteyenler, Boludaki farklı'
          ' fırınlar veya pastanelere uğrayarak bu lezzeti tadabilirler. Sabah kahvaltısından öğle yemeğine kadar her öğün için tercih edilen çantıklı '
          'pide, sevilen ve vazgeçilmez bir seçenek olarak şehrin mutfak kültüründe önemli bir yer tutmaktadır.',
    },
    {
      'isim': 'Kara Kabak Tatlısı',
      'gorsel':
          'https://cdn.yemek.com/mnresize/1250/833/uploads/2014/11/bal-kabagi-tatlisi-yemekcom.jpg',
      'yemekBilgisi': 'Bolu nun en sevilen tatlılarından biri olan kara kabak tatlısı, şehrin mutfağında dikkat çeken eşsiz bir lezzettir. Kara kabak,'
          ' klasik kabaklardan farklı bir çeşit olup, dış kabukları soyulmadan yalnızca içi boşaltılır. Üçgen şeklinde doğranarak, kabuklar altta kalacak '
          'şekilde tencereye yerleştirilen kara kabaklar, toz şeker ve su ile kısık ateşte pişirilir. Pişirme işlemi tamamlandıktan sonra tatlının daha '
          'lezzetli olabilmesi için en az bir gün dinlendirilmesi gerekir. Boludaki esnaf lokantalarında ve yöresel restoranlarda sıkça karşılaşabileceğiniz '
          'bu tatlı, hafif yapısı ve eşsiz tadı ile hem yaz hem de kış aylarında tercih edilen bir seçenek olmuştur.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiBolu(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiBolu extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiBolu({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class BurdurSayfasi extends StatefulWidget {
  const BurdurSayfasi({super.key});

  @override
  _BurdurSayfasiState createState() => _BurdurSayfasiState();
}

class _BurdurSayfasiState extends State<BurdurSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Burdur',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Burdur')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Burdur')) {
                provider.removeFavoriSehir('Burdur');
              } else {
                provider.addFavoriSehir('Burdur');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Burdur')
                        ? 'Burdur favorilere eklendi!'
                        : 'Burdur favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1362949310/tr/fotoğraf/residential-districts-of-burdur-and-great-mosque-on-winter-evening.jpg?s=612x612&w=0&k=20&c=QzuMB-Nus2WEvAKcCq4k1jjqIL6r7Yc5YeEgyRQAd-M=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Burdur, Türkiye\'nin güneybatısında yer alan ve doğal güzellikleriyle bilinen bir şehirdir. '
                    'Salda Gölü, eşsiz turkuaz rengiyle ziyaretçilerin ilgisini çeker. '
                    'Burdur Gölü ve çevresi, kuş gözlemi için ideal alanlar sunar. '
                    'Ayrıca, Burdur\'un zengin tarihi ve yöresel lezzetleri de görülmeye değerdir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiBurdur(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiBurdur(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Burdur'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiBurdur extends StatelessWidget {
  const YerSayfasiBurdur({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Salda Gölü',
      'gorsel':
          'https://www.bizevdeyokuz.com/wp-content/uploads/Salda-Golu-7.jpg',
      'bilgi': 'Burdur’un Yeşilova ilçesinde yer alan ve Türkiye’nin Maldivleri olarak anılan Salda Gölü, beyaz kumsalı ve turkuaz renkli suyuyla '
          'eşsiz bir doğa harikasıdır. Türkiye’nin en derin tatlı su göllerinden biri olan Salda, yaklaşık 184 metre derinliğe sahiptir ve çevresindeki '
          'magnezyum yüklü toprak sayesinde dünya üzerinde Mars yüzeyine benzer özellikler taşıyan nadir yerlerden biridir. Çamurunun cilt sağlığına'
          ' iyi geldiği düşünülen göl, aynı zamanda sit alanı ilan edilmiş olup koruma altındadır. Doğa yürüyüşleri, kamp ve yüzme gibi aktiviteler'
          ' için popüler olan Salda Gölü, sakin atmosferiyle ziyaretçilerine huzur dolu bir deneyim sunar.'
    },
    {
      'isim': 'Burdur Arkeoloji Müzesi',
      'gorsel':
          'https://www.kulturportali.gov.tr/contents/images/antoninler%20çeşmesi%20heykelleri.jpg',
      'bilgi': 'Burdur Arkeoloji Müzesi, bölgenin zengin tarihini sergileyen ve özellikle Sagalassos antik kentinden çıkarılan eserlerle dikkat çeken '
          'önemli bir müzedir. 1969 yılında açılan ve Burdur şehir merkezinde yer alan müzede, Paleolitik dönemden Bizans dönemine kadar uzanan geniş'
          ' bir koleksiyon bulunmaktadır. Özellikle Sagalassos’tan getirilen, Roma dönemine ait etkileyici İmparator Hadrian ve İmparator Marcus '
          'Aurelius heykelleri müzenin en değerli eserleri arasında yer alır. Ayrıca, Hacılar Höyüğü ve Kuruçay Höyüğü’nden elde edilen neolitik ve '
          'kalkolitik dönem buluntuları da müzede sergilenmektedir. Arkeoloji meraklıları için bir hazine niteliğindeki Burdur Arkeoloji Müzesi,'
          ' Anadolu’nun tarihsel zenginliğini keşfetmek için mutlaka görülmesi gereken yerlerden biridir.'
    },
    {
      'isim': 'Sagalassos Antik Kent',
      'gorsel':
          'https://www.mergezturizm.com/File_Uploadx/Sayfa/buyuk/mergez-turizm-sagalassos-antik-kenti-680318.JPG',
      'bilgi': 'agalassos Antik Kenti, Burdur’un Ağlasun ilçesinde, Toros Dağları’nın eteklerinde yer alan ve tarihi M.Ö. 3000’lere kadar uzanan'
          ' önemli bir antik yerleşimdir. Roma İmparatorluğu döneminde Pisidya bölgesinin başkenti olan Sagalassos, görkemli mimarisi ve doğal '
          'güzellikleriyle büyüleyicidir. Kent, özellikle Antoninler Çeşmesi, agorası, tiyatrosu ve hamam yapıları ile dikkat çekmektedir. '
          'Antik kentteki en etkileyici eserlerden biri, mermerden yapılmış İmparator Hadrian ve Marcus Aurelius heykelleridir. UNESCO Dünya Mirası'
          ' Geçici Listesi’nde yer alan Sagalassos, zengin tarihini doğa ile birleştirerek ziyaretçilere eşsiz bir deneyim sunar.'
    },
    {
      'isim': 'İncir Han Kervansarayı',
      'gorsel':
          'https://img.aydinlik.com.tr/rcman/Cw800h420q95gc/storage/files/images/2023/03/26/incirhankervansarayi1-800x420-cOlK.jpg',
      'bilgi': 'İncir Han Kervansarayı, Burdur’un Bucak ilçesine bağlı İncirhan Köyü’nde yer alan, Anadolu Selçuklu dönemine ait tarihi bir yapıdır.'
          ' 1238-1239 yıllarında Gıyaseddin Keyhüsrev zamanında inşa edilen kervansaray, İpek Yolu üzerinde stratejik bir konuma sahiptir. Düzgün'
          ' kesme taşlarla yapılmış etkileyici mimarisi, bir avlu ve kapalı mekânlardan oluşur. Avlusu açık hava dinlenme alanı olarak kullanılmış, '
          'kapalı kısmı ise kış aylarında konaklama için tasarlanmıştır. İncir Han, üzerindeki geometrik ve bitkisel motiflerle bezeli taş'
          ' süslemeleriyle dikkat çeker ve bölgedeki Selçuklu kervansaraylarının en iyi korunmuş örneklerinden biridir. Bu tarihi yapı, Burdur’un '
          'zengin kültürel mirasının önemli bir parçasıdır.'
    },
    {
      'isim': 'Kibyra Antik Kenti',
      'gorsel':
          'https://pandaalu.com.tr/uploads/images/haberler/large/1701933205_kibyra-antik-kenti---burdur.jpg?1701933205',
      'bilgi': 'Kibyra Antik Kenti, Burdurun Gölhisar ilçesinde yer alan ve Likya, Pisidya, Frigya ve Karya bölgelerinin kesişim noktasında bulunan'
          ' önemli bir antik yerleşimdir. MÖ 3. yüzyıla tarihlenen kent, özellikle gelişmiş hukuk sistemi, görkemli yapıları ve sanatsal mozaikleriyle'
          ' tanınır. Kibyra, dönemin önemli bir ticaret ve kültür merkezi olup, Roma döneminde ekonomik ve askeri açıdan büyük bir önem kazanmıştır. '
          'Kentte yer alan odeon, akustik özellikleri ve Medusa mozaikleriyle dikkat çekerken, stadyumu, agorası, tiyatrosu ve hamam kompleksi de'
          ' etkileyici bir mimari sunar. Kibyra Antik Kenti, UNESCO Dünya Mirası Geçici Listesi’nde yer almakta ve tarih severler için eşsiz bir'
          ' deneyim sunmaktadır.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiBurdur(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiBurdur extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiBurdur(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiBurdur extends StatelessWidget {
  const YemekSayfasiBurdur({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Tavuklu Düğün Çorbası',
      'gorsel':
          'https://www.fabiofood.com/wp-content/uploads/2019/02/Terbiyeli-Tavuklu-Düğün-Çorbası.jpg',
      'yemekBilgisi': 'Burdur mutfağının özel lezzetlerinden biri olan tavuklu düğün çorbası, adını genellikle düğün ve özel davetlerde yapılmasından'
          ' almıştır. Tavuk eti ve buğdayın ana malzemeleri oluşturduğu çorba, zengin ve besleyici içeriğiyle ön plana çıkar. Haşlanan tavuk etleri '
          'didiklenerek buğdayla birlikte pişirilir ve yoğurtlu bir terbiye ile kıvam kazandırılır. Üzerine eritilmiş tereyağı ve nane gezdirilerek'
          ' servis edilen çorba, hem lezzeti hem de hafifliğiyle damaklarda unutulmaz bir tat bırakır. Burdur sofralarında sıklıkla yer bulan tavuklu '
          'düğün çorbası, yöresel yemek kültürünün önemli bir temsilcisi olarak dikkat çeker.',
    },
    {
      'isim': 'Testi Kebabı',
      'gorsel':
          'https://www.biletara.com/blog/wp-content/uploads/2021/03/testi-kebabi-min.png',
      'yemekBilgisi': 'Burdur sofralarının vazgeçilmezi ve zengin akşam yemeklerinin baş tacı olan testi kebabı, ustalık gerektiren bir lezzettir. '
          'Türkiye’nin farklı bölgelerinde de yapılan bu yemek, Burdur usulünde davarın kaburga kısmından yapılması ve kemik üzerine oturtulan özel '
          'tasarlanmış bir testi içinde yaklaşık 3 saat boyunca pişmesiyle diğerlerinden ayrılır. Görüntüsü, kokusu ve lezzetiyle iştah açan testi '
          'kebabı, genellikle dana eti ile hazırlanır ve uzun pişirme süresi nedeniyle çoğunlukla akşam yemeklerinde tercih edilir. Etin yanı sıra '
          'biber ve domates gibi sebzelerle zenginleştirilen bu özel kebap, Burdur mutfağının en dikkat çeken yemeklerinden biridir.',
    },
    {
      'isim': 'Burdur Şiş',
      'gorsel':
          'https://upload.wikimedia.org/wikipedia/commons/e/e4/Burdur_şiş_%2823955085040%29.jpg',
      'yemekBilgisi': 'Burdur’un tescilli lezzetlerinden biri olan Burdur şiş, bölgenin dağlarında serbestçe otlayan kuzu veya keçi etleriyle'
          ' hazırlanan, yöresel bir lezzettir. Diğer köftelerden en büyük farkı, içinde yalnızca kıyma bulunması ve hiçbir katkı maddesi '
          'kullanılmamasıdır. Soğan, salça veya baharat eklenmeden tamamen doğal kıymayla hazırlanan Burdur şiş, yoğun ve saf bir lezzet sunar.'
          ' Genellikle beyaz buğday unundan yapılan pidelerle servis edilen bu eşsiz tat, tercihe göre bulgur pilavı eşliğinde de tüketilebilir. '
          'Bölge halkı tarafından özellikle akşam yemeklerinde tercih edilen Burdur şiş, sade ama doyurucu yapısıyla sofraların vazgeçilmezlerinden '
          'biridir.',
    },
    {
      'isim': 'Peynirli Pide',
      'gorsel':
          'https://blog.biletbayi.com/wp-content/uploads/2017/08/burdur-usulü-peynirli-pide.jpg',
      'yemekBilgisi': 'Peynirli pide, Türkiye’nin farklı bölgelerinde sıklıkla karşınıza çıkabilir, ancak Burdur usulü peynirli pide, bu klasik'
          ' lezzete bambaşka bir boyut kazandırıyor. Burdur’un en önemli hamur işi lezzetlerinden biri olan peynirli pide, elle açılan ince hamurla '
          'hazırlanır ve harcında genellikle beyaz peynir ile maydanoz bulunur. Odun ateşiyle ısınan fırınlarda pişirilen bu pide, kokusu, görüntüsü '
          've damakta bıraktığı eşsiz tat ile dikkat çeker. Sabah kahvaltısından akşam yemeklerine kadar günün her saatinde tercih edilen peynirli'
          ' pideyi, Burdur’un hemen her köşesinde bulmak mümkündür.',
    },
    {
      'isim': 'İncir Dolması',
      'gorsel':
          'https://cdn.kisikates.com.tr/image-cache/cache/recipe_main_image_large/https---cdn.kisikates.com.tr/recipe-media/276504c3dc705db885f0d091c79e7255a38165be.jpeg',
      'yemekBilgisi': 'Burdur’un yöresel tatlılarının başında gelen incir dolması, hem meyveli hem de yoğun lezzetiyle damakları şenlendirir. Suda '
          'yumuşatılan kuru incirlerin içerisine çekilmiş ceviz doldurulmasıyla hazırlanan bu tatlı, üzerine sür, su ve tereyağı eklenerek tencerede'
          ' pişirilir. Talebe göre kaymak veya pekmez eşliğinde de servis edilebilen incir dolması, hafif ama doyurucu yapısıyla öne çıkar. '
          'Görüntüsü kadar tadıyla da dikkat çeken bu lezzet, Burdur’da yöresel yemek sunan restoranlarda sıklıkla bulunur ve özel misafirler'
          ' için ya da zengin akşam sofralarını süslemek amacıyla tercih edilir. Yaz-kış severek tüketilen incir dolması, yörenin en beğenilen'
          ' tatlılarından biridir.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiBurdur(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiBurdur extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiBurdur({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class BursaSayfasi extends StatefulWidget {
  const BursaSayfasi({super.key});

  @override
  _BursaSayfasiState createState() => _BursaSayfasiState();
}

class _BursaSayfasiState extends State<BursaSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Bursa',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Bursa')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Bursa')) {
                provider.removeFavoriSehir('Bursa');
              } else {
                provider.addFavoriSehir('Bursa');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Bursa')
                        ? 'Bursa favorilere eklendi!'
                        : 'Bursa favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1056315542/tr/fotoğraf/kayak-ve-snowboard-kış-resort-uludağ.jpg?s=612x612&w=0&k=20&c=2EJUVIWJpbspK0dyHhfZO17QHh_VmfmJuTIiqtlwhYw=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Bursa, Türkiye\'nin Marmara Bölgesi\'nde yer alan, tarihi zenginlikleri ve doğasıyla ünlü bir şehirdir. '
                    'Uludağ, kayak merkezleri ve zengin Osmanlı kültürü ile tanınır. Ayrıca, Bursa İskender Kebabı ve kestane şekeri ile ünlüdür.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiBursa(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiBursa(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Bursa'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiBursa extends StatelessWidget {
  const YerSayfasiBursa({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Bursa Ulu Camii',
      'gorsel':
          'https://www.gotobursa.com.tr/uploads/2021/01/dji_0034_large_1_large.jpg',
      'bilgi': 'Bursa denilince akla ilk gelen simge yapılardan biri olan Bursa Ulu Camii, Osmangazi ilçesi Ulucami Caddesi’nde, şehrin en çok ziyaret'
          ' edilen Hanlar Bölgesi’nde yer alıyor. 1400 yılında Yıldırım Beyazıt döneminde Niğbolu Zaferi’nin ardından inşa edilen ve 1855 depreminden '
          'sonra yenilenen bu görkemli cami, 20 kubbesi, 16 köşeli şadırvanı, 3.165 m² büyüklüğündeki iç alanını süsleyen çinileri, minyatürleri ve'
          ' ahşap oymalarıyla Osmanlı çok ayaklı cami mimarisinin en güzel örneklerinden biri kabul ediliyor. Kündekari tekniği ile yapılmış çiniler '
          've Osmanlı hat sanatının eşsiz eserlerini barındıran cami, Kâbe kapısını örten saf altınla süslü ipek örtünün sergilendiği kutsal bir mekan '
          'olarak yerli ve yabancı turistleri büyülüyor ve Bursa gezilerinin vazgeçilmez duraklarından biri olarak öne çıkıyor.'
    },
    {
      'isim': 'Yeşil Camii ve Yeşil Türbe',
      'gorsel': 'https://i.ytimg.com/vi/oPTHhb2n9Dc/maxresdefault.jpg',
      'bilgi': 'Osmanlı erken dönem mimarisinin en güzel örneklerinden biri olarak kabul edilen Yeşil Camii ve Yeşil Türbe, Bursa’nın merkezindeki '
          'Yeşil Camii semtinde, 1419 yılında Çelebi Sultan Mehmet döneminde inşa edilmiştir. Türkiye’deki nadir ters T planlı camilerden biri olan ve Türk'
          ' taş oymacılığı sanatı ile çini işçiliğinde mükemmellik düzeyine ulaşan Yeşil Camii, huzurlu atmosferiyle ziyaretçilerini büyülerken, özellikle'
          ' kutsal günler ve bayramlarda yoğun ilgi görmektedir. Bir zamanlar kubbeleri de çinilerle süslü olan bu eşsiz yapı, Türkiyenin en güzel mimari '
          'eserlerinden biri olarak Bursa’da mutlaka görülmesi gereken yerler arasındadır.'
    },
    {
      'isim': 'Bursa Atatürk Evi Müzesi',
      'gorsel':
          'https://www.dergibursa.com.tr/wp-content/uploads/2015/10/39-Çekirge-Caddesi-üzerindeki-Atatürk-Köşkü-Müzesi-2.jpg',
      'bilgi': 'Çekirge Caddesi üzerinde çam ağaçları arasında 19. yüzyıl sonlarında inşa edilen tarihi köşk, Atatürk’ün Bursa’da konakladığı yer'
          ' olarak ün kazanmış ve 1973 yılında Cumhuriyet’in 50. yılı anısına müzeye dönüştürülerek ziyarete açılmıştır. Ahşap mimarisiyle dikkat '
          'çeken bu iki katlı köşkün birinci katında 19. yüzyıl mobilyaları ve antikalarla döşenmiş dinlenme odası, ikinci katında ise çalışma ve'
          ' yatak odaları yer alıyor. Atatürk’ün Bursa ziyaretlerinde çekilen fotoğrafları, kişisel eşyaları, çarpıcı ahşap oymalı tavan süslemeleri '
          've orijinal dönem mobilyalarıyla Atatürk Evi Müzesi, Bursa’da sivil mimarinin en önemli örneklerinden biri olarak mutlaka görülmesi gereken '
          'yerlerden biridir. Merkezi konumu sayesinde kolaylıkla ulaşabilirsiniz.'
    },
    {
      'isim': 'Bursa Arkeoloji Müzesi',
      'gorsel':
          'https://europarkhotelbursa.com/storage/blog/bursaarkeoloji1.jpg',
      'bilgi': 'Osmangazi’deki Çekirge Caddesi üzerinde, Kültürpark içerisinde yer alan Bursa Arkeoloji Müzesi, 600.000’den fazla eseriyle ziyaretçilerini'
          ' M.Ö. 3000 yılından Bizans ve Osmanlı dönemine kadar uzanan bir tarihe yolculuğa davet ediyor. 1902 yılında kurulan ve Türkiye’nin en eski '
          'arkeoloji müzelerinden biri olan bu müze, Doğu Roma, Bizans ve Osmanlı dönemlerinden paha biçilemez tarihi eserlerin sergilendiği zengin bir'
          ' koleksiyona sahiptir. Taş eserler salonu, Doğu Roma ve Bizans dönemi salonu ile Üçpınar tümülüsü buluntuları salonu mutlaka görülmesi gereken'
          ' bölümler arasında yer alırken, binlerce yıllık taş tekerleklerden kişisel eşyalara ve Urartu uygarlığına ait Aktopraklık kazılarından elde'
          ' edilen kalıntılara kadar pek çok tarihi hazineye ev sahipliği yapmaktadır. Anadolu tarihine ilgi duyanların Bursa’da mutlaka ziyaret etmesi'
          ' gereken önemli bir duraktır.'
    },
    {
      'isim': 'İznik Gölü',
      'gorsel':
          'https://i20.haber7.net/resize/1280x720//haber/haber7/photos/2020/24/dogasi_plaji_ve_su_altindaki_tarihi_ile_iznik_golu_1591611887_8762.jpg',
      'bilgi': 'Bursa’nın en çok ziyaret edilen doğal güzelliklerinden biri olan İznik Gölü, Türkiye’nin 5. en büyük tatlı su gölü olarak büyüleyici'
          ' manzaralarıyla doğa severlerin vazgeçilmez adreslerinden biridir. 11 kilometre genişliğindeki gölde sazan, yayın ve gümüş balıkları bolca '
          'bulunduğundan balık avlama etkinlikleri için tercih edilirken, küçük balıkçı tekneleriyle gölde gezintiye çıkabilir ve huzurlu atmosferin '
          'tadını çıkarabilirsiniz. Yaz aylarında uçurtma sörfü, deniz paraşütü, kano ve yelken gibi su sporlarıyla keyifli vakit geçirebilir, göl '
          'çevresindeki yürüyüş parkurları, bisiklet yolları ve mesire alanlarında doğayla baş başa kalabilirsiniz. Çevrede yer alan balık restoranları,'
          ' çay bahçeleri ve kafelerde tatlı su balıklarının lezzetini deneyimleyebilir, çam ve çınar ağaçlarının altında sıralanan rengarenk balıkçı'
          ' teknelerinin fotoğraflarını çekebilirsiniz. Yazın temiz sularında yüzmek de İznik Gölü’nde yapabileceğiniz aktiviteler arasında yer alır.'
    },
    {
      'isim': 'Uluabat Kuş Cenneti',
      'gorsel':
          'https://i.neredekal.com/i/neredekal/75/800x600/60759ab0b33be6ad1467f020',
      'bilgi': 'Karacabey ilçesine yalnızca 14 km mesafede, 20 dönümlük bir alan üzerine kurulu Uluabat Kuş Cenneti, doğa severler ve çocuklu aileler '
          'için keyifli bir kaçış noktasıdır. Papağan, keklik, sülün ve tavus kuşu gibi pek çok kuş türünü yakından görebileceğiniz çiftliklere sahip '
          'olan bu doğal alan, özellikle ilkbahar ve sonbaharda sedir, limoni selvi ve ladin ağaçları arasında sunduğu rengarenk manzaralarıyla dikkat '
          'çeker. Kır bahçeleri, mesire alanları ve çocuk oyun alanlarıyla hem dinlenip hem eğlenebileceğiniz Uluabat Kuş Cenneti, sevimli kuşların'
          ' arasında geçirilecek unutulmaz bir gün için ideal bir yerdir.'
    },
    {
      'isim': 'Uludağ',
      'gorsel': 'https://kusadasitours.com.tr/images/tour/6976_b.jpg',
      'bilgi': 'Bursa merkeze 31 kilometre uzaklıkta, 2.543 metre yükseklikteki Uludağ Kayak Merkezi, Türkiye’nin en popüler kış turizmi noktalarından '
          'biridir. 5 yıldızlı otellerden bungalovlara kadar çeşitli konaklama seçenekleri sunan merkez, 11.338 hektarlık alanda yer alan 2 kilometrelik'
          ' pistleriyle her seviyeye uygun kayak ve snowboard deneyimi sağlar. Kayak eğitimleri, buz pateni, kar motosikleti gibi aktivitelerin yanı '
          'sıra düzenlenen kış festivalleriyle de dikkat çeker. Muhteşem doğası ve yürüyüş parkurlarıyla keyifli bir atmosfer sunan Uludağ, Bursa ve'
          ' dünya mutfaklarından lezzetler sunan restoranlarıyla unutulmaz bir kış tatili vadeder.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiBursa(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiBursa extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiBursa(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiBursa extends StatelessWidget {
  const YemekSayfasiBursa({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Muradiye Çorbası',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/750x422/5da02a130f25440eecc94b76.jpg',
      'yemekBilgisi': 'Bursa mutfağının en özel lezzetlerinden biri olan İskender Kebap, 1867 yılından bu yana şehrin simge yemeklerinden biridir. '
          'Geleneksel olarak kuzey etiyle hazırlanan bu eşsiz kebap, altına yerleştirilen sıcak pide ekmeği üzerine domates sosu, eritilmiş tereyağı'
          ' ve yoğurt eklenerek sunulur. Klasik dönerden farklı olarak, Uludağ kekiğiyle beslenen koçlardan elde edilen özel bir et kullanılır. '
          'Bu benzersiz tat, Bursa’yı ziyaret eden herkesin denemesi gereken gastronomik bir deneyim sunar.',
    },
    {
      'isim': 'İnegöl Köfte',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/750x422/5f11adbe67b0a806305b0773.jpg',
      'yemekBilgisi':
          'Bursa mutfağının özgün tatlarından biri olan İnegöl Köfte, yalnızca dana kaburga, kuzu eti, tuz, soğan ve karbonat kullanılarak'
              ' hazırlanır. Klasik köftelerden ayrılan en önemli özelliği, karbonat dışında hiçbir baharatın kullanılmaması ve içine yumurta ya da ekmek '
              'gibi bağlayıcı malzemelerin eklenmemesidir. Balkanlardan göç eden Türkler tarafından Bursa’ya kazandırıldığı düşünülen bu köfte, doğal'
              ' malzemeleri ve sade lezzetiyle dikkat çeker.',
    },
    {
      'isim': 'İskender Kebap',
      'gorsel':
          'https://images.deliveryhero.io/image/fd-tr/LH/n67y-hero.jpg?width=480&height=360&quality=45',
      'yemekBilgisi': 'Bursa mutfağının en özel lezzetlerinden biri olan İskender Kebap, 1867 yılından bu yana şehrin simge yemeklerinden biridir. '
          'Geleneksel olarak kuzey etiyle hazırlanan bu eşsiz kebap, altına yerleştirilen sıcak pide ekmeği üzerine domates sosu, eritilmiş tereyağı'
          ' ve yoğurt eklenerek sunulur. Klasik dönerden farklı olarak, Uludağ kekiğiyle beslenen koçlardan elde edilen özel bir et kullanılır. '
          'Bu benzersiz tat, Bursa’yı ziyaret eden herkesin denemesi gereken gastronomik bir deneyim sunar.',
    },
    {
      'isim': 'Cantık',
      'gorsel':
          'https://d17wu0fn6x6rgz.cloudfront.net/img/w/tarif/mgt/cantk-tarifi.webp',
      'yemekBilgisi':
          'Cantık, Kırım-Tatar mutfağının bir lezzeti olup, kuzu eti ve baharatlarla hazırlanan harcın taze hamurla buluşturulmasıyla '
              'yapılır. 1800 lü yıllarda Kafkaslardan Bursaya geldiği düşünülen bu yemek, özellikle özel günlerde tercih edilir ve Bursanın meşhur yemeklerinden'
              ' biridir. Yöresel restoranlar, özellikle turistler için menülerinde Cantık’a yer verir. İçli pide olarak da bilinen Cantık, genellikle kayık'
              ' veya daire şeklinde hazırlanır.',
    },
    {
      'isim': 'Kemalpaşa Tatlısı',
      'gorsel':
          'https://d17wu0fn6x6rgz.cloudfront.net/img/w/tarif/mgt/9_9_11zon-557.webp',
      'yemekBilgisi': 'Bursanın Mustafakemalpaşa ilçesinde üretilmeye başlanan Kemalpaşa Tatlısı, peynir tatlısı olarak bilinir. Günde 1 milyon adete'
          ' kadar üretilen bu tatlı, Bursa mutfağının önemli lezzetlerinden biridir. Tatlının yapımında pastörize edilerek peynir haline getirilen süt, '
          'un, irmik ve yumurta kullanılır. Hamur haline getirilen karışım, 320 derece fırınlarda 17 dakika pişirilir. Ardından soğumaya bırakılan '
          'tatlı, kaynayan şekerli suya batırılıp şerbet ile şişmesi sağlanır.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiBursa(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiBursa extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiBursa({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class CanakkaleSayfasi extends StatefulWidget {
  const CanakkaleSayfasi({super.key});

  @override
  _CanakkaleSayfasiState createState() => _CanakkaleSayfasiState();
}

class _CanakkaleSayfasiState extends State<CanakkaleSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Çanakkale',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Çanakkale')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Çanakkale')) {
                provider.removeFavoriSehir('Çanakkale');
              } else {
                provider.addFavoriSehir('Çanakkale');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Çanakkale')
                        ? 'Çanakkale favorilere eklendi!'
                        : 'Çanakkale favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/487431640/tr/fotoğraf/canakkale-martyrs-memorial-from-above-turkey.jpg?s=612x612&w=0&k=20&c=W1mmbZ6MKvV8AHSCdS-2djpHJcOH0DYxJlATAULVyfU=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Çanakkale, Türkiye\'nin Marmara Bölgesi\'nde yer alan ve tarihi bir öneme sahip bir şehirdir. '
                    'Çanakkale Boğazı\'nın girişinde yer alan Gelibolu Yarımadası, 1. Dünya Savaşı\'nın önemli savaş alanlarından biridir. '
                    'Ayrıca, şehri simgeleyen Çanakkale Şehitler Abidesi ve Troya Antik Kenti de ziyaretçilerini bekler.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiCanakkale(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const YemekSayfasiCanakkale(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Çanakkale'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiCanakkale extends StatelessWidget {
  const YerSayfasiCanakkale({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Çanakkale Savaşları Gelibolu Tarihi Alanı',
      'gorsel':
          'https://www.kulturportali.gov.tr/contents/images/Abide%20(10)(1).jpg',
      'bilgi': 'Gelibolu Yarımadası’nın güneyinde 33.000 hektarlık bir alana yayılan Gelibolu Yarımadası Tarihi Milli Parkı, Çanakkale’nin en önemli '
          'noktalarından biridir ve 1973 yılında kurulmuştur. Birleşmiş Milletler tarafından tanınan özel bir koruma alanı olan milli park, etkileyici'
          ' anıtları ve tarihi dokusuyla dikkat çeker. Türk, İngiliz, Fransız, Yeni Zelanda ve Avustralya askerlerinin mezarlarını barındıran parkta, '
          'savaş dönemine ait siperler, kaleler, toplar ve burçlar yer alır. Çanakkale Şehitler Anıtı’nı ziyaret ederek binlerce şehidimizi anabilir,'
          ' tarihin derin izlerini hissetme fırsatı bulabilirsiniz.'
    },
    {
      'isim': 'Troya Antik Kenti',
      'gorsel': 'https://cabistanbul.com/storage/5316/truva-antik-kenti--3.png',
      'bilgi': 'Homeros’un İlyada Destanında bahsettiği ve M.Ö. 3000 yılına kadar uzanan tarihiyle antik dünyanın en önemli savaşlarından biri olan Truva'
          ' Savaşı’na ev sahipliği yapan Truva Antik Kenti, 1998 yılında UNESCO Dünya Mirası Listesi’ne dahil edilmiştir. Dünyanın dört bir yanından ziyaretçi '
          'çeken bu etkileyici antik kent, ilk kazıların 1800’lü yılların sonunda yapıldığı, paha biçilmez eserlerin ortaya çıkarıldığı ve bir kısmının yurt'
          ' dışına kaçırıldığı önemli bir arkeolojik alandır. Kentin girişinde yer alan Troya Müzesi’nde, heykeller, kabartmalar ve yazıtlar gibi eserleri'
          'inceleyebilir, rehberli turlarla Truva Savaşının hikayesini dinleyerek tarih dolu bir yolculuk yapabilirsiniz.'
    },
    {
      'isim': 'Çanakkale Kordon',
      'gorsel':
          'https://www.anzachotels.com/wp-content/uploads/2023/12/canakkale-kordon-1.jpg',
      'bilgi': 'Çanakkale’nin en popüler gezi alanlarından biri olan Çanakkale Kordon, muhteşem deniz manzaraları, yürüyüş yolları ve gün batımıyla yerli'
          ' ve yabancı turistlerin ilgisini çeker. Şehrin simgelerinden biri olan Truva Atı heykeline ev sahipliği yapan bu alan, çiçek bahçeleri ve'
          ' Çanakkale Boğazı manzarasıyla keyifli bir atmosfer sunar. Deniz manzaralı kafeler ve restoranlarda vakit geçirebilir, romantik bir gün '
          'batımının eşliğinde akşam yemeği yiyebilir veya çay bahçelerinde dinlenerek günün yorgunluğunu atabilirsiniz.'
    },
    {
      'isim': 'Truva Atı',
      'gorsel':
          'https://www.duvargiydir.com/media/catalog/product/h/c/hcty0171-manzarali-duvar-kagidi-ev-dekorasyon-truva-ati-canakkale.jpg',
      'bilgi': 'Çanakkale Kordon’da sergilenen ahşap Truva Atı heykeli, Truva Savaşı’nın efsanesini yaşatan önemli bir simgedir. Antik dünyanın en'
          ' büyük savaşlarından biri olan ve Çanakkale topraklarında geçtiği düşünülen Truva Savaşı, 10 yıl süren çatışmaların ardından Odysseus’un '
          'zekice bir planıyla son bulur. Athena’nın ilhamıyla tasarlanan Truva Atı, içi askerlerle doldurularak hediye olarak sunulur ve bu plan, '
          'şehrin ele geçirilmesini sağlar. Bugün, Truva Antik Kenti’ne yapılan ziyaretlerin bir parçası olan bu efsanevi hikâye, Çanakkale’nin kültürel '
          'mirasının önemli bir parçasıdır.'
    },
    {
      'isim': 'Assos Antik Kenti',
      'gorsel': 'https://www.assosrehberim.com/content/images/antikkent/04.jpg',
      'bilgi': 'Çanakkale’nin Ayvacık ilçesine bağlı Behramkale Köyü’nde yer alan Assos Antik Kenti, M.Ö. 900’lü yıllarda inşa edilmiş ve antik çağın'
          ' ünlü düşünürü Aristo’nun felsefe okulları kurduğu bir kültür, sanat ve bilim merkezi olmuştur. Athena Tapınağı ve antik tiyatrosuyla tarihi '
          'dokusunu koruyan Assos, büyüleyici deniz manzaraları ve doğal güzellikleriyle hem tarih hem doğa tutkunlarını cezbediyor. Assos Antik Kenti, '
          'geçmişin izlerini sürmek ve huzurlu bir ortamda zaman geçirmek isteyenler için Çanakkale’nin mutlaka görülmesi gereken yerlerinden biridir.'
    },
    {
      'isim': 'Kefalos Plajı',
      'gorsel':
          'https://e-gokceada.com.tr/wp-content/uploads/2022/03/aydincik-plaji-1.jpg',
      'bilgi': 'Çanakkale nin Gökçeada ilçesinde yer alan ve Aydıncık Plajı olarak da bilinen Kefalos Plajı, 1200 metre uzunluğundaki altın renkli'
          ' kumsalı, tertemiz denizi ve rüzgarlı yapısıyla rüzgar sörfü, uçurtma sörfü ve deniz paraşütü gibi su sporları için Alaçatı’dan sonra en '
          'popüler destinasyonlardan biridir. Çevresinde restoranlar, butik oteller, pansiyonlar ve kamp alanları bulunan Kefalos Plajı, doğayla iç '
          'içe bir tatil için ideal bir seçenektir. Gökçeada merkezinden düzenlenen minibüs seferleriyle kolayca ulaşılabilen plaj, su sporları ve '
          'huzurlu bir deniz keyfi için Çanakkale gezisinde mutlaka ziyaret edilmelidir.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiCanakkale(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiCanakkale extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiCanakkale(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiCanakkale extends StatelessWidget {
  const YemekSayfasiCanakkale({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Ispanak Çorbası',
      'gorsel':
          'https://cdn.kisikates.com.tr/image-cache/cache/recipe_main_image_large/https---cdn.kisikates.com.tr/recipe-media/13a302cb3bfcec8992655d801ffe8f1cb12efa3f.jpg',
      'yemekBilgisi': 'Çanakkale mutfağı, sebze çeşitliliği ve zenginliğine büyük bir özen gösteriyor. Yaz ve kış aylarının favori çorbalarından biri olan Ispanak'
          ' Çorbası, içerisinde ıspanak, sarımsak ve sirke bulunarak hazırlanan, özellikle hastalandığında iyileşmeye yardımcı olan bir lezzet.'
          ' Bu çorba, genellikle akşam saatlerinde tercih ediliyor, çünkü sirke ile hazırlanan lezzeti gündüz saatlerinde ağır olabilir. '
          'Kış aylarında sofraların vazgeçilmezlerinden biri olan Ispanak Çorbası, dört mevsim boyunca tüketilmesine rağmen, akşam yemeği için'
          ' eşsiz bir seçenek olarak öne çıkıyor.',
    },
    {
      'isim': 'Metez Mantısı',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/750x422/5e33dc6a7152d80f2c9e3d83.jpg',
      'yemekBilgisi':
          'Çanakkale mutfağının en sevilen hamur işlerinden biri olan Metez, kıymalı iç harcıyla hazırlanan ve mutlaka tadılması gereken'
              ' yöresel bir mantı çeşididir. Bazı yörelerde peynir ya da patatesle de yapılabilen Metez, Çanakkale’de yoğun ilgi görür ve genellikle yoğurt '
              've salçalı sosla servis edilir. Oldukça doyurucu ve ağır bir lezzet olan bu yemek, özellikle akşam yemeklerinde tercih edilir ve yöresel '
              'restoranlarda deneyimlenebilir.',
    },
    {
      'isim': 'Börülce Köftesi',
      'gorsel':
          'https://i.lezzet.com.tr/images-xxlarge-recipe/kuru-borulce-koftesi-ff518459-a04b-4480-9d1d-a3597b4ccbfd.jpg',
      'yemekBilgisi': 'Ege mutfağından esintiler taşıyan Çanakkale mutfağı, börülceyi sadece salatalarda değil, yöreye özgü bir tarif olan Börülce'
          ' Köftesi’nde de kullanarak dikkat çeker. Domates, soğan, un ve çeşitli baharatlarla zenginleştirilen bu lezzetli ve sağlıklı köfte, fırında'
          ' ya da yağda kızartılarak hazırlanır. Hem öğlen hem de akşam yemeklerinde tüketilebilen Börülce Köftesi, genellikle maydanoz ve limon '
          'eşliğinde servis edilir ve Çanakkale’nin mutlaka deneyimlenmesi gereken özgün tatlarından biridir.',
    },
    {
      'isim': 'Melki Yemeği',
      'gorsel': 'https://i.ytimg.com/vi/NiugsYbQq4U/maxresdefault.jpg',
      'yemekBilgisi':
          'Çanakkale mutfağının özgün lezzetlerinden biri olan Melki Yemeği, ana malzemesi mantar olan ve görünümüyle diğer yemeklerden'
              ' ayrılan sulu bir yemektir. Kavrulup kızartılan mantarlarla hazırlanan bu doyurucu yemek, özellikle kış aylarında tercih edilirken, bazı '
              'bölgelerde et ilavesiyle de yapılır. Çeşitli baharatlarla zenginleştirilen Melki Yemeği, düğün ve toplu etkinliklerde sıkça sunulan, '
              'mantarın eşsiz lezzetini öne çıkaran bir tattır.',
    },
    {
      'isim': 'Pazı Dolması',
      'gorsel':
          'https://i.lezzet.com.tr/images-xxlarge-recipe/bulgurlu_pazi_dolmasi-ef22518c-ce4c-4ea4-a626-947a2fe98acf.jpg',
      'yemekBilgisi': 'Zeytinyağlı sarma ve dolma, Türkiye nin birçok mutfağında sevilen yemeklerden biri olsa da, Çanakkale ye özgü Pazı Dolması, '
          'bu lezzetlere farklı bir tat katıyor. Pazı yapraklarıyla ince bir şekilde sarılan ve genellikle vişne veya nar gibi aromatik lezzetlerle '
          'tatlandırılan bu dolma, hem görünümüyle hem de benzersiz tadıyla dikkat çekiyor. Çanakkale nin en sevilen yemeklerinden biri olan Pazı Dolması,'
          ' ana yemeklerin yanında atıştırmalık olarak sunuluyor ve özellikle yöresel yemekler sunan işletmelerde bulunabiliyor.',
    },
    {
      'isim': 'Peynir Helvası',
      'gorsel':
          'https://www.ekicipeynir.com/sites/default/files/styles/460x350/public/edirne_01_buyuk.jpg?itok=SIBVVAIN',
      'yemekBilgisi': 'Trakyanın en sevilen tatlılarından biri olan peynir helvası, özellikle Çanakkale, Tekirdağ ve Edirne gibi şehirlerde büyük bir öneme sahiptir.'
          ' Yapımında sadece altı malzeme kullanılan bu tatlı, diğer helvalarla karşılaştırıldığında bambaşka bir lezzet sunar. Hem yerel halkın '
          'hem de turistlerin ilgisini çeken peynir helvası, paketlenmiş olarak da satılmakta, böylece sevdiklerinize hediye edebilir veya bu eşsiz '
          'lezzeti evinizde de deneyimleyebilirsiniz. Bir tatlı olarak düşünülse de, besleyici özelliği ile ana yemek kadar doyurucu olan peynir '
          'helvası, uzun süre tok kalmanıza yardımcı olur.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiCanakkale(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiCanakkale extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiCanakkale({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class CankiriSayfasi extends StatefulWidget {
  const CankiriSayfasi({super.key});

  @override
  _CankiriSayfasiState createState() => _CankiriSayfasiState();
}

class _CankiriSayfasiState extends State<CankiriSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Çankırı',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Çankırı')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Çankırı')) {
                provider.removeFavoriSehir('Çankırı');
              } else {
                provider.addFavoriSehir('Çankırı');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Çankırı')
                        ? 'Çankırı favorilere eklendi!'
                        : 'Çankırı favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://www.kulturportali.gov.tr/repoKulturPortali/large/SehirRehberi//GezilecekYer/20190307141027217_cankiri_cankiri_kalesi_yaz_gunduz_hv_10.jpg?format=jpg&quality=50',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Çankırı, Türkiye\'nin İç Anadolu Bölgesi\'nde yer alan tarihi ve kültürel zenginliklere sahip bir şehirdir. '
                    'Bölgenin en eski yerleşimlerinden biri olan Çankırı, termal suları ve tarihi yapılarıyla dikkat çeker. '
                    'Çankırı Kalesi ve Çankırı\'nın meşhur yemekleriyle tanınan bir şehirdir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiCankiri(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiCankiri(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Çankırı'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiCankiri extends StatelessWidget {
  const YerSayfasiCankiri({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Çankırı Evleri',
      'gorsel':
          'https://kulturportali.gov.tr/repoKulturPortali/large/02032013/88b55982-13dd-4c3c-8ea1-e6e0504638f1.JPG?format=jpg&quality=50',
      'bilgi': 'Çankırı nın geleneksel Çankırı Evleri, aynı zamanda Yaren Evleri olarak da bilinir ve Kültür ve Tabiat Varlıkları Yüksek Kurulu'
          ' tarafından özenle korunmaktadır. Şehirde bulunan 108 geleneksel ev, klasik Türk evlerinin mimari özelliklerini yansıtarak turizme '
          'kazandırılmıştır. Şehrin merkezinde konumlanan bu evler, hem sosyolojik hem de jeolojik açıdan önemli bir referans niteliği taşır. '
          'Genellikle iki katlı olarak inşa edilen Çankırı Evleri, alt katında mutfak ve oturma odası bulunurken, üst kat misafirlere ayrılmıştır. '
          'Özellikle kış aylarında tercih edilen bu evler, etkileyici mimarisi ile dikkat çeker.'
    },
    {
      'isim': 'Sakaeli Kaya Mezarları ve Peri Bacaları',
      'gorsel': 'https://pbs.twimg.com/media/CtlnbmEWgAADGMG.jpg',
      'bilgi': 'Şehir merkezine 70 km uzaklıkta yer alan Sakaeli Kaya Mezarları ve Peri Bacaları, Çankırının Orta ilçesinde, Sakaeli Köyünde '
          'konumlanmaktadır. Bu tarihi ve doğal zenginlik, tepelik alanın güneyinde, Devrez Çayına yakın bir konumda bulunur. Otantik bir atmosfer '
          'sunan Sakaeli Kaya Mezarları, farklı yüksekliklere sahip tortul kayalarla çevrilidir ve genellikle iki odalı bölümlerden oluşur. Roma ve Bizans '
          'dönemlerinden kaldığı bilinen kaya mezarlarında, odalar arasında geçiş yapmak için basamaklar kullanılır. Kaya mezarlarıyla uyum içinde olan '
          'Peri Bacaları ise Gelin Kayası civarındadır. Ziyaretçiler, bu eşsiz tarihi yapıları keşfettikten sonra Devrez Vadisinde doğa yürüyüşleri '
          'yapma fırsatına da sahip olabilirler.'
    },
    {
      'isim': 'Hüyük Yeraltı Şehri',
      'gorsel':
          'https://cdn2.enuygun.com/media/lib/825x620/uploads/image/derinkuyu-36237.webp',
      'bilgi': 'Merkeze 50 km uzaklıkta, Çankırının Orta ilçesine bağlı Hüyük köyünde yer alan Hüyük Yeraltı Şehri, 2005 yılında keşfedilmiştir ve '
          'günümüzde büyük ölçüde ortaya çıkarılmıştır. Çankırı Müzesinin katkılarıyla yapılan kazılar sonucu, keşiş odaları, kiler, şapel, kilise ve'
          ' sarnıç gibi önemli yapılar gün yüzüne çıkmıştır. Çok katlı bir yeraltı yapısına sahip olan bu şehir, MS 2. yüzyıldan kaldığı düşünülen tarihi '
          'bir yerleşim alanıdır. Hüyük Yeraltı Şehrinin keşfi, bölgeye olan ilgiyi artırmış ve burası, tarihseverler için önemli bir keşif noktasına'
          ' dönüşmüştür.'
    },
    {
      'isim': 'Kırkpınar Yaylası Mesire Alanı',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/uploads/kirkpinar-yaylasi-21.jpg?format=jpg&quality=50',
      'bilgi': 'Türkiye’nin en etkileyici yaylalarından biri olan Kırkpınar Yaylası, Çankırı il merkezine yaklaşık 70 km, Ilgaz ilçe merkezine ise'
          ' 40 km uzaklıkta yer alıyor. 1600 metre civarında bir rakıma sahip olan yayla, ziyaretçilerine hem doğal güzelliklerini keşfetme hem de'
          ' mesire alanlarında piknik yapma imkanı sunuyor. Yaylanın orta bölümünde bulunan geniş gölü ile dikkat çeken bölge, fotoğrafçılık, trekking,'
          ' piknik ve kamp gibi açık hava etkinlikleri için ideal bir alan sunuyor. 55 bin metrekarelik bir alanı kaplayan Kırkpınar Yaylası, salep '
          've yabani lale gibi nadir çiçek türlerine ev sahipliği yaparak doğa tutkunları için vazgeçilmez bir mekan haline geliyor.'
    },
    {
      'isim': 'Taş Mescit',
      'gorsel':
          'https://www.ikolsoftware.com/public/resized/high/image_data/original/570572df50d16d10a291454551d3e9b155b7ce4c/58ddf6ab17362.jpg',
      'bilgi': 'Sultanahmet Meydanı, İstanbul’un tarihi yarımadasında yer alan önemli bir meydandır.'
          ' Osmanlı ve Bizans dönemine ait yapılarla çevrilidir ve Ayasofya, Sultanahmet Camii gibi önemli'
          ' yapıları barındırmaktadır. Bu meydan, hem turistler hem de yerel halk için popüler bir buluşma yeridir.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiCankiri(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiCankiri extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiCankiri(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiCankiri extends StatelessWidget {
  const YemekSayfasiCankiri({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Tavuk Etli Kuru Bamya',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/750x422/5d7f7b9618c7730d70e4cc1e.jpg',
      'yemekBilgisi': 'Çankırının sevilen tencere yemeklerinden biri olan Tavuk Etli Kuru Bamya, bamya sevmeyenleri bile kendine hayran bırakacak'
          ' kadar lezzetlidir. Mevsiminde toplanıp kurutulan bamyaların, kışın harika bir ana yemek haline geldiği bu tarif, özellikle bamya sevenlerin'
          ' damaklarında unutulmaz bir tat bırakır. Kavrulmuş soğan, salça ve baharatlarla pişirilen minik çiçek bamyalar, üzerine tavuk eti eklenerek'
          ' servis edilir. Hem kolay hem de doyurucu olan bu yöresel yemek, Çankırı sofralarının vazgeçilmezlerinden biridir ve mutlaka denenmelidir.',
    },
    {
      'isim': 'Mıkla',
      'gorsel':
          'https://blog.biletbayi.com/wp-content/uploads/2017/08/mikla-1.jpg',
      'yemekBilgisi': 'Çankırının yöresel kahvaltı lezzetlerinden biri olan Mıkla, sabah kahvaltılarının vazgeçilmezi haline gelmiştir. Özellikle '
          'farklı bir yumurta tarifi arayanlar için ideal olan Mıkla, yapımının pratik olması ve az malzemeyle hazırlanması nedeniyle Çankırı sofralarında '
          'sıklıkla yer alır. Kavrulmuş yumurtanın üzerine sarımsaklı yoğurt dökülüp pul biber ve nane ile süslenen bu lezzet, hem evlerde hem de '
          'kahvaltıcılarda rahatlıkla bulunabilir. Çankırı’ya yolunuz düşerse, Mıklayı mutlaka denemelisiniz.',
    },
    {
      'isim': 'Sarımsaklı Et',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/750x422/5d77899018c77324d4c21e17.jpg',
      'yemekBilgisi': 'Sarımsaklı et, Çankırının coğrafi işaret tescili almış ve şehrin en sevilen yöresel yemeklerinden biridir. Kuşbaşı et, soğan '
          've salçanın kavrulmasının ardından kabuklarıyla birlikte bolca sarımsak eklenerek hazırlanır. Yapımı zahmetsiz olsa da lezzetiyle fark yaratır ve '
          'özellikle et yemeklerini sevenlerin favorisi olur. Sarımsak, yemeğe sadece lezzet katmakla kalmaz, aynı zamanda antibiyotik etkisiyle sağlığa da '
          'fayda sağlar. Çankırıya yolunuz düşerse, bu eşsiz lezzeti yerel ustalardan tatmanızı öneririm, çünkü bu yemek, bir kez denedikten sonra favori et'
          ' yemeğiniz haline gelebilir.',
    },
    {
      'isim': 'Zeytinyağlı Pırasa Dolması',
      'gorsel':
          'https://yeniadimgazetesicom.teimg.com/yeniadimgazetesi-com/uploads/2023/06/97a8f17c843053d1-1682610310.jpg',
      'yemekBilgisi': 'Çankırı mutfağında sebzelerin yaygın olarak kullanılması, özellikle et tercih etmeyenler ve hafif lezzetler arayanlar için zeytinyağlı'
          ' pırasa dolmasını ön plana çıkarıyor. Yörede yetişen taze pırasalarla yapılan bu yemek, hafifliği ve lezzetiyle Çankırılılar tarafından'
          ' sıkça yapılmakta ve sevilen bir tat haline gelmektedir. Pırasalar eşit uzunlukta kesildikten sonra içlerine pirinç, kıyma, soğan, '
          'maydanoz ve çeşitli baharatlar eklenip zeytinyağı ile pişirilir. Görüntüsü ve lezzetiyle emeğin karşılığını fazlasıyla veren '
          'zeytinyağlı pırasa dolması, şehir merkezinde yerel restoranlarda bulabileceğiniz bir lezzet olup, mutlaka denenmelidir.',
    },
    {
      'isim': 'Nokul',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/750x422/5c3dab5ec03c0e06f4f4373d.jpg',
      'yemekBilgisi': 'Nokul, birçok insanın adını duymadığı ancak Türkiyenin sevilen hamur tatlılarından biri olan geleneksel bir lezzettir. Samsun,'
          ' Sinop ve Çankırının yöresel tatlılarından olan nokul, özellikle Çankırıda yapılanıyla dikkat çeker. Elde açılan hamurların silindirik şekilde'
          ' sarılıp fırınlanmasıyla hazırlanan bu tatlı, isteğe göre tahin, ceviz ve kuru üzümle zenginleştirilebileceği gibi, içine hiçbir malzeme konmadan'
          ' tuzlu çörek olarak da tüketilebilir. Basit malzemelerle yapılan nokul, kahvaltılarda ve çay saatlerinde sıklıkla tercih edilir. Uzun süre taze '
          'kalabilmesi, besleyici olması ve fazla şeker içermemesi nedeniyle sağlıklı beslenmek isteyenlerin favorisi olmuştur. Çankırıdaki pastanelerde'
          ' bulabileceğiniz bu tatlıyı denemenizi tavsiye ederiz.',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiCankiri(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiCankiri extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiCankiri({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class CorumSayfasi extends StatefulWidget {
  const CorumSayfasi({super.key});

  @override
  _CorumSayfasiState createState() => _CorumSayfasiState();
}

class _CorumSayfasiState extends State<CorumSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Çorum',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Çorum')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Çorum')) {
                provider.removeFavoriSehir('Çorum');
              } else {
                provider.addFavoriSehir('Çorum');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Çorum')
                        ? 'Çorum favorilere eklendi!'
                        : 'Çorum favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1369955589/tr/fotoğraf/ancient-gate-entrance-with-sphinx-from-the-hittite-period-in-alacahoyuk-corum-turkey.jpg?s=612x612&w=0&k=20&c=aIJm7Qmf4ea3DOIVKDEwBiFa9-__DsyMIEcXbLt847Y=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Çorum, Türkiye\'nin İç Anadolu Bölgesi\'nde yer alan tarihi bir şehirdir. Şehir, Hittit uygarlığının merkezi olmasıyla ünlüdür. '
                    'Çorum, tarihi eserleri, zengin kültürü ve meşhur lezzetleriyle dikkat çeker. Çorum Kalesi ve Hattuşa antik kenti şehri simgeleyen önemli yerlerdendir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiCorum(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiCorum(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Çorum'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiCorum extends StatelessWidget {
  const YerSayfasiCorum({super.key});

  final List<Map<String, String>> mekanlar = const [
    {
      'isim': 'Çorum Kalesi',
      'gorsel':
          'https://www.kulturportali.gov.tr/repoKulturPortali/large/SehirRehberi//GezilecekYer/20191114140114558_THK%20ORHAN%20OZGULBAS%20CORUM%20Iskilip%20Kalesi.JPG?format=jpg&quality=50',
      'bilgi': 'Evliya Çelebi, 17. yüzyılda Çoruma yaptığı seyahatte kalenin Sultan Kılıç Arslan tarafından inşa edildiğini belirtmiştir, bu nedenle'
          ' kalenin Selçuklu yapısı olduğu düşünülmektedir. 1800 lü yıllarda Ainsworth ise kalenin Kanuni Sultan Süleyman tarafından yaptırıldığını öne'
          ' sürmüştür. Kalenin yapımında Roma-Bizans dönemine ait taşlar kullanılmıştır. M.S. 1577’ye ait belgelerde kalenin Bizans dönemine ait '
          'olduğu belirtilmektedir. Kale içinde bir cami ve 42 konut bulunmakta olup, kale, toplu taşıma araçlarıyla merkeze ulaşılabilir.'
    },
    {
      'isim': 'Çorum Saat Kalesi',
      'gorsel':
          'https://sakaryagazetesicomtr.teimg.com/sakaryagazetesi-com-tr/uploads/2023/11/corum-saat-kulesi.webp',
      'bilgi': 'Çorum Saat Kulesi, hem sembolik hem de tarihi bir öneme sahiptir. Yedisekiz Hasan Paşa tarafından inşa ettirilen kule, 1984 te hizmete'
          ' girmiştir. Minare tarzında inşa edilen kule, diğer saat kulelerinden farklıdır. Güney tarafındaki kemerli kapıda, 8 satırlık bir kitabe yer'
          ' alır. Sarı renkli kesme kum taşlarından yapılan kule, sekizgen ayaklıkla Türk üçgeni şeklinde bir pabuçla gövdeye bağlanır ve üzeri kurşun'
          ' kubbe ile örtülüdür. Saat kulesinin dört tarafında kadranlar bulunur. Kuleye çıkmak için 81 merdiven tırmanmak gerekir. Yüksekliği yaklaşık'
          ' 27,5 metre olup, Osmancık, İskilip ve Gazi Caddelerini birleştirir.'
    },
    {
      'isim': 'Çorum Alacahöyük Müzesi',
      'gorsel':
          'https://www.arkhedergisi.com.tr/image/catalog/ALACAHOYUK/ALACAHOYUK.jpg',
      'bilgi': 'Alacahöyük Müzesi, 1940 yılında Çorum Müzesinin devamı olarak açılmıştır. Müze, 1935 te Alacahöyük kazılarında bulunan tarihi eserleri '
          'sergilemektedir. Koleksiyonda Kalkolitik, Eski Tunç Çağı, Hitit ve Frig dönemi eserleri yer alırken, Alacalı Pazarlı Ören Yeri kazılarında bulunan '
          'Frig dönemi eserleri de ziyaretçilerle buluşmaktadır. 1935 te yapılan kazılarda Helenistik, Roma, Bizans ve Selçuklu-Osmanlı dönemlerine ait'
          ' çeşitli eserler ortaya çıkmıştır.'
    },
    {
      'isim': 'İncesu Kanyonu',
      'gorsel':
          'https://www.kulturportali.gov.tr/contents/images/Çorum_İncesu_Canyon_8970x5712px__300%20dpı%20kopya.jpg',
      'bilgi': 'Halk arasında Uzungeçit olarak bilinen İncesu Kanyonu, her iki tarafında kayalar bulunan ve bu kayalar üzerinde Helenistik döneme ait'
          ' duvar kabartmaları, su sarnıçları ve hatıl oyukları bulunan tarihi bir kanyondur. Kanyona girildiğinde, bir buçuk metre uzunluğunda Kybele'
          ' Kabartması ile karşılaşılır. Bu kabartma, taht üzerine oturmuş ve aslan yavrusu tutan tanrıçayı tasvir etmektedir ve diğer Helenistik'
          ' kabartmalar arasında en büyük olarak bilinir. 12 kilometre uzunluğunda olan İncesu Kanyonu, rafting, trekking ve doğa sporları tutkunlarının'
          ' tercih ettiği bir alan olarak öne çıkmaktadır.'
    },
    {
      'isim': 'Koyunbaba Köprüsü',
      'gorsel':
          'https://pbs.twimg.com/media/GGCuSt6XkAAHYmv?format=jpg&name=large',
      'bilgi': 'Osmancık’ın simgesi haline gelen tarihi köprü, Kızılırmak üzerinde yer almaktadır. Farklı mimarisiyle dikkat çeken ve görenleri'
          ' hayran bırakan bu köprü, harika bir manzaraya sahiptir. Huzurlu bir atmosfere sahip olan köprü, Osmancık ilçesinde bulunuyor. Köprüye'
          ' şehir merkezinden kalkan minibüslerle ulaşılabilir. Günün her saati açık olan köprü, ziyaretçilere ücretsiz olarak sunulmaktadır.'
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiCorum(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiCorum extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;

  const YerDetaySayfasiCorum(
      {super.key,
      required this.isim,
      required this.gorsel,
      required this.bilgi});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                // Haritada gösterme işlemi
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiCorum extends StatelessWidget {
  const YemekSayfasiCorum({super.key});

  final List<Map<String, String>> yemekler = const [
    {
      'isim': 'Çatal Aşı',
      'gorsel':
          'https://image.hurimg.com/i/hurriyet/75/750x422/5ed92c15d3806c1570503a59.jpg',
      'yemekBilgisi': 'Yeşil mercimeğin başrolde olduğu bu lezzet, genellikle çorba olarak tüketilse de doyurucu özelliğiyle adeta bir ana yemek '
          'gibi kabul edilebilir. Yoğun ve lezzetli tadı, soğuk kış günlerinde iç ısıtan bir seçenek haline gelir. Çoruma yolunuz düşerse, mercimek ve yarma'
          ' kullanılarak yapılan bu enfes çorbanın tadını mutlaka denemelisiniz. Hem besleyici hem de geleneksel bir tat olan bu çorba, bölgenin'
          ' mutfağını keşfetmek isteyenler için vazgeçilmez bir deneyim sunuyor.',
    },
    {
      'isim': 'İskilip Dolması',
      'gorsel':
          'https://i.ytimg.com/vi/3KKhtXT8_IQ/hq720.jpg?sqp=-oaymwEhCK4FEIIDSFryq4qpAxMIARUAAAAAGAElAADIQj0AgKJD&rs=AOn4CLA4-zQ3HBWKsPAXzgcyw93n_W0WKA',
      'yemekBilgisi': 'Çorumun ilçelerinden İskilipin herkesçe bilinmesinin sebebi olan bu enfes dolma, yapımının ustalık gerektirmesi nedeniyle'
          ' genellikle düğün gibi özel günlerin vazgeçilmez lezzetlerinden biri haline gelmiştir. Büyük kazanlarda, neredeyse bir düdüklü tencere '
          'etkisi yaratılarak hazırlanan dolmanın malzemeleri arasında Akçeltik pirinci, et, et suyu ve kuyruk ya da sığır iç yağı bulunuyor. Emeği bol,'
          ' yapımı zahmetli ve pişmesi en az 15 saat süren bu lezzet, tüm emeklerin hakkını her lokmasında fazlasıyla veriyor. Kokusu bile iştah açıcı, '
          'tadı ise kesinlikle mis gibi!',
    },
    {
      'isim': 'Pastırmalı Madımak',
      'gorsel':
          'https://i.ytimg.com/vi/q1sKdD0_eSw/hq720.jpg?sqp=-oaymwEhCK4FEIIDSFryq4qpAxMIARUAAAAAGAElAADIQj0AgKJD&rs=AOn4CLCefV2b7rMpYSsqPSPtGJVD3MptVg',
      'yemekBilgisi': 'Çorum ve çevresinde bolca bulunan madımak kullanılarak hazırlanan bu lezzet, ilk bakışta ıspanak yemeğini andırsa da içindeki ince '
          'ince doğranmış pastırmalarla farkını ortaya koyuyor. Madımanın taze ve doğal tadı, pastırmanın zengin aromasıyla birleşerek eşsiz bir lezzet'
          ' yaratıyor. Görenin tatmadan edemediği, bir çatal alanın ise bir daha bırakmak istemediği bu yemek, hem hafif hem de doyurucu bir seçenek '
          'olarak öne çıkıyor. Yöresel mutfağın en sevilen ve vazgeçilmez tatlarından biri haline geliyor.',
    },
    {
      'isim': 'Yırtma Aşı',
      'gorsel':
          'https://i.ytimg.com/vi/aKUzs_Kq0mw/hq720.jpg?sqp=-oaymwEhCK4FEIIDSFryq4qpAxMIARUAAAAAGAElAADIQj0AgKJD&rs=AOn4CLCaOcPCTM6D6a8B8GpIcLOM0eXojA',
      'yemekBilgisi': 'Çorumun yöresel yemeklerinden biri olan yırtma aşı, asma yapraklarının yırtılarak kullanılması nedeniyle bu ismi alır. Yaprakların '
          'ekşiliği, yemeğe kendine has ve enfes bir tat katarken, yırtma aşının lezzeti oldukça özgündür. Dileyenler bu yemeğe kuzu incik gibi kemikli'
          ' et ekleyerek, dileyenler ise kuşbaşı doğranmış etle zenginleştirerek tatları daha da derinleştirebilir. Hem hafif hem de doyurucu olan bu '
          'yemek, yöresel mutfağın vazgeçilmez tatlarından biri olarak öne çıkar.',
    },
    {
      'isim': 'Sıkma Baklava',
      'gorsel':
          'https://i.lezzet.com.tr/images-xxlarge-recipe/oklava-baklavasi-d3a96f7a-4709-4cda-9b1f-c978ddeb4ccb.jpg',
      'yemekBilgisi':
          'Baklavanın her hali ayrı bir nefis zaten, bunu kabul edelim. Çorumda sıkma baklava, diğerlerinden geride kalacak gibi değil;'
              ' rengiyle, şekliyle farkını hemen ortaya koyuyor. Yufkalar öyle bir pişiriliyor ki, mümkün olduğunca beyaz kalıyor ve şekli öyle ince ince'
              ' işlenmiş ki, görünce uzun uzun izlemek isteyebilirsiniz. Üstüne bolca ceviz içi eklenince, bu baklava adeta bir lezzet şölenine dönüşüyor.'
              ' Değmeyin keyfimize!',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiCorum(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]
                        ['yemekBilgisi']!, // Yemek bilgisini burada geçiyoruz
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiCorum extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;

  const YemekDetaySayfasiCorum({
    super.key,
    required this.isim,
    required this.gorsel,
    required this.yemekBilgisi, // Yemek bilgisi parametresi
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                    BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                    const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    // Haritada gösterme işlemi
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class DenizliSayfasi extends StatefulWidget {
  const DenizliSayfasi({super.key});

  @override
  _DenizliSayfasiState createState() => _DenizliSayfasiState();
}

class _DenizliSayfasiState extends State<DenizliSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Denizli',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Denizli')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Denizli')) {
                provider.removeFavoriSehir('Denizli');
              } else {
                provider.addFavoriSehir('Denizli');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Denizli')
                        ? 'Denizli favorilere eklendi!'
                        : 'Denizli favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1194626638/tr/fotoğraf/denizli-pamukkalede-gün-doğumunda-traverten-havuzlarında-sıcak-hava-balonları-kireçtaşı.jpg?s=612x612&w=0&k=20&c=vZ1kqXZE1ubnrK8sLf-4_19eTOEd8hUB7ypjVFf61T4=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Denizli, Türkiye\'nin Ege Bölgesi\'nde yer alan ve Pamukkale Travertenleri ile ünlü bir şehirdir. '
                    'Şehir, termal turizm, tarihi kalıntılar ve doğal güzellikleriyle dikkat çeker. Ayrıca, Denizli\'nin tekstil sektörü de oldukça gelişmiştir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiDenizli(
                                sehirAdi:
                                    'Denizli', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiDenizli(
                                sehirAdi:
                                    'Denizli', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Denizli'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiDenizli extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiDenizli({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiDenizli extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiDenizli({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class DiyarbakirSayfasi extends StatefulWidget {
  const DiyarbakirSayfasi({super.key});

  @override
  _DiyarbakirSayfasiState createState() => _DiyarbakirSayfasiState();
}

class _DiyarbakirSayfasiState extends State<DiyarbakirSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Diyarbakır',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Diyarbakır')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Diyarbakır')) {
                provider.removeFavoriSehir('Diyarbakır');
              } else {
                provider.addFavoriSehir('Diyarbakır');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Diyarbakır')
                        ? 'Diyarbakır favorilere eklendi!'
                        : 'Diyarbakır favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1070450376/tr/fotoğraf/diyarbakır-tarihi-on-gözlü-köprü-görünümü.jpg?s=612x612&w=0&k=20&c=9SKP-LOXgmzjVXtcVOArUrqGqKYjPfDkw-gWjE3MlFw=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Diyarbakır, Türkiye\'nin güneydoğusunda yer alan tarihi ve kültürel zenginlikleriyle ünlü bir şehirdir. '
                    'Diyarbakır Kalesi, Sur içi, Ulu Camii gibi tarihi yapılarıyla dikkat çeker. Ayrıca, şehrin mutfağı da oldukça zengindir; '
                    'özellikle ciğer ve kaburga kebabı ile ünlüdür.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiDiyarbakir(
                                sehirAdi:
                                    'Diyarbakır', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const YemekSayfasiDiyarbakir(
                                sehirAdi:
                                    'Diyarbakır', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Diyarbakır'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiDiyarbakir extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiDiyarbakir({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiDiyarbakir extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiDiyarbakir({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class DuzceSayfasi extends StatefulWidget {
  const DuzceSayfasi({super.key});

  @override
  _DuzceSayfasiState createState() => _DuzceSayfasiState();
}

class _DuzceSayfasiState extends State<DuzceSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Düzce',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Düzce')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Düzce')) {
                provider.removeFavoriSehir('Düzce');
              } else {
                provider.addFavoriSehir('Düzce');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Düzce')
                        ? 'Düzce favorilere eklendi!'
                        : 'Düzce favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1495780790/tr/fotoğraf/duzce-akcakoca-genoese-castle-aerial-view-of-public-park-located-by-the-sea-scenic.jpg?s=612x612&w=0&k=20&c=jnzRJx57SjrJ6FReN0HDebsMEPsI-HbAVEtYQBaENNw=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Düzce, Marmara Bölgesi\'nde yer alan, doğal güzellikleriyle ünlü bir ildir. '
                    'Bolu Dağları ve Göller Bölgesi gibi doğal alanlarla çevrilidir. '
                    'Düzce, aynı zamanda Mağara, Yedigöller ve Akçakoca plajları gibi turistik mekanlara da sahiptir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiDuzce(
                                sehirAdi:
                                    'Düzce', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiDuzce(
                                sehirAdi:
                                    'Düzce', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Düzce'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiDuzce extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiDuzce({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiDuzce extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiDuzce({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class EdirneSayfasi extends StatefulWidget {
  const EdirneSayfasi({super.key});

  @override
  _EdirneSayfasiState createState() => _EdirneSayfasiState();
}

class _EdirneSayfasiState extends State<EdirneSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Edirne',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Edirne')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Edirne')) {
                provider.removeFavoriSehir('Edirne');
              } else {
                provider.addFavoriSehir('Edirne');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Edirne')
                        ? 'Edirne favorilere eklendi!'
                        : 'Edirne favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://www.shutterstock.com/image-photo/selimiye-mosque-exterior-view-edirne-600nw-2442627573.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Edirne, Türkiye\'nin Marmara Bölgesi\'nde yer alan tarihi bir şehirdir. '
                    'Osmanlı İmparatorluğu döneminde başkentlik yapmış olan Edirne, birçok tarihi yapıya ev sahipliği yapmaktadır. '
                    'Selimiye Camii ve Eski Saray gibi önemli yapılarıyla ünlüdür. Ayrıca, Yunanistan ve Bulgaristan\'a sınırı olmasıyla da bilinir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiEdirne(
                                sehirAdi:
                                    'Edirne', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiEdirne(
                                sehirAdi:
                                    'Edirne', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Edirne'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiEdirne extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiEdirne({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiEdirne extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiEdirne({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class ElazigSayfasi extends StatefulWidget {
  const ElazigSayfasi({super.key});

  @override
  _ElazigSayfasiState createState() => _ElazigSayfasiState();
}

class _ElazigSayfasiState extends State<ElazigSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Elazığ',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Elazığ')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Elazığ')) {
                provider.removeFavoriSehir('Elazığ');
              } else {
                provider.addFavoriSehir('Elazığ');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Elazığ')
                        ? 'Elazığ favorilere eklendi!'
                        : 'Elazığ favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/954937204/tr/fotoğraf/türkiye-elazığ-harput-kalesi-görünüm.jpg?s=612x612&w=0&k=20&c=FHJisRZb3QauoOFoYKHh34tEap-fi3BX77Y--hy5oxo=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Elazığ, Doğu Anadolu Bölgesi\'nde yer alan tarihi ve kültürel zenginliklere sahip bir şehirdir. '
                    'Harput Kalesi, Elazığ\'ın en önemli tarihi yapılarından biridir. Elazığ, aynı zamanda ünlü "Elazığ Köftesi" ve '
                    'dünyaca bilinen "Dut Pekmezi" gibi lezzetleriyle de tanınır. Şehir, doğal güzellikleri ve köklü geçmişiyle dikkat çeker.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiElazig(
                                sehirAdi:
                                    'Elazığ', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiElazig(
                                sehirAdi:
                                    'Elazığ', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Elazığ'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiElazig extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiElazig({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiElazig extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiElazig({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class ErzincanSayfasi extends StatefulWidget {
  const ErzincanSayfasi({super.key});

  @override
  _ErzincanSayfasiState createState() => _ErzincanSayfasiState();
}

class _ErzincanSayfasiState extends State<ErzincanSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Erzincan',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Erzincan')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Erzincan')) {
                provider.removeFavoriSehir('Erzincan');
              } else {
                provider.addFavoriSehir('Erzincan');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Erzincan')
                        ? 'Erzincan favorilere eklendi!'
                        : 'Erzincan favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1296911969/tr/fotoğraf/kemaliye-vadisi-ile-egin-arasındaki-kemaliye-ilçesinin-havadan-manzara-görünümü-erzincan.jpg?s=612x612&w=0&k=20&c=ID2wRUAj0Ko8wpHtntHLXxaYudrGyf-B69ypE1CXj_k=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Erzincan, Doğu Anadolu Bölgesi\'nde yer alan ve tarihi zenginlikleriyle dikkat çeken bir şehirdir. '
                    'Taşköprü, Erzincan\'ın en bilinen tarihi yapılarından biridir. Erzincan ayrıca, Erzincan Kemaliye Taş Yolu ve '
                    'Buzluk Mağarası gibi doğal güzellikleriyle ünlüdür. Erzincan, aynı zamanda ünlü Erzincan Tulum Peyniri ve '
                    'keşkek gibi yöresel lezzetleriyle de tanınır.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiErzincan(
                                sehirAdi:
                                    'Erzincan', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiErzincan(
                                sehirAdi:
                                    'Erzincan', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Erzincan'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiErzincan extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiErzincan({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiErzincan extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiErzincan({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class ErzurumSayfasi extends StatefulWidget {
  const ErzurumSayfasi({super.key});

  @override
  _ErzurumSayfasiState createState() => _ErzurumSayfasiState();
}

class _ErzurumSayfasiState extends State<ErzurumSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Erzurum',
          style: TextStyle(
            color: Color(0xFF00008B),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF00008B),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Erzurum')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Erzurum')) {
                provider.removeFavoriSehir('Erzurum');
              } else {
                provider.addFavoriSehir('Erzurum');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Erzurum')
                        ? 'Erzurum favorilere eklendi!'
                        : 'Erzurum favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1199253593/tr/fotoğraf/erzurumda-çeşmeli-yakutiye-medresesi.jpg?s=612x612&w=0&k=20&c=-WqHunU96WlVZXxEErurLAIecY7ZOIDKbYjdpxc9ffQ=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Erzurum, Doğu Anadolu Bölgesi\'nde yer alan, tarihi ve kültürel mirasıyla ünlü bir şehir olup, '
                    'sanal kayak sporları ve Palandöken Dağı ile bilinir. Erzurum, ayrıca Erzurum Evleri, Çifte Minareli Medrese ve Erzurum Kalesi gibi tarihi yapılarıyla da dikkat çeker. Erzurum\'da ayrıca Erzurum Cağ Kebabı ve Kadayıf dolması gibi yöresel yemekler oldukça meşhurdur.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiErzurum(
                                sehirAdi:
                                    'Erzurum', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiErzurum(
                                sehirAdi:
                                    'Erzurum', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Erzurum'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiErzurum extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiErzurum({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiErzurum extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiErzurum({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class EskisehirSayfasi extends StatefulWidget {
  const EskisehirSayfasi({super.key});

  @override
  _EskisehirSayfasiState createState() => _EskisehirSayfasiState();
}

class _EskisehirSayfasiState extends State<EskisehirSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Eskişehir',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Eskişehir')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Eskişehir')) {
                provider.removeFavoriSehir('Eskişehir');
              } else {
                provider.addFavoriSehir('Eskişehir');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Eskişehir')
                        ? 'Eskişehir favorilere eklendi!'
                        : 'Eskişehir favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://e1.pxfuel.com/desktop-wallpaper/47/792/desktop-wallpaper-masal-Şatosu-eskişehir-resimleri-eskisehir.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Eskişehir, Türkiye\'nin İç Anadolu Bölgesi\'nde yer alan, genç nüfusu ve modern yapılarıyla dikkat çeken bir şehirdir. '
                    'Eskişehir, Porsuk Çayı boyunca yapılan nehir turları, tarihi Odunpazarı Evleri ve Çömlekçiler Çarşısı gibi yerleriyle ünlüdür. '
                    'Ayrıca Eskişehir, meşhur Eti Çikolatası ve Eskişehir Kebabı gibi yöresel lezzetlere de sahiptir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiEskisehir(
                                sehirAdi:
                                    'Eskişehir', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiEskisehir(
                                sehirAdi:
                                    'Eskişehir', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Eskişehir'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiEskisehir extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiEskisehir({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiEskisehir extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiEskisehir({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class GaziantepSayfasi extends StatefulWidget {
  const GaziantepSayfasi({super.key});

  @override
  _GaziantepSayfasiState createState() => _GaziantepSayfasiState();
}

class _GaziantepSayfasiState extends State<GaziantepSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Gaziantep',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Gaziantep')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Gaziantep')) {
                provider.removeFavoriSehir('Gaziantep');
              } else {
                provider.addFavoriSehir('Gaziantep');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Gaziantep')
                        ? 'Gaziantep favorilere eklendi!'
                        : 'Gaziantep favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://www.kulturportali.gov.tr/contents/images/20170301114532159_zeugma_cingene_kizi_poster.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Gaziantep, Türkiye\'nin Güneydoğu Anadolu Bölgesi\'nde yer alan, zengin mutfağı ve tarihi geçmişi ile ünlü bir şehirdir. '
                    'Gaziantep, baklava, kebap, yuvarlama gibi geleneksel yemekleriyle meşhurdur. Ayrıca, Zeugma Mozaik Müzesi gibi önemli tarihi alanlara sahiptir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiGaziantep(
                                sehirAdi:
                                    'Gaziantep', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiGaziantep(
                                sehirAdi:
                                    'Gaziantep', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Gaziantep'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiGaziantep extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiGaziantep({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiGaziantep extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiGaziantep({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class GiresunSayfasi extends StatefulWidget {
  const GiresunSayfasi({super.key});

  @override
  _GiresunSayfasiState createState() => _GiresunSayfasiState();
}

class _GiresunSayfasiState extends State<GiresunSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Giresun',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Giresun')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Giresun')) {
                provider.removeFavoriSehir('Giresun');
              } else {
                provider.addFavoriSehir('Giresun');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Giresun')
                        ? 'Giresun favorilere eklendi!'
                        : 'Giresun favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1741615967/tr/fotoğraf/eynesil-castle-in-giresun-turkey.jpg?s=612x612&w=0&k=20&c=1rwR5XuUJrvBj02RnTFtQxwPTkbmgsW2JVjKe4DmEgM=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Giresun, Karadeniz Bölgesi\'nde yer alan doğal güzellikleri ile ünlü bir şehir olup, fındık üretimi ve doğal plajları ile dikkat çeker. '
                    'Giresun Adası, tarihi Giresun Kalesi, doğal yaylaları ve deniz kıyısındaki plajları ile doğa severler için harika bir ziyaret noktasıdır.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiGiresun(
                                sehirAdi:
                                    'Giresun', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiGiresun(
                                sehirAdi:
                                    'Giresun', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Giresun'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiGiresun extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiGiresun({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiGiresun extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiGiresun({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class GumushaneSayfasi extends StatefulWidget {
  const GumushaneSayfasi({super.key});

  @override
  _GumushaneSayfasiState createState() => _GumushaneSayfasiState();
}

class _GumushaneSayfasiState extends State<GumushaneSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Gümüşhane',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Gümüşhane')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Gümüşhane')) {
                provider.removeFavoriSehir('Gümüşhane');
              } else {
                provider.addFavoriSehir('Gümüşhane');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Gümüşhane')
                        ? 'Gümüşhane favorilere eklendi!'
                        : 'Gümüşhane favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://i.arkeolojikhaber.com/pool_file/2019/25/51415_kovkalesi-kov-gumushane-180619-2000x.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Gümüşhane, Karadeniz Bölgesi\'nde yer alan, doğal zenginlikleri ve tarihi mirasıyla dikkat çeken bir şehir. '
                    'Süleymaniye Camii, Gümüşhane Kalesi ve zengin yaylalarıyla bilinir. Ayrıca, Gümüşhane fındığı ve gümüş işçiliğiyle ünlüdür.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiGumushane(
                                sehirAdi:
                                    'Gümüşhane', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiGumushane(
                                sehirAdi:
                                    'Gümüşhane', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Gümüşhane'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiGumushane extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiGumushane({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiGumushane extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiGumushane({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class HakkariSayfasi extends StatefulWidget {
  const HakkariSayfasi({super.key});

  @override
  _HakkariSayfasiState createState() => _HakkariSayfasiState();
}

class _HakkariSayfasiState extends State<HakkariSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Hakkari',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Hakkari')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Hakkari')) {
                provider.removeFavoriSehir('Hakkari');
              } else {
                provider.addFavoriSehir('Hakkari');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Hakkari')
                        ? 'Hakkari favorilere eklendi!'
                        : 'Hakkari favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/876186030/tr/fotoğraf/zap-nehri.jpg?s=612x612&w=0&k=20&c=se1MaEGCGWjv6fFi0EQKU9RS_3h2t6vAcv0hPox9l9I=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Hakkari, Türkiye\'nin güneydoğusunda yer alan bir ildir. '
                    'Dağlık bir yapıya sahip olan bu şehir, tarihi ve kültürel zenginlikleriyle bilinir. Hakkari\'nin doğal güzellikleri, '
                    'yaylaları ve geleneksel yemekleri ile ünlüdür.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiHakkari(
                                sehirAdi:
                                    'Hakkari', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiHakkari(
                                sehirAdi:
                                    'Hakkari', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Hakkari'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiHakkari extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiHakkari({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiHakkari extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiHakkari({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class HataySayfasi extends StatefulWidget {
  const HataySayfasi({super.key});

  @override
  _HataySayfasiState createState() => _HataySayfasiState();
}

class _HataySayfasiState extends State<HataySayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Hatay',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Hatay')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Hatay')) {
                provider.removeFavoriSehir('Hatay');
              } else {
                provider.addFavoriSehir('Hatay');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Hatay')
                        ? 'Hatay favorilere eklendi!'
                        : 'Hatay favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1419287772/tr/fotoğraf/antakya.jpg?s=612x612&w=0&k=20&c=pLINwO3Ua7D4M5ZXoSNdVC6MHH9z4MDFMgahHv_lrKE=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Hatay, Türkiye\'nin güneyinde yer alan tarihi ve kültürel zenginlikleriyle ünlü bir ildir. '
                    'Özellikle Antakya, Roma ve Bizans dönemlerine ait yapılarıyla dikkat çeker. Hatay mutfağı, '
                    'kebabı, künefesi ve zeytinyağlı yemekleriyle ünlüdür.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiHatay(
                                sehirAdi:
                                    'Hatay', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiHatay(
                                sehirAdi:
                                    'Hatay', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Hatay'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiHatay extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiHatay({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiHatay extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiHatay({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class IgdirSayfasi extends StatefulWidget {
  const IgdirSayfasi({super.key});

  @override
  _IgdirSayfasiState createState() => _IgdirSayfasiState();
}

class _IgdirSayfasiState extends State<IgdirSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Iğdır',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Iğdır')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Iğdır')) {
                provider.removeFavoriSehir('Iğdır');
              } else {
                provider.addFavoriSehir('Iğdır');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Iğdır')
                        ? 'Iğdır favorilere eklendi!'
                        : 'Iğdır favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media-cdn.tripadvisor.com/media/photo-s/02/34/71/5e/mount-ararat.jpg',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Iğdır, Türkiye\'nin Doğu Anadolu Bölgesi\'nde yer alan ve Azerbaycan ile sınır komşusu olan bir ildir. '
                    'Ermenistan sınırına yakın olmasıyla bilinen Iğdır, aynı zamanda Ararat Dağı\'na da ev sahipliği yapmaktadır. '
                    'Bölgede tarım faaliyetleri oldukça yaygındır.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiIgdir(
                                sehirAdi:
                                    'Iğdır', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiIgdir(
                                sehirAdi:
                                    'Iğdır', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Iğdır'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiIgdir extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiIgdir({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiIgdir extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiIgdir({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class IspartaSayfasi extends StatefulWidget {
  const IspartaSayfasi({super.key});

  @override
  _IspartaSayfasiState createState() => _IspartaSayfasiState();
}

class _IspartaSayfasiState extends State<IspartaSayfasi> {
  bool isFavorited = false; // Favori durumu

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'Isparta',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context); // Bir önceki sayfaya dön
          },
        ),
        actions: [
          IconButton(
            icon: Icon(
              context
                      .watch<FavoriSehirlerProvider>()
                      .favoriSehirler
                      .contains('Isparta')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('Isparta')) {
                provider.removeFavoriSehir('Isparta');
              } else {
                provider.addFavoriSehir('Isparta');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('Isparta')
                        ? 'Isparta favorilere eklendi!'
                        : 'Isparta favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    'https://media.istockphoto.com/id/1275783703/tr/fotoğraf/egirdir-kasabası-ve-gölü.jpg?s=612x612&w=0&k=20&c=5k5BQASJdXuM_zSF809JDAgA_ovoCIXhP2-ZRhuy2Pc=',
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    'Isparta, Türkiye\'nin Akdeniz Bölgesi\'nde yer alan ve gülüyle ünlü bir ildir. Ayrıca, bölgedeki en büyük gölet olan Eğirdir Gölü de Isparta sınırları içinde yer alır. Isparta, doğal güzelliklerinin yanı sıra kültürel zenginlikleriyle de dikkat çekmektedir.',
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.bold,
                        color: Colors.black),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          // Nereye gitmek istersin butonuna tıklanınca YerSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiIsparta(
                                sehirAdi:
                                    'Isparta', // Burada şehir adı parametresi ekleniyor
                                mekanlar: [
                                  'Adana Kalesi',
                                  'Taşköprü',
                                  'Sabancı Merkez Camii',
                                  'Atatürk Parkı'
                                ], // Mekanlar listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.greenAccent),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          // Ne yemek istersin butonuna tıklanınca YemekSayfasiAdana sayfasına yönlendirme
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiIsparta(
                                sehirAdi:
                                    'Isparta', // Burada şehir adı parametresi ekleniyor
                                yemekler: [
                                  'Adana Kebabı',
                                  'Şalgam',
                                  'Bici Bici',
                                  'Kuymak'
                                ], // Yemekler listesini buraya ekliyoruz
                              ),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.greenAccent,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 11),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellowAccent),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 11,
                                    color: Colors.black,
                                    fontWeight: FontWeight.bold)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                                  const WeatherPage(cityName: 'Isparta'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiIsparta extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasiIsparta({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Gezilecek Yerler'),
      ),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.place, color: Colors.blueAccent),
              title: Text(
                mekanlar[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yer detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiIsparta extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasiIsparta({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('$sehirAdi\'da Yenilecek Yemekler'),
      ),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return Card(
            margin: const EdgeInsets.all(8.0),
            child: ListTile(
              leading: const Icon(Icons.restaurant, color: Colors.orangeAccent),
              title: Text(
                yemekler[index],
                style: const TextStyle(fontWeight: FontWeight.bold),
              ),
              onTap: () {
                // Yemek detay sayfasına yönlendirme eklenebilir
              },
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasi extends StatelessWidget {
  final String sehirAdi;
  final List<String> mekanlar;

  const YerSayfasi({
    super.key,
    required this.sehirAdi,
    required this.mekanlar,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('$sehirAdi Mekanları')),
      body: ListView.builder(
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return ListTile(
            title: Text(mekanlar[index]),
          );
        },
      ),
    );
  }
}

class YemekSayfasi extends StatelessWidget {
  final String sehirAdi;
  final List<String> yemekler;

  const YemekSayfasi({
    super.key,
    required this.sehirAdi,
    required this.yemekler,
  });

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('$sehirAdi Yemekleri')),
      body: ListView.builder(
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return ListTile(
            title: Text(yemekler[index]),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}


class IzmirSayfasi extends StatefulWidget {
  const IzmirSayfasi({super.key});

  @override
  _IzmirSayfasiState createState() => _IzmirSayfasiState();
}

class _IzmirSayfasiState extends State<IzmirSayfasi> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        title: const Text(
          'İzmir',
          style: TextStyle(
            color: Color(0xFF8B0000),
            fontSize: 27,
            fontWeight: FontWeight.bold,
            fontFamily: 'Serif',
          ),
        ),
        leading: IconButton(
          icon: const Icon(
            Icons.arrow_back,
            color: Color(0xFF8B0000),
          ),
          onPressed: () {
            Navigator.pop(context);
          },
        ),
        actions: [
          // Favori şehirler butonu
          IconButton(
            icon: Icon(
              context
                  .watch<FavoriSehirlerProvider>()
                  .favoriSehirler
                  .contains('İzmir')
                  ? Icons.favorite
                  : Icons.favorite_border,
              color: const Color(0xFF8B0000),
            ),
            onPressed: () {
              final provider = context.read<FavoriSehirlerProvider>();
              if (provider.favoriSehirler.contains('İzmir')) {
                provider.removeFavoriSehir('İzmir');
              } else {
                provider.addFavoriSehir('İzmir');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.favoriSehirler.contains('İzmir')
                        ? 'İzmir favorilere eklendi!'
                        : 'İzmir favorilerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),

          // Gidilen şehirler butonu
          IconButton(
            icon: Icon(
              context
                  .watch<GidilenSehirlerProvider>()
                  .gidilenSehirler
                  .contains('İzmir')
                  ? Icons.check
                  : Icons.check_box_outline_blank,
              color: context
                  .watch<GidilenSehirlerProvider>()
                  .gidilenSehirler
                  .contains('İzmir')
                  ? Colors.green
                  : Colors.grey,
            ),
            onPressed: () {
              final provider = context.read<GidilenSehirlerProvider>();
              if (provider.gidilenSehirler.contains('İzmir')) {
                provider.removeGidilenSehir('İzmir');
              } else {
                provider.addGidilenSehir('İzmir');
              }

              ScaffoldMessenger.of(context).showSnackBar(
                SnackBar(
                  content: Text(
                    provider.gidilenSehirler.contains('İzmir')
                        ? 'İzmir gidilen şehirlere eklendi!'
                        : 'İzmir gidilen şehirlerden çıkarıldı!',
                  ),
                  duration: const Duration(seconds: 2),
                ),
              );
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Container(
              decoration: BoxDecoration(
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 20)
                ],
                borderRadius: BorderRadius.circular(20),
              ),
              child: ClipRRect(
                borderRadius: BorderRadius.circular(25.0),
                child: AspectRatio(
                  aspectRatio: 1.2,
                  child: Image.network(
                    "https://st3.depositphotos.com/1871501/33278/i/450/depositphotos_332784402-stock-photo-konak-square-street-view-old.jpg",
                    height: 200,
                    width: double.infinity,
                    fit: BoxFit.cover,
                  ),
                ),
              ),
            ),
            const SizedBox(height: 20),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.white,
                boxShadow: const [
                  BoxShadow(color: Colors.black26, blurRadius: 10)
                ],
                borderRadius: BorderRadius.circular(15),
              ),
              child: Column(
                children: [
                  const Text(
                    "Ege Bölgesi'nin batısında yer alan İzmir, Türkiye'nin üçüncü en büyük ili ve en önemli liman şehirlerinden biridir. İzmir, hem tarihi hem de modern yapılarıyla dikkat çeker; Agora, Kemeraltı Çarşısı ve Efes Antik Kenti gibi tarihi alanlara sahiptir. İzmir, denizcilik, ticaret ve sanayi açısından büyük bir öneme sahiptir ve Türkiye'nin en önemli limanına ev sahipliği yapar. Ayrıca, şehir, zeytinyağı, üzüm ve incir üretimiyle de ünlüdür. İzmir mutfağı, Ege'nin taze sebzeleri, zeytinyağlı yemekleri ve deniz ürünleriyle zengindir. Bölgede, \"İzmir köfte\", \"boyoz\" ve \"kumru\" gibi meşhur yemekler öne çıkar. İzmir, aynı zamanda sosyal yaşamı, festivalleri ve kültürel etkinlikleri ile de tanınır.",
                    textAlign: TextAlign.center,
                    style: TextStyle(
                      fontSize: 20,
                      fontWeight: FontWeight.bold,
                      color: Colors.black,
                    ),
                  ),
                  const SizedBox(height: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YerSayfasiIzmir(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.yellow,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.map, color: Colors.green),
                            SizedBox(width: 6),
                            Text('Nereye gitmek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      ElevatedButton(
                        onPressed: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => const YemekSayfasiIzmir(),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.green,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.fastfood, color: Colors.yellow),
                            SizedBox(width: 6),
                            Text('Ne yemek istersin?',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.black)),
                          ],
                        ),
                      ),
                      const SizedBox(height: 16),
                      // Hava durumu butonu doğrudan CityPage'e yönlendiriyor
                      ElevatedButton(
                        onPressed: () {
                          // Burada, aradaki gereksiz sayfa geçişini kaldırıyoruz
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) =>
                              const WeatherPage(cityName: 'İzmir'),
                            ),
                          );
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.blue,
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(25),
                          ),
                        ),
                        child: const Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Icon(Icons.wb_sunny, color: Colors.white),
                            SizedBox(width: 6),
                            Text('Hava Durumunu Gör',
                                style: TextStyle(
                                    fontSize: 16, color: Colors.white)),
                          ],
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerSayfasiIzmir extends StatelessWidget {
  const YerSayfasiIzmir({Key? key}) : super(key: key);

  final List<Map<String, dynamic>> mekanlar = const [
    {
      'isim': 'Efes Antik Kenti',
      'gorsel':
      'https://img-hopi.mncdn.com/03/d7/03d7c69c2a56486fa7eca272d9235e9f.jpeg',
      'bilgi':
      'UNESCO Dünya Mirası Listesi’nde yer alan çukur İçihöyük, Ayasuluk Tepesi, Efes Antik Kenti ve Meryem Ana bölümlerine ev sahipliği yapan antik kent; Türkiye’nin en çok ziyaret edilen tarihi hazinelerinden biri. Antik dönemin en büyük ve en güçlü kentlerinden biri olma özelliği taşıyan kent Herakleitos ve Hermodos gibi pek çok bilim insanına da geçmiş yıllarda ev sahipliği yapmış.',
      'enlem': 37.940979177654675,
      'boylam': 27.341437124206053,
    },
    {
      'isim': 'İzmir Saat Kulesi',
      'gorsel':
      'https://yuzyillikhikayeler.com/wp-content/uploads/2022/08/izmir-saat-kulesi.jpg',
      'bilgi':
      'İzmir’in en önemli simgelerinden biri olan Saat Kulesi’nin 1901 yılında Osmanlı padişahı II. Abdülhamit tarafından inşa edildiği biliniyor. Padişahın tahta çıkışının 25. yılını kutlamak amacıyla inşa ettirdiği bu şaheser günümüzde İzmir’in en önemli simgelerinden biri haline gelmiş durumda. Kemeraltı Çarşısı’nın girişinde konumlanan ve Konak Yalı Camii’nin hemen yanında olması sebebiyle kolaylıkla ulaşabileceğiniz saat kulesi 25 m yüksekliğe sahip. En önemli özelliği ise sahip olduğu özgün mimari. Özgün mimarisiyle diğer Osmanlı saat kulelerinden ayrılan ve ünlü bir Fransız mimar tarafından tasarlanan kulenin kesme taşları ile inşa edildiği görülüyor. Saat Kulesi, İzmirliler için oldukça önemli ve genellikle buluşma yeri olarak tercih ediliyor.',
      'enlem': 38.41895884140284,
      'boylam': 27.12867854224219,
    },
    {
      'isim': 'Kemeraltı Çarşısı',
      'gorsel':
      'https://hiddenbay.com.tr/media/1390/turkiyenin_en_otantik_yeri_izmir_tarihi_kemeralti_carsisi_h106642_3de51.jpg',
      'bilgi':
      'İzmir’in tarihi yerlerinden biri olan Kemeraltı Çarşısı, 16. yüzlü yıllara dayanan köklü bir geçmişe sahip. Antik çağlardan bu yana yerini ve önemini hiçbir zaman kaybetmemiş olan Kemeraltı Çarşısı, 5 kilometrelik bir alana yayılmış durumda. 15 bin iş yerine ev sahipliği yapıyor olması sebebiyle dikkat çeken Kemeraltı Çarşısı, dünyanın en büyük açık hava alışveriş alanı. Bu özelliği sayesinde her yıl binlerce yerli ve yabancı turist tarafından ziyaret edildiğini dile getirmek mümkün. Kemeraltı Çarşısı içerisinde 16 yüzyıldan kalma çeşmeler, hanlar ve hamamlar bulunuyor. Bunun yanı sıra güncel ihtiyaçların karşılanması adına da çok sayıda işletmeye yer verildiğini dile getirmek mümkün.',
      'enlem': 38.418777316031445,
      'boylam': 27.133013863642415,
    },
    {
      'isim': 'İzmir Tarihi Asansör',
      'gorsel':
      'https://visitizmiryonetim.izmir.bel.tr/YuklenenDosyalar/DestinasyonFotograflari/1024/25042021232008899.jpg',
      'bilgi':
      'Mithatpaşa Caddesi ile Halil Rıfat Paşa Caddesini birbirine bağlamak amacıyla yapılmış bir sokak asansörü olan Tarihi Asansör’ün hikayesini ise dillere destan! Asansörün olmadığı yıllarda iki cadde arası uzunluğun 58 metre olduğu ve bir caddeden diğer caddeye ulaşmak için onlarca basamak çıkmanın gerekiyormuş. Oldukça zahmetli ve yorucu olan bu durumu yaşayan bir ailenin babası olan Devidas, merdivenlerden düşerek ayağını kırıyor ve bunun üstüne yakın dostu Nesim Levi, iki cadde arasında bir asansör yaptırmaya karar vermiş.Tuğlaları bile Marsilya’dan sipariş edilen ve büyük bir özen ile iki caddeyi birbirine bağlayan asansör, 1907 yılında yapılmış olsa da Anadolu’da halen böyle bir yapının başka bir örneği ile karşılaşmak mümkün değil.',
      'enlem': 38.40872957800596,
      'boylam': 27.11765703827491,
    },
    {
      'isim': 'Agora Açıkhava Müzesi',
      'gorsel':
      'https://media-cdn.tripadvisor.com/media/photo-s/1b/30/c5/57/agora-acikhava-muzesi.jpg',
      'bilgi':
      'İzmir\'in tarihi dokusunun bir parçası olan ve şehir merkezinde bulunan Agora Açık Hava Müzesi, çok sayıda kültüre ve çok sayıda katmana sahiplik etmektedir. Kadifekale\"den bakıldığında, açık hava müzesini ve kazı alanlarını çok net bir şekilde görmek mümkündür. Üç katlı tasarımıyla şehir merkezinde yer alan büyük agoralardan biri olan İzmir Agorası, türünün nadide örneklerinden biridir. İzmir’in en eski bölgelerinden biri olan Namazgah\'ta bulunan Agora, Roma Dönemi’nde mermer döşemeli büyük bir dörtlü etrafındaki kemer ve sütunlar üzerine inşa edilmiş çok katlı bir yapıdır. Agora kelimesi “pazar yeri” anlamına gelir.',
      'enlem': 38.41984884649436,
      'boylam': 27.138352898053235,
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Gezilecek Yerler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: mekanlar.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YerDetaySayfasiIzmir(
                    isim: mekanlar[index]['isim']!,
                    gorsel: mekanlar[index]['gorsel']!,
                    bilgi: mekanlar[index]['bilgi']!,
                    enlem: mekanlar[index]['enlem'], // Enlem parametresi burada gönderiliyor
                    boylam: mekanlar[index]['boylam'],
                    mekanIsmi: mekanlar[index]['isim'],
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(mekanlar[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    mekanlar[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YerDetaySayfasiIzmir extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String bilgi;
  final double enlem; // Enlem parametresi eklendi
  final double boylam;
  final String mekanIsmi;

  const YerDetaySayfasiIzmir(
      {Key? key,
        required this.isim,
        required this.gorsel,
        required this.bilgi,
        required this.enlem, // Enlem parametresi
        required this.boylam,
        required this.mekanIsmi, // Boylam parametresi
      }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Column(
          children: [
            SizedBox(
              height: 300,
              width: double.infinity,
              child: ClipRRect(
                borderRadius: BorderRadius.circular(40),
                child: Image.network(
                  gorsel,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(height: 20),
            Padding(
              padding: const EdgeInsets.all(16.0),
              child: Text(
                bilgi, // Burada "bilgi" parametresini kullanıyoruz
                style:
                const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
            ),
            const SizedBox(height: 20), // Biraz daha boşluk ekleyebiliriz
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => YerleriHaritadaGoster(
                      enlem: enlem, // Parametreleri burada gönderiyoruz
                      boylam: boylam,
                      mekanIsmi: mekanIsmi, // Parametreleri burada gönderiyoruz
                    ),
                  ),
                );
              },
              child: const Text('Haritada Bul'),
            ),
            const SizedBox(height: 20),
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekSayfasiIzmir extends StatelessWidget {
  const YemekSayfasiIzmir({Key? key}) : super(key: key);

  final List<Map<String, dynamic>> yemekler = const [
    {
      'isim': 'Boyoz',
      'gorsel':
      'https://cdn.ye-mek.net/App_UI/Img/out/650/2022/09/yufkadan-yalanci-boyoz-resimli-yemek-tarifi(19).jpg',
      'yemekBilgisi':
      'İzmir denildiğinde akla ilk gelen yemeklerden biri olan boyoz temelde bir hamur işi ürünü. Un ve sirke ile hazırlanan ve kendine ait bir hamura sahip olan boyoz, oldukça lezzetli bir alternatif. İzmir’de özellikle sabah kahvaltılarında yaygın olarak tercih edilen boyoz, genellikle yumurta ile satılıyor.',
      'enlem': 38.43922654243253,
      'boylam': 27.143869813594247,
      'restoranIsmi': 'Restoran ismi',
    },
    {
      'isim': 'İzmir Bombası',
      'gorsel':
      'https://cdn.kisikates.com.tr/image-cache/cache/recipe_main_image_large/https---cdn.kisikates.com.tr/recipe-media/41ac46667d323180dce928ef7d68c973672e86ee.jpeg',
      'yemekBilgisi':
      'Son yılların en sevilen tatlılarından biri haline gelen ve orijinali İzmir’de yapılan İzmir bombası, ince açılmış bir hamur içerisinde bulunan çikolata dolgusu ile hazırlanıyor. Ağızda dağılan eşsiz çikolatanın verdiği lezzet, kesinlikle eşsiz bir deneyim yaşamayı sağlıyor. Bomba adıyla da anılan ve Türkiye’nin farklı yerlerinde karşılaşabileceğiniz bu kurabiyenin orijinal ise İzmir’de yapılıyor.',
      'enlem': 38.441201060752455,
      'boylam': 27.14401792680544,
      'restoranIsmi': 'Restoran ismi',
    },
    {
      'isim': 'Şambali Tatlısı',
      'gorsel':
      'https://image.hurimg.com/i/hurriyet/75/750x422/5ec92fbe7af50710c8ceed3c.jpg',
      'yemekBilgisi':
      'İzmir şambalisi olarak da adlandırılan bu tatlı buğday irmiği, toz şeker, süt, yoğurt, nişasta ve kabartma tozu ile hazırlanan bir tatlı. Tepside pişirilen hamurun üzerine piştikten sonra şerbet dökülmesi ile hazırlanan ve oldukça sevilen bir tatlı olan şambali tatlısı, badem ve fıstık ile süsleniyor. Şerbetli bir tatlı olması sebebiyle besleyici ve doyurucu. Bu sebeple özellikle akşam saatlerinde ve yemekten sonra tercih ediliyor.',
      'enlem': 38.460943915945364,
      'boylam': 27.212032085253192,
      'restoranIsmi': 'Restoran ismi',
    },
    {
      'isim': 'İzmir Köftesi',
      'gorsel':
      'https://i.lezzet.com.tr/images-xxlarge-recipe/izmir_kofte-22742567-6176-4e66-945b-8b3499f98bb3.jpg',
      'yemekBilgisi':
      'Akşam yemeklerin vazgeçilmezi olan İzmir Köftesi; kıyma, galeta unu ve domates sosu ile hazırlanıyor. Klasik köftelerden en önemli farkı ise kendine ait özel domates sosu. Yalnızca İzmir için değil Türkiye için en önemli besinlerden biri olan İzmir köftesi, hem yaz hem de kış aylarında tercih ediliyor. Doyurucu bir yemek olan İzmir köftesi genellikle domates, biber de patates gibi sebzeler ile bir arada sunuluyor. Sulu bir yemeğe benzeyen dolayısıyla hem lezzetli hem besleyici olan İzmir Köftesi, özellikle akşam yemeği için hazırlanır.',
      'enlem': 38.41994422800586,
      'boylam': 27.13374328524143,
      'restoranIsmi': 'Restoran ismi',
    },
    {
      'isim': 'İzmir Kumru',
      'gorsel':
      'https://cdn.getiryemek.com/restaurants/1676636783859_1125x522.jpeg',
      'yemekBilgisi':
      'Salam, sosis ve sucuk ile hazırlanan ve son olarak tulum peyniri ilave edilerek servis edilen kumru, İzmir’in ve Çeşme bölgesinin en sevilen yiyeceklerinden biri. Sabah kahvaltılarında ya da akşam saatlerinde tüketilebilecek dolayısıyla keyifli bir alternatif olan kumru, Türkiye’de en çok dikkat çeken atıştırmalıklardan biri. İzmir’den gelen ve en gözde lezzetlerden biri olan kumru, ketçap ve mayonez ile servis ediliyor. Türkiye’nin farklı noktalarında da kumruyla karşılaşmak mümkün. Ancak İzmir şehrinde yapılan ve orijinal kumrunun en önemli özelliği, kendine ait farklı ekmeği ve İzmir tulum peyniri ile hazırlanıyor olması. İçerisinde sosis, sucuk, salam ve peynir gibi pek çok farklı besini bulunduruyor olması oldukça besleyici hale gelmesini sağlıyor.',
      'enlem': 38.45166314758574,
      'boylam': 27.104763428607686,
      'restoranIsmi': 'Restoran ismi',
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Yenilecek Yemekler'),
      ),
      body: GridView.builder(
        padding: const EdgeInsets.all(8.0),
        gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
          crossAxisCount: 1,
          mainAxisSpacing: 10,
          crossAxisSpacing: 10,
          childAspectRatio: 3 / 2,
        ),
        itemCount: yemekler.length,
        itemBuilder: (context, index) {
          return GestureDetector(
            onTap: () {
              // Yeni sayfaya yönlendirme
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => YemekDetaySayfasiIzmir(
                    isim: yemekler[index]['isim']!,
                    gorsel: yemekler[index]['gorsel']!,
                    yemekBilgisi: yemekler[index]['yemekBilgisi']!,
                    enlem: yemekler[index]['enlem'], // Enlem parametresi burada gönderiliyor
                    boylam: yemekler[index]['boylam'],
                    restoranIsmi: yemekler[index]['restoranIsmi'],
                  ),
                ),
              );
            },
            child: Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    image: DecorationImage(
                      image: NetworkImage(yemekler[index]['gorsel']!),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(15),
                    color: Colors.black.withOpacity(0.4),
                  ),
                ),
                Center(
                  child: Text(
                    yemekler[index]['isim']!,
                    textAlign: TextAlign.center,
                    style: const TextStyle(
                      fontSize: 25,
                      fontWeight: FontWeight.bold,
                      color: Colors.white,
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class YemekDetaySayfasiIzmir extends StatelessWidget {
  final String isim;
  final String gorsel;
  final String yemekBilgisi;
  final double enlem; // Enlem parametresi eklendi
  final double boylam;
  final String restoranIsmi;

  const YemekDetaySayfasiIzmir(
      {Key? key,
        required this.isim,
        required this.gorsel,
        required this.yemekBilgisi,
        required this.enlem,
        required this.boylam,
        required this.restoranIsmi})
      : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(isim),
      ),
      body: SingleChildScrollView(
        // SingleChildScrollView eklendi
        child: Padding(
          // Padding ile içerik etrafında boşluk bırakıyoruz
          padding: const EdgeInsets.all(16.0),
          child: Column(
            // Column içinde tüm içerikleri sıralıyoruz
            crossAxisAlignment: CrossAxisAlignment.start, // Sola hizalamak için
            children: [
              // Görselin kenarlarını yuvarlatmak için ClipRRect kullanıyoruz
              ClipRRect(
                borderRadius:
                BorderRadius.circular(40), // Kenar yuvarlama oranı
                child: Image.network(
                  gorsel,
                  width: double.infinity, // Görselin genişliğini tam yapıyoruz
                  height: 300, // Görselin yüksekliğini belirliyoruz
                  fit: BoxFit
                      .cover, // Görselin orantılı şekilde sığmasını sağlıyoruz
                ),
              ),
              const SizedBox(height: 20),
              Text(
                yemekBilgisi, // Yemek hakkında detaylı bilgi
                style:
                const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => YemekleriHaritadaGoster(
                          enlem: enlem, // Parametreleri burada gönderiyoruz
                          boylam: boylam,
                          restoranIsmi:
                          restoranIsmi, // Parametreleri burada gönderiyoruz
                        ),
                      ),
                    );
                  },
                  child: const Text('Haritada Bul'),
                ),
              ),
            ],
          ),
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceAround,
          children: [
            // Ana sayfa butonu
            IconButton(
              icon: const Icon(Icons.home),
              onPressed: () {
                // Ana sayfaya yönlendirme
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(builder: (context) => const SehirSayfasi()),
                );
              },
            ),
            // Favoriler butonu
            IconButton(
              icon: const Icon(Icons.favorite),
              onPressed: () {
                // Favoriler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const FavorilerSayfasi()),
                );
              },
            ),
            IconButton(
              icon: const Icon(Icons.check),
              onPressed: () {
                // Gidilen şehirler sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const GidilenlerSayfasi()),
                );
              },
            ),
            // Profil butonu
            IconButton(
              icon: const Icon(Icons.person),
              onPressed: () {
                // Profil sayfasına yönlendirme
                Navigator.push(
                  context,
                  MaterialPageRoute(
                      builder: (context) => const ProfilSayfasi()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}